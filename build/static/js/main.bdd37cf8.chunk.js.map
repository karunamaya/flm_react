{"version":3,"sources":["Plots.js","Table.js","components/ReadOnlyRow.js","index.js","components/EditableRow.js"],"names":["mi","App","points","valuesPlots","colors","plots","i","dataTemp","j","Object","keys","length","x","y","color","className","size","data","style","strokeLinejoin","strokeWidth","width","height","display","stroke","title","line","ticks","text","fill","ReactDOM","render","document","querySelector","Table","model","levelPravil","changeList","changeCoeff","selectedTM","tempus","gettingLevelPravil","select","cartesian2","arg","r","args","reduceRight","cont","factor","arr","l","a","slice","Array","prototype","push","bind","undefined","my","TM","options","name","urovneyObrabotki","id","termsCount","termsNames","term1","term2","term3","coords","x1","y1","x2","y2","x3","y3","x4","y4","plotsColors","pravila_end","1","shapka","termsInputArray2","tempArray","selectedArray","otarray","doarray","toNode","massivFrom","graph","edges","to","Number","from","otKokogo","doKokogo","console","log","termName","String","map","el","urPravil","eval","temp","temp2","split","ChangeSelect","event","preventDefault","target","getAttribute","row","position","selectedIndex","ChangeCoeff","val","value","urovPravil","prav","index","array","change","urovenPravil","pravila","ReadOnlyRow","rowNumber","rightSide","models","CustomSelect","poryadok","onChange","defaultValue","option","start","class","onInput","type","step","min","max","require","XMLParser","inputLevelCounter","input_Name","FlmTree","randomColor","red","Math","floor","random","toString","padStart","green","blue","createNode","esModel","counter","setEsModel","nodes","font","label","shape","physics","group","fl","networks","network","locale","interaction","hover","tooltipDelay","selectable","multiselect","dragView","manipulation","enabled","initiallyActive","addNode","editEdge","addEdge","callback","colorChanges","methods","UpdatePravila","setData","addEdgeMode","deleteEdge","splice","deleteNode","toUninstall","willUpdate","newNames","RenderSelectedTM","layout","hierarchical","direction","sortMethod","blockShifting","levelSeparation","useState","fullName","address","phoneNumber","email","addFormData","setAddFormData","editFormData","setEditFormData","editContactId","setEditContactId","xmlFiles","setXmlFiles","xmlModeling","setxmlModeling","xmlName","setXmlName","indexBodyHtml","setindexBodyHtml","o2x","window","onbeforeunload","useEffect","fetch","then","response","json","message","Name","Author","userRequest","structure","pravilaMode","events","release","getPositions","dragEnd","pos","click","doubleClick","canvas","pointer","AddTMInputLevel","showPopup","nymberTM","urovenPrav","leftSide","peresobran","rightPeresobran","RenderPravila","ChangeX","zelen","fiolet","obrabotka","krasn","urovniObrabotki","pp","getLevelTMObrabotki","numberKey","key","outCounter","leftArray","cartes","cartesian","start2","start3","rSide","changeEsName","RenderOptionsMenu","changeEsAuthor","ChangePravila","urovenObrabotki","ChangePlotColor","TmNumber","TermNumber","deletePointplot","deleteNumber","addNewPointPlot","newPointNumber","newCoordsNameX","newCoordsNameY","changeCoordsValue","deleteTerm","newTermName","pop","popup","addNewTerm","changeTermName","newName","ChangeSelectedTMName","indexBodyHtml2","setindexBodyHtml2","setNetwork","states","uroven","zz","obj","includes","changePravila","coeff","urObr","SendXmlModelling","tempXML","pravilaDict1","pravilaDict","t","tempStructure","file","Blob","FormData","append","JSON","stringify","axios","post","res","SaveToXMLOnComputer","element","createElement","body","appendChild","href","URL","createObjectURL","download","Pravila","okolo","ConsoleXml","xmlStr","sendToServer","File","XmlOnServer","iconv","default","get","responseType","responseEncoding","encodedData","decode","Buffer","jObj","parse","catch","match","ChangeColor","DeletePointPlot","changeCoordsValues","AddNewTerm","DeleteTerm","indexB","RenderModelingMenu","nameTM","number","values","changeSelectedTMName","tm","points4Plots","pravilaButton","onClick","nm","placeholder","stringLabel","stringNameTerm","xName","yName","GoToPravila","handleSubmit","pravila_temp","handleFileSelect","files","inp_termMn_1","getNetwork","right","border","getElementById"],"mappings":"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","file":"static/js/main.bdd37cf8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"react-vis/dist/style.css\";\r\n\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  VerticalGridLines,\r\n  HorizontalGridLines,\r\n  LineMarkSeries,\r\n  DiscreteColorLegend\r\n} from \"react-vis\";\r\n\r\nlet mi=0\r\n//<DiscreteColorLegend  orientation=\"horizontal\" items = {series}    />\r\nlet series= [{\r\n  title: \"Apples\",\r\n  color : \"#000000\",\r\n},\r\n{title: \"Orange\",\r\ndisabled: false,\r\ndata: [{ x: 0, y: 12 }, { x: 1, y: 22 }],\r\ncolor : \"#FF6c0A\",\r\n},\r\n\r\n]\r\n\r\nfunction getRandomColor() {\r\nvar letters = '0123456789ABCDEF';\r\nvar color = '#';\r\nfor (var i = 0; i < 6; i++)\r\n{\r\n  color += letters[Math.floor(Math.random() * 16)];\r\n}\r\nreturn color;\r\n}\r\nexport default function App(points, valuesPlots, colors) {\r\n  if(valuesPlots > 0)\r\n  {\r\n    mi = valuesPlots\r\n  }\r\n  let x1_1,x2_1,x3_1,y1_1,y2_1,y3_1\r\n  let x4_1 = 1\r\n  let y4_1 = 0\r\n  let x1_2,x2_2,x3_2,x4_2,y1_2,y2_2,y3_2,y4_2\r\n  let x1_3,x2_3,x3_3,x4_3,y1_3,y2_3,y3_3,y4_3\r\n  let x1_4,x2_4,x3_4,x4_4,y1_4,y2_4,y3_4,y4_4\r\n\r\n\r\n\r\n  let x1_5,x2_5,x3_5,x4_5,y1_5,y2_5,y3_5,y4_5\r\n  let x1_6,x2_6,x3_6,x4_6,y1_6,y2_6,y3_6,y4_6\r\n  let x1_7,x2_7,x3_7,x4_7,y1_7,y2_7,y3_7,y4_7\r\n  let x1_8,x2_8,x3_8,x4_8,y1_8,y2_8,y3_8,y4_8\r\n  let x1_9,x2_9,x3_9,x4_9,y1_9,y2_9,y3_9,y4_9\r\n  let x1_10,x2_10,x3_10,x4_10,y1_10,y2_10,y3_10,y4_10\r\n  const lines = [{x:5,y:2},{x:6,y:2}]\r\n\r\n\r\n  let color = []\r\n  let items = {title: \"hello\", color : \"#D1D0CE\"}\r\n/*\r\n  //заполнить все переменные для всех графиков значениями координат\r\n  for (let i = 0; i < mi; i++)\r\n  {\r\n    if(typeof points[i] == 'object' )\r\n    {\r\n      let b = points[i]\r\n      eval(\"x1_\"+(i+1) + \"=\" +b[0]) \r\n      eval(\"y1_\"+(i+1) + \"=\" +b[1]) \r\n      eval(\"x2_\"+(i+1) + \"=\" +b[2]) \r\n      eval(\"y2_\"+(i+1) + \"=\" +b[3]) \r\n      eval(\"x3_\"+(i+1) + \"=\" +b[4]) \r\n      eval(\"y3_\"+(i+1) + \"=\" +b[5]) \r\n      eval(\"x4_\"+(i+1) + \"=\" +b[6]) \r\n      eval(\"y4_\"+(i+1) + \"=\" +b[7])  \r\n      color[i] = getRandomColor();\r\n    }\r\n  }\r\n*/\r\n let plots = []\r\nfor (let i = 0; i < mi; i++)\r\n  {\r\n    if(typeof points[i] == 'object' )\r\n    {\r\n      let dataTemp = [{}]\r\n      for(let j = 0; j <Object.keys(points[i]).length/2; j++)\r\n      {dataTemp[j]=({x: points[i][\"x\"+(j+1)],y: points[i][\"y\"+(j+1)] })\r\n\r\n      }\r\n \r\n  plots[i]=[<LineMarkSeries\r\n  color =  {colors[i]}\r\n  className=\"1-series\"\r\n  size='3.5'\r\n  \r\n\r\n\r\n  data={dataTemp}\r\n  style={{\r\n    strokeLinejoin: \"round\",\r\n    strokeWidth: 2\r\n  }}\r\n/>\r\n]\r\n   } }\r\n  return (    \r\n    <XYPlot width={700} height={200} display = \"inline-block\">\r\n      <HorizontalGridLines style={{ stroke: \"#D1D0CE\" }} />\r\n      <VerticalGridLines style={{ stroke: \"#D1D0CE\" }} />\r\n      <XAxis\r\n        title=\"x\"\r\n        style={{\r\n          line: { stroke: \"#111111\" },\r\n          ticks: { stroke: \"#6b6b76\" },\r\n          text: { stroke: \"none\", fill: \"#6b6b76\" }\r\n        }}\r\n      />\r\n       <YAxis\r\n        title=\"Коэфф. уверенности\"\r\n        style={{\r\n          line: { stroke: \"#6b6b76\" },\r\n          ticks: { stroke: \"#6b6b76\" },\r\n          text: { stroke: \"none\", fill: \"#6b6b76\"}\r\n        }}\r\n      />\r\n      \r\n  {plots}\r\n\r\n      \r\n\r\n  \r\n    </XYPlot>\r\n  );\r\n  \r\n}\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));","import React, { useState, Fragment } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport \"./Table.css\";\r\nimport data from \"./mock-data.json\";\r\nimport ReadOnlyRow from \"./components/ReadOnlyRow\";\r\nimport EditableRow from \"./components/EditableRow\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { mkdirSync } from \"fs\";\r\n\r\n\r\nexport  default function Table(model, levelPravil, changeList, changeCoeff,selectedTM) {\r\n  let tempus=[[]]\r\n  let gettingLevelPravil = levelPravil\r\n\r\n \r\n  let select = selectedTM\r\n  if (select == undefined)\r\n  select = 1\r\n\r\n  if(typeof(gettingLevelPravil) != \"string\")\r\n  {\r\n    gettingLevelPravil =1 \r\n  \r\n  }\r\n  \r\nfunction cartesian2(arg) {\r\n  var r = [], args = arg;\r\n  args.reduceRight(function(cont, factor, i) {\r\n      return function(arr) {\r\n          for (var j=0, l=factor.length; j<l; j++) {\r\n              var a = arr.slice(); // clone arr\r\n              a[i] = factor[j];\r\n              cont(a);\r\n          }\r\n      };\r\n  }, Array.prototype.push.bind(r))(new Array(args.length));\r\nlet t = r.length \r\n  return r;\r\n}\r\nlet my = model\r\n\r\n\r\nif(my.TM == undefined)\r\nmy = {   \r\n  options: {\r\n    name: \"tm 1\",\r\n    urovneyObrabotki: 3,\r\n  },\r\n  TM: \r\n  [\r\n    {\r\n        id: '1',\r\n        name: '1212',\r\n        termsCount:3,\r\n        termsNames: {term1: '1212', term2: '1212', term3:'sd',},\r\n        coords:[{x1:0, y1:0, x2:1, y2:1, x3:1, y3:5},\r\n                {x1:2, y1:0, x2:3, y2:1, x3:3, y3:5 },\r\n                {x1:4, y1:0, x2:5, y2:2, x3:6, y3:2, x4:7, y4:0 } ,       \r\n              ],    \r\n              plotsColors:['#000000','#000000','#FF00D0',] ,   \r\n    },\r\n    {\r\n      id: '2',\r\n      name: 'tm2',\r\n      termsCount:3,\r\n      termsNames: {term1: 'dfdf', term2: 'dfdf', term3:'�dfdf',},\r\n      coords:[{x1:0, y1:0, x2:1, y2:1, x3:2, y3:0},\r\n              {x1:2, y1:0, x2:3, y2:1, x3:4, y3:0 },\r\n              {x1:4, y1:0, x2:5, y2:1, x3:6, y3:0, } ,        \r\n            ],    \r\n            plotsColors:['#00FF00','#E30202','#FF00D0',] ,     \r\n\r\n    },\r\n    {\r\n      id: '3',\r\n      name: 'dfdf',\r\n      termsCount:3,\r\n      termsNames: {term1: 'dfdf', term2: 'dfdf', term3:'dfdf',},\r\n      coords:[{x1:0, y1:0, x2:1, y2:1, x3:2, y3:0},\r\n              {x1:2, y1:0, x2:3, y2:1, x3:4, y3:0 },\r\n              {x1:4, y1:0, x2:5, y2:1, x3:6, y3:0, } ,        \r\n            ],    \r\n            plotsColors:['#00FF00','#E30202','#FF00D0',] ,     \r\n\r\n    },\r\n  ]  ,\r\n  pravila_end: \r\n  {1:['1_1...1_1',\r\n  '1_2...2_0.8',\r\n  '1_3...1_0.9',\r\n\r\n  '2_1...2_0.7',\r\n  '2_2...1_0.9',\r\n  '2_3...2_1',\r\n\r\n  '3_1...1_0.9',\r\n  '3_2...1_0.8',\r\n  '3_3...2_0.9',\r\n  \r\n\r\n\r\n  ], }}\r\n \r\n  const shapka= [];\r\n/*\r\n\r\n<th>№</th>\r\n              <th>Name</th>\r\n              <th>Address</th>\r\n              <th>Phone Number</th>\r\n              <th>Email</th>\r\n              <th>Actions</th>\r\n*/\r\n  \r\n  let termsInputArray2=[[]]\r\n  let tempArray=[]\r\n  let selectedArray=[]\r\n  let otarray=[\r\n    {\r\n          id: '1',\r\n          name: '1212',\r\n          termsCount:3,\r\n          termsNames: {term1: '1212', term2: '1212', term3:'sd',},\r\n          coords:[{x1:0, y1:0, x2:1, y2:1, x3:1, y3:5},\r\n                  {x1:2, y1:0, x2:3, y2:1, x3:3, y3:5 },\r\n                  {x1:4, y1:0, x2:5, y2:2, x3:6, y3:2, x4:7, y4:0 } ,       \r\n                ],    \r\n                plotsColors:['#000000','#000000','#FF00D0',] ,   \r\n      },\r\n      {\r\n        id: '2',\r\n        name: 'tm2',\r\n        termsCount:3,\r\n        termsNames: {term1: 'dfdf', term2: 'dfdf', term3:'�dfdf',},\r\n        coords:[{x1:0, y1:0, x2:1, y2:1, x3:2, y3:0},\r\n                {x1:2, y1:0, x2:3, y2:1, x3:4, y3:0 },\r\n                {x1:4, y1:0, x2:5, y2:1, x3:6, y3:0, } ,        \r\n              ],    \r\n              plotsColors:['#00FF00','#E30202','#FF00D0',] ,     \r\n      },\r\n      {\r\n        id: '3',\r\n        name: 'dfdf',\r\n        termsCount:3,\r\n        termsNames: {term1: 'dfdf', term2: 'dfdf', term3:'dfdf',},\r\n        coords:[{x1:0, y1:0, x2:1, y2:1, x3:2, y3:0},\r\n                {x1:2, y1:0, x2:3, y2:1, x3:4, y3:0 },\r\n                {x1:4, y1:0, x2:5, y2:1, x3:6, y3:0, } ,        \r\n              ],    \r\n              plotsColors:['#00FF00','#E30202','#FF00D0',] ,   \r\n      },\r\n    ]  \r\n  let doarray=[   \r\n      {\r\n          id: '1',\r\n          name: '1212',\r\n          termsCount:3,\r\n          termsNames: {term1: '1212', term2: '1212', term3:'sd',},\r\n          coords:[{x1:0, y1:0, x2:1, y2:1, x3:1, y3:5},\r\n                  {x1:2, y1:0, x2:3, y2:1, x3:3, y3:5 },\r\n                  {x1:4, y1:0, x2:5, y2:2, x3:6, y3:2, x4:7, y4:0 } ,       \r\n                ],    \r\n                plotsColors:['#000000','#000000','#FF00D0',] ,    \r\n      },\r\n      {\r\n        id: '2',\r\n        name: 'tm2',\r\n        termsCount:3,\r\n        termsNames: {term1: 'dfdf', term2: 'dfdf', term3:'�dfdf',},\r\n        coords:[{x1:0, y1:0, x2:1, y2:1, x3:2, y3:0},\r\n                {x1:2, y1:0, x2:3, y2:1, x3:4, y3:0 },\r\n                {x1:4, y1:0, x2:5, y2:1, x3:6, y3:0, } ,        \r\n              ],    \r\n              plotsColors:['#00FF00','#E30202','#FF00D0',] ,     \r\n      },\r\n      {\r\n        id: '3',\r\n        name: 'dfdf',\r\n        termsCount:3,\r\n        termsNames: {term1: 'dfdf', term2: 'dfdf', term3:'dfdf',},\r\n        coords:[{x1:0, y1:0, x2:1, y2:1, x3:2, y3:0},\r\n                {x1:2, y1:0, x2:3, y2:1, x3:4, y3:0 },\r\n                {x1:4, y1:0, x2:5, y2:1, x3:6, y3:0, } ,        \r\n              ],    \r\n              plotsColors:['#00FF00','#E30202','#FF00D0',] ,     \r\n      },\r\n    ]     \r\n  //otarray.push(my.TM[0])\r\n  //otarray.push(my.TM[1])\r\n  //doarray.push(my.TM[2])\r\n\r\nif(model.TM!=undefined)\r\n{\r\n  otarray = []\r\n  doarray=[]\r\n  let toNode = selectedTM  \r\n  let massivFrom =[] \r\n   \r\n  for(let i = 0; i < my.graph.edges.length; i ++)\r\n        {\r\n          if(my.graph.edges[i].to == Number(toNode))\r\n          {\r\n            massivFrom.push(my.graph.edges[i].from )\r\n          }\r\n        }\r\n  \r\n        for(let i = 0; i <massivFrom.length; i ++)\r\n        {\r\n          for(let j = 0; j <my.TM.length; j ++)\r\n          {\r\n            if(my.TM[j].id == Number(massivFrom[i]-1))\r\n          {\r\n            otarray.push(my.TM[j])\r\n          }\r\n  \r\n          }\r\n  \r\n        }\r\n        for(let i = 0; i < my.TM.length; i ++)\r\n        {\r\n          if(my.TM[i].id == Number(toNode-1))\r\n          { \r\n            doarray.push(my.TM[i])\r\n          }\r\n        }\r\n} else {\r\n}\r\n \r\n  \r\n   let otKokogo = otarray//eval(\"my.TM\")// dfdf\r\n  let doKokogo =doarray\r\n\r\n \r\n  \r\n  shapka.push(<th>tm</th>)\r\n  for(let i = 0; i < otarray.length; i++)\r\n  {\r\n   let  name = otarray[i].name\r\nshapka.push(<th>{otarray[i].name}</th>)\r\n\r\n  }\r\n\r\n  for(let i = 0; i < doarray.length; i++)\r\n  {\r\n   let  name = doarray[i].name\r\nshapka.push(<th>{doarray[i].name}</th>)\r\n\r\n  }\r\n\r\n \r\n  for(let i = 0; i < otKokogo.length; i++)\r\n{    \r\n  \r\n  for(let j = 0; j < otKokogo[i].termsCount; j++)\r\n  {    \r\n    console.log(otKokogo[i].termsNames)\r\n    let termName = otKokogo[i].termsNames['term'+String(j+1)]     \r\n    tempArray[j] = termName\r\n           \r\n  } \r\n    termsInputArray2[i]=(tempArray)    \r\n    tempArray = []  \r\n}\r\n\r\ntermsInputArray2 =cartesian2(termsInputArray2)\r\n\r\ntermsInputArray2.map((el)=> (el.push(\"...\")))\r\n\r\n  for(let i = 0; i < doKokogo.length; i++)\r\n  {    termsInputArray2.map((el)=> (\r\n\r\n    el.push(1)\r\n    \r\n    ))\r\n\r\n    for(let j = 0; j <doKokogo[i].termsCount; j++)\r\n    {     \r\n      let termName = doKokogo[i].termsNames['term'+String(j+1)]      \r\n      tempArray[j] = {id: (j+1), name :termName}     \r\n\r\n    } \r\n    selectedArray[i]=(tempArray)    \r\n      tempArray = []  \r\n  }\r\n \r\n\r\nfor(let i = 0; i < doKokogo.length; i++)\r\n{    let tempArray=[]\r\n  for(let j = 0; j < doKokogo[i].termsCount; j++)\r\n  {     \r\n    let termName = doKokogo[i].termsNames['term'+String(j+1)]     \r\n    tempArray[j] = {id: (j+1), name :termName}     \r\n\r\n  } \r\n  selectedArray[i]=(tempArray)    \r\n    tempArray = []  \r\n}\r\nconsole.log(selectedTM)\r\nlet urPravil = eval(\"my.pravila_end[\" +selectedTM+\"]\") \r\nif(urPravil!= undefined)\r\n  {\r\n    \r\n    \r\n    for(let i =0; i<urPravil.length;i++)\r\n    {\r\n      let temp \r\n      let temp2 =[]\r\n      for(let j=0; j< urPravil[i].split(\"...\")[0].split(\"_\").length+1; j++)    \r\n    {\r\n      let termName\r\n        if(j==0)\r\ntermName = i+1\r\n        else{ temp= urPravil[i].split(\"...\")[0].split(\"_\")[j-1]\r\n         termName = eval(\"otKokogo[\"+(j-1)+\"].termsNames['term\"+(temp)+\"']\") \r\n       \r\n  }\r\n  temp2[j] = termName\r\n\r\n    }\r\n\r\n  tempus[i] = temp2\r\n  \r\n    \r\n\r\n   \r\n  \r\n  \r\n\r\n  }}\r\n\r\n\r\n\r\n  const ChangeSelect = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n   let location = event.target.id.split(\"__\")[0].split(\"_\")[0]\r\n let row = event.target.id.split(\"__\")[0].split(\"_\")[1]\r\n let position = event.target.id.split(\"__\")[1]\r\n position = position.split(\"/\")[0]\r\nchangeList(row, position,event.target.options[event.target.selectedIndex].id, select)\r\n\r\nfor(let i = 0; i<termsInputArray2[row-1].length; i++ )\r\n{\r\n\r\nif(termsInputArray2[position-1][i] == \"...\")\r\n{\r\n  termsInputArray2[position-1][Number(Number(i)+Number(position))] = Number(event.target.options[event.target.selectedIndex].id)\r\n  break\r\n\r\n}}};\r\n\r\nconst ChangeCoeff= (event) => {\r\n  event.preventDefault();\r\n\r\nlet val = event.target.value\r\n\r\n // const fieldName = event.target.getAttribute(\"name\");\r\n let location = event.target.id.split(\"__\")[0].split(\"_\")[0]\r\nlet row = event.target.id.split(\"__\")[0].split(\"_\")[1]\r\nlet position = event.target.id.split(\"__\")[1]\r\nlet urovPravil =  select//event.target.id.split(\"__\")[0].split(\"_\")[0]\r\nposition = position.split(\"/\")[0]\r\nchangeCoeff(row, position,val,urovPravil)\r\nconsole.log(\"row=\"+row)\r\nconsole.log(\"position=\"+position)\r\nconsole.log(\"urovPravil=\"+urovPravil)\r\n\r\n\r\n/*\r\nfor(let i = 0; i<termsInputArray2[location-1].length; i++ )\r\n{\r\n\r\nif(termsInputArray2[location-1][i] == \"...\")\r\n{\r\ntermsInputArray2[location-1][Number(Number(i)+Number(position))] = Number(event.target.options[event.target.selectedIndex].id)\r\nbreak\r\n\r\n}}*/\r\n};\r\nlet prav\r\n\r\nprav = eval(\"my.pravila_end\")\r\nconsole.log(prav)\r\n\r\n\r\n  //console.log(termsInputArray)\r\n\r\n //console.log(cartesian(i1)) \r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <form >\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n                {shapka}\r\n              \r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {/*contacts.map((contact) => (\r\n              <Fragment>\r\n                { <ReadOnlyRow\r\n                    contact={contact}\r\n                    handleEditClick={handleEditClick}\r\n                    handleDeleteClick={handleDeleteClick}\r\n                  />}\r\n              </Fragment>\r\n            ))*/}\r\n            {\r\n                      tempus.map((stroke,index) => (\r\n                        <Fragment>\r\n                          { <ReadOnlyRow\r\n                              stroke={stroke}\r\n                               array= {selectedArray}\r\n                               change = {ChangeSelect}\r\n                               urovenPravil = {levelPravil}\r\n                               index = {index+1}\r\n                               pravila = {prav[Number(select)][index]}   \r\n                               changeCoeff = {ChangeCoeff}                            \r\n                            />}\r\n                        </Fragment>\r\n                        \r\n                      ))\r\n\r\n\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n\r\n   \r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nReactDOM.render(<Table />, document.querySelector(\"#root\"));\r\n","import React from \"react\";\n\nconst ReadOnlyRow = ({ stroke,  array,change, urovenPravil, index, pravila, changeCoeff }) => {\n \n  let rowNumber = index\nlet rightSide = pravila.split(\"...\")[1].split(\"-\")\n\nif(rightSide == null)\nrightSide= \"1_1-1_1\"\n\n/* \n  <td>{stroke[0]}</td>\n      <td>{stroke[1]}</td>\n      <td>{stroke[2]}</td>\n      <td>{stroke[3]}</td>\n      <td>1\n       {/* <button\n          type=\"button\"\n          onClick={(event) => handleEditClick(event, contact)}\n        >\n          Edit\n        </button>\n        <button type=\"button\" onClick={() => handleDeleteClick(contact.id)}>\n          Delete\n        </button>\n        </td>\n        <td>1</td>\n*/\n\nlet models= [\n  {\n      id: 1,\n      name: '',\n  },\n\n]\nif(typeof(stroke[1]) == \"string\" &&array.length >0)\nfor(let i =0;i < array[0].length; i++)\n{\nmodels[i] = {id:(i+1),\nname:array[0][i]\n}\n\n}\n\n    // при выборе нового значения в категории\n    const onCategoriesSelectChange = (e) => {\n\n      // преобразуем выбранное значение опции списка в число - идентификатор категории\n      const categoryId = parseInt(e.target.options[e.target.selectedIndex].value);\n  \n      console.log(e.target.options[e.target.selectedIndex].label)\n  }\n\n\n\n\n// компонент пользовательского выпадающего списка\nconst CustomSelect = ({ id, options, onChange, poryadok }) => {\n  let b\n  return (\n      <select className=\"custom-select\" id={id} onChange={change} defaultValue={options[rightSide[poryadok].split(\"_\")[0]-1].name}>\n          { options.map((option, index) =>\n             <option key={id + index} id={option.id} value = {option.name}>{option.name}</option>\n          ) }\n\n      </select>\n  )\n}\n  let arr = []\n  let start = true\n  for (let i = 0; i < stroke.length; i ++)\n  {\nif(start && typeof(stroke[i])=='string')\n{arr[0] =<td>{stroke[i]}</td>\n\n\n}\n\n   else {\n    arr.push(<td>{stroke[i]}</td>)\n   }\n   \n   \nstart = false\n\n  }\n  if(typeof(stroke[1]) == \"string\" &&array.length >0)\n  for(let i =0; i <array.length; i++)\n  {\n    let temp = urovenPravil+\"_\"+rowNumber+\"_\"+\"_\"+(i+1)+\"/\" +array.length\n    arr.push(<td><CustomSelect id={temp} options={array[i]}  poryadok ={i}/>\n    <input  class = \"plotInput\" onInput={changeCoeff}  type='number' step=\"0.1\" min='0' max='1'  id = {temp} name=\"d\"  value={rightSide[i].split(\"_\")[1]} />\n    </td>)\n  }\n\n  return (\n    <tr>\n      {arr}\n    \n    </tr>\n  );\n};\n//  } \nexport default ReadOnlyRow;\n","import Graph from \"react-graph-vis\";\r\nimport React, {  useState,useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport './index.css';\r\nimport App from './Plots.js';\r\nimport Table from './Table.js';\r\nimport \"react-vis/dist/style.css\";\r\nimport axios from \"axios\";\r\nconst { XMLParser} = require(\"fast-xml-parser\");\r\n\r\nlet inputLevelCounter = 0;\r\nlet input_Name;\r\n\r\n\r\n function FlmTree() {\r\n\r\n  function randomColor() {\r\n    const red = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\r\n    const green = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\r\n    const blue = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\r\n    return `#${red}${green}${blue}`;\r\n  }\r\n  const createNode = (x, y) => {\r\n    const color = randomColor();\r\n\r\n    esModel.counter++\r\n    setEsModel(esModel)\r\n    esModel.graph.nodes.push({ x: x, y: y,color: \"#F5DEB3\", id: esModel.counter, font: { size: 10 }, size: 30, label: \"\", title: \"\", shape: 'dot', physics: 'false', group:3 }       \r\n    )\r\n  };\r\n  function fl(){\r\n\r\n    console.log( networks.network);\r\n\r\n  }\r\n  const options =  {\r\n    locale: 'ru',\r\n      interaction: {\r\n        hover: true,\r\n        tooltipDelay: 10,\r\n        selectable: true,\r\n        multiselect: true,\r\n        dragView: true,  \r\n      },\r\n      manipulation: {\r\n        enabled: true,\r\n         initiallyActive: true,\r\n          addNode: false,\r\n          editEdge: false,\r\n          addEdge: function (data, callback) {\r\n            esModel.graph.edges.push(data)\r\n            callback(data);           \r\n        let colorChanges = {}\r\n        for(let i = 0; i < esModel.graph.nodes.length; i++)\r\n{\r\n  colorChanges[esModel.graph.nodes[i].id] = [0,0]\r\n}\r\nfor(let i = 0; i < esModel.graph.edges.length; i++)\r\n{colorChanges[esModel.graph.edges[i].to][1]=1\r\n  colorChanges[esModel.graph.edges[i].from][0]=1\r\n  \r\n\r\n}\r\n\r\nesModel.pravila_end = []\r\nsetEsModel(esModel)\r\nfor(let i = 0; i <esModel.graph.nodes.length; i++)\r\n{\r\n  \r\n  if(colorChanges[esModel.graph.nodes[i].id][0]== 1&&colorChanges[esModel.graph.nodes[i].id][1]== 0 )\r\n  {\r\n    esModel.graph.nodes[i].color = \"#008000\" \r\n\r\n  }\r\n  if(colorChanges[esModel.graph.nodes[i].id][0]== 1&&colorChanges[esModel.graph.nodes[i].id][1]== 1 )\r\n  {\r\n    esModel.graph.nodes[i].color = \"#DA70D6\" \r\n  }\r\n  if(colorChanges[esModel.graph.nodes[i].id][0]== 0&&colorChanges[esModel.graph.nodes[i].id][1]== 1 )\r\n  {\r\n    esModel.graph.nodes[i].color = \"#FF0000\"\r\n  }\r\n\r\n}\r\nfor(let i = 0; i <esModel.graph.nodes.length; i++)\r\n{ console.log(esModel.graph.nodes[i].color)\r\nif(String(esModel.graph.nodes[i].color) == \"#FF0000\" || String(esModel.graph.nodes[i].color) == \"#DA70D6\"  )\r\n  {   \r\n    esModel.methods.UpdatePravila(esModel.graph.nodes[i].id)\r\n}\r\n}\r\nsetEsModel(esModel)\r\nsetEsModel(esModel)\r\nnetworks.network.setData({nodes:esModel.graph.nodes, edges:esModel.graph.edges})\r\n            networks.network.addEdgeMode();            \r\n        },\r\n        deleteEdge: function (data, callback) {\r\n\r\n          callback(data);\r\n          \r\n          for(let i = 0; i < esModel.graph.edges.length; i++)\r\n          {\r\n            if (esModel.graph.edges[i].id == data.edges[0]) {\r\n              esModel.graph.edges.splice(i,1)\r\n              break\r\n            }          \r\n          }\r\n          \r\n          let colorChanges = {}\r\n\r\n          for(let i = 0; i < esModel.graph.nodes.length; i++)\r\n  {\r\n    colorChanges[esModel.graph.nodes[i].id] = [0,0]\r\n  }\r\n  for(let i = 0; i < esModel.graph.edges.length; i++)\r\n  {colorChanges[esModel.graph.edges[i].to][1]=1\r\n    colorChanges[esModel.graph.edges[i].from][0]=1  \r\n  }\r\n \r\n  esModel.pravila_end = []\r\n  setEsModel(esModel)\r\n  for(let i = 0; i <esModel.graph.nodes.length; i++)\r\n  {    \r\n    if(colorChanges[esModel.graph.nodes[i].id][0]== 1&&colorChanges[esModel.graph.nodes[i].id][1]== 0 )\r\n    {\r\n      esModel.graph.nodes[i].color = \"#008000\" \r\n    }\r\n    if(colorChanges[esModel.graph.nodes[i].id][0]== 1&&colorChanges[esModel.graph.nodes[i].id][1]== 1 )\r\n    {\r\n      esModel.graph.nodes[i].color = \"#DA70D6\" \r\n    }\r\n    if(colorChanges[esModel.graph.nodes[i].id][0]== 0&&colorChanges[esModel.graph.nodes[i].id][1]== 1 )\r\n    {\r\n      esModel.graph.nodes[i].color = \"#FF0000\"\r\n    }\r\n    if(colorChanges[esModel.graph.nodes[i].id][0]== 0&&colorChanges[esModel.graph.nodes[i].id][1]== 0 )\r\n    {\r\n      esModel.graph.nodes[i].color = \"#F5DEB3\"\r\n    }\r\n  \r\n  }\r\n  for(let i = 0; i <esModel.graph.nodes.length; i++)\r\n  {\r\n  if(String(esModel.graph.nodes[i].color) == \"#FF0000\" || String(esModel.graph.nodes[i].color) == \"#DA70D6\"  )\r\n    {\r\n\r\n      esModel.methods.UpdatePravila(esModel.graph.nodes[i].id)\r\n  }\r\n}\r\n  setEsModel(esModel)\r\n      networks.network.setData({nodes:esModel.graph.nodes, edges:esModel.graph.edges})          \r\n      },\r\n        deleteNode: function (data, callback) {          \r\n          callback(data);\r\n          let toUninstall = []\r\n          \r\n          let willUpdate = false\r\n         for(let i = 0; i < esModel.graph.edges.length; i++)\r\n         {if( esModel.graph.edges[i].from == data.nodes[0]  ||esModel.graph.edges[i].to == data.nodes[0]  )\r\n            { \r\n              toUninstall.push(i)              \r\n            }   \r\n         }         \r\n         for(let i = 0; i <esModel.graph.nodes.length; i++)\r\n         {\r\n          if( esModel.graph.nodes[i].id == data.nodes[0] && esModel.graph.nodes[i].color == \"#F5DEB3\")\r\n          {\r\n            willUpdate = true          \r\n          }\r\n\r\n          if(esModel.graph.nodes[i].id == data.nodes[0] && (esModel.graph.nodes[i].color == \"#008000\" || esModel.graph.nodes[i].color == \"#DA70D6\"|| esModel.graph.nodes[i].color == \"#FF0000\"))\r\n          {\r\n            esModel.pravila_end = []\r\n          }\r\n         }\r\n       \r\n         for(let i = 0; i < toUninstall.length; i++)\r\n         {\r\n          esModel.graph.edges.splice(toUninstall[toUninstall.length-1-i], 1);\r\n         }\r\n         console.log(esModel.graph.edges)\r\n        // esModel.graph.edges.splice(i, 1);\r\n          for(let i = 0; i <esModel.graph.nodes.length; i++ )\r\n          {\r\n            if(esModel.graph.nodes[i].id == data.nodes[0])\r\n            {\r\n              esModel.graph.nodes.splice(i, 1);              \r\n            }\r\n          }\r\n          for(let i = 0; i <esModel.TM.length; i++ )\r\n          {\r\n            if(esModel.TM[i].id == (data.nodes[0]-1))\r\n            { \r\n              esModel.TM.splice(i, 1);            \r\n            }\r\n          }\r\n          esModel.counter--\r\n          \r\n            let newNames = [{}]\r\n          for(let i = 0; i <esModel.graph.nodes.length; i++ )\r\n          {\r\n            newNames[esModel.graph.nodes[i].id] = i+1\r\n              esModel.graph.nodes[i].id = i+1;           \r\n          }\r\n          for(let i = 0; i <esModel.TM.length; i++ )\r\n          {           \r\n              esModel.TM[i].id = i            \r\n          }\r\n      \r\n          setEsModel(esModel)\r\n          for(let i = 0; i <esModel.graph.edges.length; i++ )\r\n          {\r\n            esModel.graph.edges[i].from= newNames[esModel.graph.edges[i].from]          \r\n            esModel.graph.edges[i].to= newNames[esModel.graph.edges[i].to]\r\n          }\r\n          let colorChanges = {}\r\n\r\n          for(let i = 0; i < esModel.graph.nodes.length; i++)\r\n  {\r\n    colorChanges[esModel.graph.nodes[i].id] = [0,0]\r\n  }\r\n for(let i = 0; i < esModel.graph.edges.length; i++)\r\n  {colorChanges[esModel.graph.edges[i].to][1]=1\r\n    colorChanges[esModel.graph.edges[i].from][0]=1  \r\n  }\r\n  \r\n  setEsModel(esModel)\r\n  for(let i = 0; i <esModel.graph.nodes.length; i++)\r\n  {\r\n    \r\n    if(colorChanges[esModel.graph.nodes[i].id][0]== 1&&colorChanges[esModel.graph.nodes[i].id][1]== 0 )\r\n    {\r\n      esModel.graph.nodes[i].color = \"#008000\"   \r\n    }\r\n    if(colorChanges[esModel.graph.nodes[i].id][0]== 1&&colorChanges[esModel.graph.nodes[i].id][1]== 1 )\r\n    {\r\n      esModel.graph.nodes[i].color = \"#DA70D6\"  \r\n    }\r\n    if(colorChanges[esModel.graph.nodes[i].id][0]== 0&&colorChanges[esModel.graph.nodes[i].id][1]== 1 )\r\n    {\r\n      esModel.graph.nodes[i].color = \"#FF0000\"  \r\n    }\r\n    if(colorChanges[esModel.graph.nodes[i].id][0]== 0&&colorChanges[esModel.graph.nodes[i].id][1]== 0 )\r\n    {\r\n      esModel.graph.nodes[i].color = \"#F5DEB3\" \r\n    }\r\n  \r\n  }\r\n  for(let i = 0; i <esModel.graph.nodes.length; i++)\r\n  {\r\nif((String(esModel.graph.nodes[i].color) == \"#FF0000\" || String(esModel.graph.nodes[i].color) == \"#DA70D6\" ) && !willUpdate )\r\n    {      esModel.methods.UpdatePravila(esModel.graph.nodes[i].id) }\r\n}\r\n  setEsModel(esModel)\r\n     networks.network.setData({nodes:esModel.graph.nodes, edges:esModel.graph.edges})\r\n  RenderSelectedTM(0)\r\n        }\r\n     },\r\n      layout: {\r\n        hierarchical: {\r\n          enabled: false,\r\n          direction: 'LR',\r\n          sortMethod:'directed',\r\n          blockShifting: false,\r\n          levelSeparation: 180\r\n        }\r\n      },   \r\n      edges: {\r\n        color: \"#000000\"\r\n      },\r\n    };\r\n\r\n  //const [contacts, setContacts] = useState(data);\r\n  const [addFormData, setAddFormData] = useState({\r\n    fullName: \"\",\r\n    address: \"\",\r\n    phoneNumber: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const [editFormData, setEditFormData] = useState({\r\n    fullName: \"\",\r\n    address: \"\",\r\n    phoneNumber: \"\",\r\n    email: \"\",\r\n  });\r\n  const [editContactId, setEditContactId] = useState(null);\r\n  const [xmlFiles, setXmlFiles] = useState([]);\r\n  const [xmlModeling, setxmlModeling] = useState([]);\r\n  const [xmlName, setXmlName] = useState([]);\r\n  const [indexBodyHtml, setindexBodyHtml] = useState([]);\r\n  \r\n  var o2x = require('object-to-xml');\r\n  window.onbeforeunload = function() {\r\n    return \"A XHR request is pending, are you sure you want to leave ?\";\r\n}\r\n  const [data, setData] = useState(null)\r\n  useEffect(() => {\r\n    fetch('/api')\r\n    .then(response => response.json()\r\n    .then(response => setData(response.message)))\r\n  } )\r\n  const [esModel, setEsModel] = useState({\r\n    \r\n    options: {\r\n      Name:'',\r\n      Author:'',\r\n      userRequest:[]\r\n    },\r\n    structure:{},\r\n    pravilaMode:0,\r\n    TM:\r\n    [\r\n    ],\r\n    pravila_end: \r\n    {1:['1_1...1_1',\r\n    '1_2...2_0.8',\r\n    '1_3...1_0.9',  \r\n    '2_1...2_0.7',\r\n    '2_2...1_0.9',\r\n    '2_3...2_1',  \r\n    '3_1...1_0.9',\r\n    '3_2...1_0.8',\r\n    '3_3...2_0.9',  \r\n    ],},\r\n    counter:0,\r\n    graph: {\r\n      nodes: [       \r\n         ],\r\n      edges: [       \r\n      ],   \r\n    },\r\n    events: {      \r\n     release: ({ nodes, edges }) => {\r\n        let pos = networks.network.getPositions()\r\n        },\r\n      dragEnd: ({ nodes, edges }) => {\r\n        let pos = networks.network.getPositions()\r\n         for (let i = 0; i<esModel.graph.nodes.length; i++ )\r\n         {\r\n           esModel.graph.nodes[i].x = pos[esModel.graph.nodes[i].id].x\r\n           esModel.graph.nodes[i].y = pos[esModel.graph.nodes[i].id].y \r\n         }\r\n         setEsModel(esModel)\r\n         networks.network.setData({nodes:esModel.graph.nodes, edges:esModel.graph.edges})       \r\n        },\r\n      click: ({ nodes, edges }) => {    \r\n      if(nodes[0] != null)\r\n      {\r\n        RenderSelectedTM(nodes[0]-1)        \r\n      }     \r\n      },\r\n      doubleClick: ({ pointer: { canvas } }) => {\r\n      let pos = networks.network.getPositions()      \r\n        for (let i = 0; i<esModel.graph.nodes.length; i++ )\r\n        {\r\n          esModel.graph.nodes[i].x = pos[esModel.graph.nodes[i].id].x\r\n          esModel.graph.nodes[i].y = pos[esModel.graph.nodes[i].id].y\r\n        }\r\n        esModel.methods.AddTMInputLevel(esModel.graph.nodes.length)\r\n        createNode(canvas.x, canvas.y);\r\n        setEsModel(esModel)\r\n        networks.network.setData({nodes:esModel.graph.nodes, edges:esModel.graph.edges})   \r\n        RenderSelectedTM(esModel.graph.nodes.length-1)\r\n      },\r\n      showPopup: ({ nodes, edges }) => {       \r\n      },\r\n    },\r\n    methods:\r\n    { ChangeCoeff:(row, pos, value, nymberTM) =>\r\n      {\r\n      let urovenPrav\r\n      urovenPrav = eval(\"esModel.pravila_end[\"+(Number(nymberTM))+\"]\")\r\n      let leftSide = urovenPrav[row-1].split(\"...\")[0]\r\n      let rightSide = urovenPrav[row-1].split(\"...\")[1].split(\"-\")\r\n      rightSide[pos-1]=\"\"+rightSide[pos-1].split(\"_\")[0] +'_'+value\r\n      let peresobran = \"\"+leftSide+\"...\"\r\n      let rightPeresobran=\"\"\r\n      for(let i = 0; i < rightSide.length; i++)\r\n      {        \r\n        rightPeresobran= rightPeresobran+rightSide[i]\r\n        if((i+1) < rightSide.length)\r\n        {\r\n          rightPeresobran = \"\"+rightPeresobran+\"-\"\r\n        } \r\n      }\r\n      peresobran = \"\"+peresobran+\"\"+rightPeresobran \r\n      urovenPrav[row-1] = peresobran\r\n      setEsModel(esModel)\r\n      RenderPravila((Number(nymberTM)))\r\n      },\r\n      ChangeX:(events) =>{\r\n        let zelen =[]\r\n        let fiolet = []\r\n        let obr1 = []\r\n        let obrabotka = {}\r\n        let krasn = []\r\n        for(let i = 0; i < esModel.graph.nodes.length; i ++)\r\n        {        \r\n          if(esModel.graph.nodes[i].color == \"#008000\")\r\n          {\r\n            esModel.graph.nodes[i].y =  0\r\n            zelen[zelen.length] = i+1\r\n            esModel.graph.nodes[i].x =  -300+zelen.length*150\r\n          }\r\n           if(esModel.graph.nodes[i].color == \"#DA70D6\")\r\n           {\r\n             esModel.graph.nodes[i].y =  -250\r\n             fiolet[fiolet.length] = i+1\r\n           }\r\n          if(esModel.graph.nodes[i].color == \"#FF0000\")\r\n          {\r\n            esModel.graph.nodes[i].y =  -500\r\n            krasn[krasn.length] = i+1\r\n          }\r\n        }\r\n        obrabotka['input'] = zelen\r\n        obrabotka['output'] = krasn\r\n        let spisok = {}\r\n        urovniObrabotki = {}\r\n        for(let i =0; i<fiolet.length; i++)\r\n        {\r\n          pp =[]\r\n          getLevelTMObrabotki(fiolet[i], zelen)\r\n        }\r\n        console.log(urovniObrabotki)\r\n        let numberKey=50\r\n        for(var key in urovniObrabotki)\r\n        {\r\n          urovniObrabotki[numberKey] =urovniObrabotki[key]\r\n          numberKey++\r\n          delete urovniObrabotki[key]\r\n        }\r\n        numberKey=1\r\n        for(var key in urovniObrabotki)\r\n        {\r\n          urovniObrabotki[numberKey] =urovniObrabotki[key]\r\n          numberKey++\r\n          delete urovniObrabotki[key]\r\n        }\r\n       \r\n        for(var key in urovniObrabotki)\r\n        {          \r\n          for(let i =0; i < urovniObrabotki[key].length; i++)\r\n          {          \r\n            for(let y=0; y< esModel.graph.nodes.length; y++)\r\n            {\r\n              if( esModel.graph.nodes[y].id ==urovniObrabotki[key][i] )              \r\n              {\r\n                esModel.graph.nodes[y].y = (-100 * Number(key))\r\n                esModel.graph.nodes[y].x =-225+(150* (i+1))                             \r\n              }  \r\n            }\r\n          }\r\n        }\r\n        let outCounter =0\r\n        for(let i = 0; i < esModel.graph.nodes.length; i ++)\r\n        {\r\n           if(esModel.graph.nodes[i].color == \"#FF0000\")\r\n          {            \r\n            esModel.graph.nodes[i].y =  Object.keys(urovniObrabotki).length* (-100) -100\r\n            esModel.graph.nodes[i].x = -150+ (150* (outCounter+1))\r\n            outCounter++\r\n          }  \r\n        }\r\n        outCounter =0\r\n        urovniObrabotki['input'] = zelen\r\n        urovniObrabotki['output'] = krasn\r\n        console.log( urovniObrabotki)\r\n        esModel.structure = urovniObrabotki\r\n\r\n        setEsModel(esModel)\r\n        networks.network.setData({nodes:esModel.graph.nodes, edges:esModel.graph.edges})       \r\n        RenderSelectedTM(0)\r\n      },\r\n      UpdatePravila:(events) => \r\n      {\r\n      let toNode\r\n      if(events.target != undefined)\r\n       toNode = Number(events.target.id)+1\r\n       else  toNode=events   \r\n       esModel.pravilaMode =1\r\n\r\nlet otKokogo = []\r\nlet massivFrom =[]\r\nfor(let i = 0; i < esModel.graph.edges.length; i ++)\r\n      {\r\n        if(esModel.graph.edges[esModel.graph.edges.length-i-1].to == Number(toNode))\r\n        {\r\n          massivFrom.push(esModel.graph.edges[esModel.graph.edges.length-i-1].from )\r\n        }\r\n      }\r\n      for(let i = 0; i <massivFrom.length; i ++)\r\n      {for(let j = 0; j <esModel.TM.length; j ++)\r\n        {\r\n          if(esModel.TM[esModel.TM.length-j-1].id == Number(massivFrom[i]-1))\r\n        {\r\n          otKokogo.push(esModel.TM[esModel.TM.length-j-1])\r\n        }}\r\n      }\r\nif(otKokogo<=0)\r\nreturn;\r\n\r\nlet leftArray = []\r\n       for(let i = 0; i < otKokogo.length; i ++)\r\n      { \r\n        leftArray.push([])\r\n        for(let j = 0; j <otKokogo[otKokogo.length-1-i].termsCount; j++ )\r\n        {\r\n          leftArray[i][j] = (String(j+1))\r\n        }\r\n      }\r\n\r\n      let arr = []\r\n      let cartes = cartesian(leftArray)\r\n      let start2 = false\r\n      for(let i =0; i <cartes.length; i++ )\r\n      {\r\n        if(!start2)arr.push([])\r\n        arr[i] =\"\"\r\n        for(let j =0; j< cartes[i].length; j++)\r\n        { \r\n          arr[i] +=cartes[i][j]\r\n          if(j+1 <cartes[i].length )\r\n          arr[i] +=\"_\" \r\n          else arr[i]+= \"...\"\r\n        }\r\n          start2 = true \r\n      }\r\n      let doKokogo = []\r\n\r\n      for(let i = 0; i < esModel.TM.length; i ++)\r\n      {\r\n        if(esModel.TM[i].id == Number(toNode-1))\r\n        { \r\n          doKokogo.push(esModel.TM[i])\r\n        }\r\n      }\r\n      \r\n      let start3 = false\r\n      let rSide = []\r\n\r\n      for(let i = 0; i < cartes.length; i ++)\r\n      { \r\n        if(!start3)leftArray.push([])\r\n        rSide[i]=''\r\n        for(let j = 0; j <doKokogo.length; j++ )\r\n        {\r\n          rSide[i] += \"1_1\"\r\n          if(j+1 < doKokogo.length)\r\n          rSide[i] += \"-\"\r\n        }        \r\n        start3 = true\r\n      }  \r\n      for(let i = 0; i < cartes.length; i ++)\r\n      {\r\n        arr[i] += rSide[i] \r\n      }     \r\n      esModel.pravila_end[String(toNode)] = arr\r\nsetEsModel(esModel)\r\n},\r\nchangeEsName: (value) => {       \r\n  esModel.options.Name= String(value.target.value)\r\n  setEsModel(esModel)\r\n  RenderOptionsMenu()\r\n },\r\n changeEsAuthor: (value) => { \r\n  esModel.options.Author= String(value)\r\n  esModel.options.Author= String(value.target.value)\r\n  setEsModel(esModel)\r\n  RenderOptionsMenu()\r\n },\r\n      ChangePravila:(row, pos, value,urovenObrabotki) =>\r\n      {\r\n        let urovenPrav\r\n        urovenPrav = esModel.pravila_end[urovenObrabotki]\r\n        let leftSide = urovenPrav[row-1].split(\"...\")[0]\r\n        let rightSide = urovenPrav[row-1].split(\"...\")[1].split(\"-\")\r\n       rightSide[pos-1]=\"\"+value +'_'+rightSide[pos-1].split(\"_\")[1] \r\n   \r\n      let peresobran = \"\"+leftSide+\"...\"\r\n      let rightPeresobran=\"\"\r\n      for(let i = 0; i < rightSide.length; i++)\r\n      {       \r\n        rightPeresobran= rightPeresobran+rightSide[i]\r\n        if((i+1) < rightSide.length)\r\n        {\r\n          rightPeresobran = \"\"+rightPeresobran+\"-\"\r\n        } \r\n      }\r\n      peresobran = \"\"+peresobran+\"\"+rightPeresobran\r\n      urovenPrav[row-1] = peresobran\r\n      setEsModel(esModel)      \r\n      },\r\n      ChangePlotColor:(TmNumber, TermNumber, color) =>\r\n      {\r\n        esModel.TM[TmNumber].plotsColors[TermNumber] = color\r\n        setEsModel(esModel)\r\n        RenderSelectedTM(Number(TmNumber))\r\n      },\r\n       deletePointplot: (TmNumber, TermNumber) => {       \r\n        let deleteNumber = Object.keys(esModel.TM[TmNumber].coords[TermNumber]).length/2; \r\n        delete esModel.TM[TmNumber].coords[TermNumber][\"x\"+deleteNumber]\r\n        delete esModel.TM[TmNumber].coords[TermNumber][\"y\"+deleteNumber]\r\n        setEsModel(esModel)\r\n        RenderSelectedTM(Number(TmNumber))\r\n       },\r\n        addNewPointPlot: (TmNumber, TermNumber) => {\r\n          let newPointNumber = Object.keys(esModel.TM[TmNumber].coords[TermNumber]).length/2+1;\r\n          let newCoordsNameX = \"x\"+newPointNumber;\r\n          let newCoordsNameY = \"y\"+newPointNumber;\r\n          esModel.TM[TmNumber].coords[TermNumber][newCoordsNameX] = 0;\r\n          esModel.TM[TmNumber].coords[TermNumber][newCoordsNameY] = 0;\r\n          setEsModel(esModel) \r\n          RenderSelectedTM(Number(TmNumber))\r\n         },\r\n       changeCoordsValue: (TmNumber, TermNumber, key,value) => {       \r\n          esModel.TM[TmNumber].coords[TermNumber][key] = Number(value)\r\n          setEsModel(esModel)\r\n          RenderSelectedTM(Number(TmNumber))\r\n         },\r\n      deleteTerm: (TmNumber) => {\r\n        \r\n        if ( esModel.TM[TmNumber].termsCount == 1)\r\n        return\r\n\r\n        let willUpdate = false\r\n        for(let i = 0; i <esModel.graph.nodes.length; i++)\r\n        {\r\n         if( esModel.graph.nodes[i].id == (Number(TmNumber)+1) && esModel.graph.nodes[i].color == \"#F5DEB3\")\r\n         {\r\n          willUpdate = true          \r\n         }\r\n\r\n         if(esModel.graph.nodes[i].id == (Number(TmNumber)+1) && (esModel.graph.nodes[i].color == \"#008000\" || esModel.graph.nodes[i].color == \"#DA70D6\"|| esModel.graph.nodes[i].color == \"#FF0000\"))\r\n         {\r\n           esModel.pravila_end = []\r\n         }\r\n        }\r\n        esModel.TM[TmNumber].termsCount = esModel.TM[TmNumber].termsCount-1\r\n        //\r\n        let newTermName = \"term\"+ (Object.keys(esModel.TM[TmNumber].termsNames).length);\r\n      delete esModel.TM[TmNumber].termsNames[newTermName]\r\n       esModel.TM[TmNumber].coords.splice(esModel.TM[TmNumber].coords.length-1,1)  \r\n        esModel.TM[TmNumber].plotsColors.pop()\r\n        let popup = \"\"\r\n        for(let i =0; i< esModel.TM[TmNumber].termsCount; i++)\r\n        {\r\n          popup+=\"\"+esModel.TM[TmNumber].termsNames[\"term\"+String(i+1)]+\"\\n\"\r\n        }\r\n        esModel.graph.nodes[TmNumber].title=popup\r\n        networks.network.setData({nodes:esModel.graph.nodes, edges:esModel.graph.edges})\r\n\r\n        setEsModel(esModel)\r\n        for(let i = 0; i <esModel.graph.nodes.length; i++)\r\n        {\r\n     if((String(esModel.graph.nodes[i].color) == \"#FF0000\" || String(esModel.graph.nodes[i].color) == \"#DA70D6\" )&&!willUpdate )\r\n          {      \r\n            esModel.methods.UpdatePravila(esModel.graph.nodes[i].id)\r\n          }\r\n      }\r\n        setEsModel(esModel)\r\n       RenderSelectedTM(Number(TmNumber))\r\n\r\n       },\r\n      addNewTerm: (TmNumber) => {        \r\n        let willUpdate = false\r\n        for(let i = 0; i <esModel.graph.nodes.length; i++)\r\n        {\r\n         if( esModel.graph.nodes[i].id == (Number(TmNumber)+1) && esModel.graph.nodes[i].color == \"#F5DEB3\")\r\n         {\r\n          willUpdate = true\r\n         }\r\n\r\n         if(esModel.graph.nodes[i].id == (Number(TmNumber)+1) && (esModel.graph.nodes[i].color == \"#008000\" || esModel.graph.nodes[i].color == \"#DA70D6\"|| esModel.graph.nodes[i].color == \"#FF0000\"))\r\n         {\r\n           esModel.pravila_end = []\r\n         }\r\n        }\r\n        esModel.TM[TmNumber].termsCount = esModel.TM[TmNumber].termsCount+1\r\n       let newTermName = \"term\"+ (Object.keys(esModel.TM[TmNumber].termsNames).length+1);\r\n        esModel.TM[TmNumber].termsNames[newTermName] = \"new_term\"\r\n        let t= {x1:0,y1:0,x2:0,y2:0,x3:0,y3:0,x4:0,y4:0};\r\n         esModel.TM[TmNumber].coords.push(t);\r\n         esModel.TM[TmNumber].plotsColors.push(\"#000000\");\r\n         let popup = \"\"\r\n        for(let i =0; i< esModel.TM[TmNumber].termsCount; i++)\r\n        {\r\n          popup+=\"\"+esModel.TM[TmNumber].termsNames[\"term\"+String(i+1)]+\"\\n\"\r\n        }\r\n        esModel.graph.nodes[TmNumber].title=popup\r\n        networks.network.setData({nodes:esModel.graph.nodes, edges:esModel.graph.edges})\r\n        \r\n        \r\n        for(let i = 0; i <esModel.graph.nodes.length; i++)\r\n        {\r\n     if((String(esModel.graph.nodes[i].color) == \"#FF0000\" || String(esModel.graph.nodes[i].color) == \"#DA70D6\")&& !willUpdate )\r\n          {      \r\n            esModel.methods.UpdatePravila(esModel.graph.nodes[i].id)\r\n        }\r\n      }   \r\n        setEsModel(esModel)\r\n         RenderSelectedTM(Number(TmNumber))         \r\n       },\r\n      changeTermName: (TmNumber, TermNumber, newName) => {       \r\n        esModel.TM[TmNumber].termsNames[\"term\"+TermNumber] = newName\r\n        setEsModel(esModel)\r\n        let popup = \"\"\r\n        for(let i =0; i< esModel.TM[TmNumber].termsCount; i++)\r\n        {\r\n          popup+=\"\"+esModel.TM[TmNumber].termsNames[\"term\"+String(i+1)]+\"\\n\"\r\n        }\r\n        esModel.graph.nodes[TmNumber].title=popup\r\n        networks.network.setData({nodes:esModel.graph.nodes, edges:esModel.graph.edges})\r\n        RenderSelectedTM(Number(TmNumber))\r\n       },\r\n\r\n      AddTMInputLevel:(id) =>\r\n      {\r\n          esModel.TM.push({\r\n          id: id,\r\n          name: '',\r\n          termsCount:2,\r\n          termsNames: {term1: '', term2: '',},\r\n          coords:[{x1:0, y1:0, x2:0, y2:1, x3:1, y3:1,x4:1,y4:0},\r\n                  {x1:1, y1:0, x2:1, y2:1, x3:2, y3:1,x4:2,y4:0 },       \r\n                ],    \r\n                plotsColors:['#000000','#000000',] ,   \r\n        },)\r\n        setEsModel(esModel)\r\n      },      \r\n      ChangeSelectedTMName:(id,name) =>\r\n      {\r\n         esModel.TM[id].name = String(name)\r\n         esModel.graph.nodes[id].label = name\r\n         setEsModel(esModel)\r\n         RenderSelectedTM(Number(id))\r\n         networks.network.setData({nodes:esModel.graph.nodes, edges:esModel.graph.edges})         \r\n      },\r\n    } })\r\n    const [indexBodyHtml2, setindexBodyHtml2] = useState([['НАСТРОЙКИ'],[\r\n    <div>НАЗВАНИЕ ЭС: <input class = \"EsNameInput\"  value = {esModel.options.Name}  onInput={esModel.methods.changeEsName} />\r\n   АВТОР ЭС: <input class = \"EsAuthorInput\"   value = {esModel.options.Author}  onInput={esModel.methods.changeEsAuthor} />\r\n  </div>]]);\r\n    \r\n    \r\n  const { graph, events } = esModel;\r\n  const [ networks, setNetwork ] = useState({network: {}});\r\n  let states = { network: {} };\r\n  \r\n\r\nlet uroven =0\r\nlet zz\r\nlet pp=[]\r\nlet start \r\nlet urovniObrabotki={}\r\nfunction getLevelTMObrabotki(obj, zelen) {\r\n \r\n  \r\n  if(zz == undefined)\r\n  {\r\n    zz = zelen\r\n    start = obj\r\n  }\r\n  \r\n\r\n  for(let i =0; i < esModel.graph.edges.length; i++)\r\n  {\r\n    if(start == obj)\r\n    uroven =0\r\n    if(esModel.graph.edges[i].to == obj  )\r\n      {uroven = uroven +1        \r\n        if(zz.includes(esModel.graph.edges[i].from))\r\n        { \r\n          pp[pp.length]=(uroven)\r\n          uroven= uroven-1    \r\n        } else getLevelTMObrabotki(esModel.graph.edges[i].from)\r\n      }     \r\n  }\r\n  if(start == obj)\r\n  {\r\n    console.log(pp)\r\n    if(urovniObrabotki[Math.max(...pp)] == undefined)\r\n    {\r\n      urovniObrabotki[Math.max(...pp)] = []\r\n      urovniObrabotki[Math.max(...pp)][urovniObrabotki[Math.max(...pp)].length] =obj\r\n      start =undefined\r\n      zz = undefined\r\n    }\r\n    else {urovniObrabotki[Math.max(...pp)][urovniObrabotki[Math.max(...pp)].length] =obj\r\n      start =undefined\r\n      zz = undefined    \r\n    }  \r\n  }\r\n}\r\n\r\n  function  changePravila (row, pos, value, coeff ) { \r\n\r\n   esModel.methods.ChangePravila(row, pos, value, coeff)};\r\n  function  changeCoeff (row, pos, coeff, urObr ) {esModel.methods.ChangeCoeff(row, pos,  coeff, urObr)\r\n  };\r\n\r\n  function cartesian(arg) {\r\n    var r = [], args = arg;\r\n    args.reduceRight(function(cont, factor, i) {\r\n        return function(arr) {\r\n            for (var j=0, l=factor.length; j<l; j++) {\r\n                var a = arr.slice(); // clone arr\r\n                a[i] = factor[j];\r\n                cont(a);\r\n            }\r\n        };\r\n    }, Array.prototype.push.bind(r))(new Array(args.length));\r\nlet t = r.length \r\n    return r;\r\n}\r\n\r\nfunction SendXmlModelling()\r\n{\r\n let tempXML = {}\r\n if(esModel.TM.length == 1 )\r\n {\r\n   tempXML[\"TM\"]= []\r\n   tempXML[\"TM\"].push(esModel.TM)\r\n }\r\n else tempXML[\"TM\"] = esModel.TM\r\n let pravilaDict = {}\r\n let pravilaDict1 = {}\r\n for(let t = 0; t< esModel.pravila_end.length; t++){\r\nlet st = \"\"+t\r\npravilaDict[st] = esModel.pravila_end[t]\r\n }\r\n pravilaDict1 = pravilaDict\r\n for (var key in pravilaDict)\r\n {\r\n\r\nif(pravilaDict[key] == \"\")\r\n{pravilaDict[key] = ''\r\n}\r\npravilaDict['n'+key] = pravilaDict[key]\r\ndelete pravilaDict[key]\r\n }\r\n tempXML[\"pravila_end\"] = pravilaDict1\r\n tempXML[\"pravila_temp\"] = pravilaDict\r\n tempXML[\"graph\"] = esModel.graph\r\n tempXML[\"counter\"] = esModel.counter\r\n tempXML[\"options\"] = esModel.options\r\n\r\n\r\nlet tempStructure = {} // esModel.structure\r\n for (var key in esModel.structure)\r\n {\r\n   tempStructure['n_'+key] = esModel.structure[key]\r\n }\r\n tempXML[\"structure\"] = tempStructure\r\n\r\n     const file = new Blob([o2x(tempXML)],{ type: 'text/xml'});\r\n     const zapros = {\"zapros\":\"{'1':'2','2':'-27.5','3':'-17.5','7':'9'}\"}\r\n     setxmlModeling(file)\r\n    const data = new FormData()\r\n    data.append('zapros', JSON.stringify(zapros))\r\n    data.append('file', xmlModeling)\r\n    axios.post(\"api/study/flm-builder\", data, { \r\n   })\r\n .then(res => { \r\n  })  \r\n\r\n}\r\n\r\n function SaveToXMLOnComputer()\r\n {\r\n  let tempXML = {}\r\n  if(esModel.TM.length == 1 )\r\n  {\r\n    tempXML[\"TM\"]= []\r\n    tempXML[\"TM\"].push(esModel.TM)\r\n  }\r\n  else tempXML[\"TM\"] = esModel.TM\r\n\r\n\r\n\r\nconsole.log(esModel.pravila_end)\r\n  let pravilaDict = {}\r\n  let pravilaDict1 = {}\r\n  for(let t = 0; t< esModel.pravila_end.length; t++){\r\nlet st = \"\"+t\r\npravilaDict[st] = esModel.pravila_end[t]\r\n  }\r\n  pravilaDict1 = pravilaDict\r\n  for (var key in pravilaDict)\r\n  {\r\n\r\nif(pravilaDict[key] == \"\")\r\n{pravilaDict[key] = ''\r\n}\r\npravilaDict['n'+key] = pravilaDict[key]\r\ndelete pravilaDict[key]\r\n  }\r\n  console.log(pravilaDict)\r\n  tempXML[\"pravila_end\"] = pravilaDict1\r\n  tempXML[\"pravila_temp\"] = pravilaDict\r\n  tempXML[\"graph\"] = esModel.graph\r\n  tempXML[\"counter\"] = esModel.counter\r\n  tempXML[\"options\"] = esModel.options\r\n\r\n\r\n let tempStructure = {} // esModel.structure\r\n  for (var key in esModel.structure)\r\n  {\r\n    tempStructure['n_'+key] = esModel.structure[key]\r\n  }\r\n  tempXML[\"structure\"] = tempStructure\r\n\r\n  const element = document.createElement(\"a\");\r\n  document.body.appendChild(element); \r\n  \r\n      const file = new Blob([o2x(tempXML)],{ type: 'text/xml'});\r\n      element.href = URL.createObjectURL(file);\r\n      element.download = \"myFile654.xml\";      \r\n      element.click();\r\n     \r\n\r\n }\r\n function Pravila(arg)\r\n {\r\n let uroven = 0\r\n let urovniPravil = []\r\n console.log(arg)\r\n  let okolo = [] \r\n  okolo.push(<div class = \"Blochek\">\r\n \r\n    {Table(esModel, 2,changePravila,changeCoeff,arg)  }\r\n \r\n    </div>)\r\n\r\n  setindexBodyHtml2(okolo)\r\n\r\n }\r\n function ConsoleXml(xmlStr)\r\n{\r\nconsole.log(xmlStr)\r\nconst a = document.createElement(\"a\");\r\ndocument.body.appendChild(a); \r\na.download = \"FLMmodel.xml\"\r\n    const file = new File([xmlStr], \"FLMmodel.xml\",{ type: 'text/xml'});\r\n    sendToServer( file)\r\n} \r\nfunction XmlOnServer()\r\n{\r\n//let f = new File(\"./temp.xml\")\r\nconst iconv = require('iconv-lite');\r\nconst axios = require('axios').default;\r\naxios.get(\"/xmlS/filedddd.xml\", {  \r\n    responseType: 'arraybuffer',\r\n    responseEncoding: 'binary'  \r\n\r\n}).then((response) => {\r\n  const encodedData =  iconv.decode(Buffer.from(response.data), 'utf-8')//windows-1251\r\n  const parser = new XMLParser()\r\n  let jObj = parser.parse(encodedData)\r\n  console.log(jObj);\r\n\r\n})\r\n.catch((response) => {\r\n  console.log('FAILURE!!'+response);\r\n}); \r\n}\r\n\r\nconst changeTermName = event => {    \r\n  input_Name = event.target.value\r\n\r\n  if(event.target.name.split(\"_\")[0].match(/[a-zA-Z]+/g)[0] == \"termInput\")\r\n  {  \r\n    esModel.methods.changeTermName(event.target.name.split(\"_\")[0].match(/\\d+/g)[0],event.target.name.split(\"_\")[1],event.target.value)   \r\n  }\r\n};\r\n\r\n\r\nconst ChangeColor = event => \r\n{\r\nif(event.target.id.split(\"_\")[0].match(/[a-zA-Z]+/g)[0] == 'termInput')\r\n    {  \r\n      esModel.methods.ChangePlotColor( event.target.id.split(\"_\")[0].match(/\\d+/g)[0],event.target.id.split(\"_\")[1] - 1,event.target.value)     \r\n    }\r\n};\r\nconst DeletePointPlot = event => {  \r\n if(event.target.id.split(\"_\")[0].match(/[a-zA-Z]+/g)[0] == \"termInput\"){\r\n esModel.methods.deletePointplot(event.target.id.split(\"_\")[0].match(/\\d+/g)[0],event.target.id.split(\"_\")[1]-1);\r\n}\r\n }\r\nconst changeCoordsValues = event => {  \r\n    input_Name = event.target.name\r\n  if(event.target.id.split(\"_\")[0].match(/[a-zA-Z]+/g)[0] == \"termInput\"){    \r\n    esModel.methods.changeCoordsValue(event.target.id.split(\"_\")[0].match(/\\d+/g)[0],event.target.id.split(\"_\")[1] - 1,event.target.name.split(\"_\")[0],event.target.value)     \r\n    }\r\n  };\r\n  const addNewPointPlot= event => { \r\n    if(event.target.id.split(\"_\")[0].match(/[a-zA-Z]+/g)[0] == \"termInput\"){\r\n    esModel.methods.addNewPointPlot(event.target.id.split(\"_\")[0].match(/\\d+/g)[0],event.target.id.split(\"_\")[1]-1);        \r\n  }        \r\n  }\r\n\r\nconst AddNewTerm = event => {esModel.methods.addNewTerm(event.target.id)};\r\nconst DeleteTerm = event => {esModel.methods.deleteTerm(event.target.id)};\r\n\r\n\r\n\r\n\r\nconst RenderOptionsMenu = selectedIndex => {\r\n\r\n  let indexB= []\r\n  indexB= ['OPTIONS']\r\n  indexB.push (\r\n    <div>NAME ES:<input class = \"EsNameInput\"  value = {esModel.options.Name} onInput={esModel.methods.changeEsName} />\r\n    AUTHOR ES:<input class = \"EsAuthorInput\"   value = {esModel.options.Author}  onInput={esModel.methods.changeEsAuthor} />\r\n   </div>\r\n    )\r\n  setindexBodyHtml2(indexB)\r\n\r\n  //\r\n}\r\n\r\n \r\n  const RenderModelingMenu = selectedIndex => {\r\n    let indexB= []\r\n    indexB= ['МОДЕЛИРОВАНИЕ']\r\n    console.log(esModel.structure)\r\n    \r\n    for(let i =0; i < esModel.structure['input'].length; i++)\r\n    {\r\n      let nameTM = ''\r\n      let number = 0\r\n      \r\n      for(let x = 0; x < esModel.TM.length; x++)\r\n      {\r\n        if(esModel.TM[x].id == String(esModel.structure['input'][i] -1))\r\n        {     \r\n          nameTM += esModel.TM[x].name\r\n          number = x\r\n        }\r\n      }\r\n      //onChange={}  console.log(esModel.TM[x].name)\r\n      indexB.push (        \r\n        <div>ТЕРМ - МНОЖЕСТВО ( {esModel.structure['input'][i]} ) ({nameTM}):\r\n        <select className=\"custom-select\" id={esModel.structure['input'][i]} defaultValue={esModel.TM[number].termsNames[0]}>\r\n           {Object.values(esModel.TM[number].termsNames).map((option, index) =>\r\n             <option key={ index} id={option} value = {option}>{option}</option>\r\n          ) }\r\n      </select>\r\n       </div>)\r\n    }    \r\n    setindexBodyHtml2(indexB) \r\n  }\r\nconst changeSelectedTMName = event => {   \r\n  input_Name = event.target.id\r\nif(event.target.id.split(\"_\")[0].match(/[a-zA-Z]+/g)[0] == \"term\")\r\n{ \r\n    esModel.methods.ChangeSelectedTMName(event.target.id.split(\"_\")[1],event.target.value)\r\n}\r\n\r\n};  \r\n\r\nconst RenderSelectedTM = selectedIndex => {\r\n  //console.log(esModel)\r\n  let tm \r\n  \r\n   tm = selectedIndex\r\n  let arrayTerms =[]\r\n  let temp =[]\r\n  let points4Plots =[]\r\n  let points ;\r\n  inputLevelCounter = 0\r\n  let pravilaButton = []\r\n  \r\n for(let i = 0; i < esModel.graph.nodes.length;i++)\r\n {\r\n  if(esModel.graph.nodes[i].id == (selectedIndex+1) && (esModel.graph.nodes[i].color == '#DA70D6' || esModel.graph.nodes[i].color == '#FF0000'))\r\n  {\r\n    pravilaButton = [<button  id = {tm} onClick={RenderPravila}> ПРАВИЛА: </button>]\r\n\r\n  }\r\n\r\n }\r\n  for(let i=0; i <esModel.TM.length; i++)  \r\n  {\r\n        if(esModel.TM[i].id == (tm))\r\n    {\r\n\r\n      tm = i\r\n    }\r\n  }\r\n \r\n  \r\n    let nm = \"term_\"+tm\r\n  temp.push(     <div>\r\n\r\n    <div> <label class=\"myLabel\" > ТЕРМ - МНОЖЕСТВО №{tm + 1} </label></div>\r\n     <label class=\"myLabel\" >НАЗВАНИЕ ТМ: </label>\r\n        <input type=\"text\" \r\n                  value= {esModel.TM[tm].name}\r\n                  className=\"form-control\" \r\n                  id= {nm}\r\n                  placeholder=\"...\" \r\n                  onChange={changeSelectedTMName}/ >\r\n                  <div></div>\r\n        <label class=\"myLabel\" > ТЕРМОВ В ТМ:  </label>\r\n        <input type=\"text\" \r\n                  value= {esModel.TM[tm].termsCount}\r\n                  className=\"form-control\" \r\n                  placeholder=\"...\" / >\r\n<button id = {tm} onClick={AddNewTerm}> ДОБАВИТЬ ТЕРМ</button>\r\n<button  id = {tm} onClick={DeleteTerm}> УДАЛИТЬ ТЕРМ</button>\r\n{pravilaButton}\r\n<div></div>\r\n\r\n    </div>)\r\n    let TMindex = 0\r\n  for(let i=0; i <esModel.TM[tm].coords.length; i++)  \r\n  {\r\n    let j = i + 1\r\n    let stringLabel = \"ТЕРМ №\" + j\r\n    let stringNameTerm = \"termInput\"+tm+\"_\"+j\r\n    points4Plots = []\r\n\r\n   for(let j=0; j <Object.keys(esModel.TM[tm].coords[i]).length/2; j++)  \r\n  {   \r\n      let xName = \"x\"+(j+1)+ \"_input\"\r\n      let yName = \"y\"+(j+1)+ \"_input\"\r\n\r\n    points4Plots.push (\r\n    <div>x{j+1}: <input class = \"plotInput\"  type='number' step=\"0.1\" min='-1000' value = {esModel.TM[tm].coords[i][\"x\"+(j+1)]}  id = {stringNameTerm} name={xName} onInput={changeCoordsValues} />\r\n     y{j+1}: <input class = \"plotInput\"  type='number' step=\"0.1\" min='0' value = {esModel.TM[tm].coords[i][\"y\"+(j+1)]} id = {stringNameTerm} name={yName} onInput={changeCoordsValues} />\r\n   </div>\r\n    )\r\n  \r\n  }\r\n  temp.push(\r\n    <div  class=\"blockMy\">\r\n    <div class=\"blockMy\" >\r\n    <div > {stringLabel} </div><div><input name= {stringNameTerm} value = {esModel.TM[tm].termsNames[\"term\"+(i+1)]} type=\"text\" onInput = {changeTermName}  /> </div>\r\n\r\n    <div  class=\"blockMy\"><button onClick={addNewPointPlot} id= {stringNameTerm}>+</button>\r\n    <button onClick={DeletePointPlot} id= {stringNameTerm}>-</button>\r\n    <input type=\"color\" class =\"odin\" id= {stringNameTerm}  onChange={ChangeColor}  value ={esModel.TM[tm].plotsColors[i]}/></div>\r\n    {points4Plots}  \r\n    </div>    \r\n    </div>  )\r\n    }\r\n\r\ntemp.push( <div class=\"Plot\">\r\n  <div ></div>\r\n  <div >{App(esModel.TM[tm].coords,esModel.TM[tm].termsCount, \r\n  esModel.TM[tm].plotsColors)}</div>\r\n  \r\n   </div>)\r\n  let okolo = [] \r\n  okolo.push(<div class = \"Blochek\">\r\n  {temp}\r\n    </div>)\r\n  setindexBodyHtml2(okolo)\r\ninputLevelCounter++\r\n/* <div class = \"Razrez\" >. </div>*/\r\n}\r\n\r\nfunction GoToPravila(index)\r\n{\r\nesModel.pravilaMode = index\r\n\r\n}\r\n\r\nconst RenderPravila = (events) => {\r\n  GoToPravila(1)\r\n  setEsModel(esModel)\r\n  \r\n   let uroven  \r\n   if(events.target == undefined)\r\n   uroven = events\r\n   else uroven = Number(events.target.id)+1\r\n\r\n\r\n   console.log(uroven)\r\n Pravila(uroven)\r\n  }\r\nfunction sendToServer(file)\r\n{\r\nconst data = new FormData()\r\ndata.append('file', file)\r\naxios.post(\"http://localhost:8000/upload\", data, { \r\n   // receive two    parameter endpoint url ,form data\r\n})\r\n.then(res => { // then print response status\r\n  XmlOnServer()\r\nsetXmlName( \"\"+xmlFiles.name)\r\n})\r\n}\r\n\r\n\r\n\r\n\r\n\r\n const handleSubmit =(event) => {\r\n\r\nevent.preventDefault();\r\n    const data = new FormData()\r\n    data.append('file', xmlFiles)\r\n    axios.post(\"http://localhost:8000/upload\", data, { \r\n       // receive two    parameter endpoint url ,form data\r\n   })\r\n .then(res => { // then print response status\r\n  \r\n  setXmlName( \"\"+xmlFiles.name)\r\n  \r\nconst iconv = require('iconv-lite');\r\nconst axios = require('axios').default;\r\naxios.get(\"/xmlS/FLMmodel.xml\", {  \r\n    responseType: 'arraybuffer',\r\n    responseEncoding: 'binary'  \r\n\r\n}).then((response) => {\r\n  const encodedData =  iconv.decode(Buffer.from(response.data), 'utf-8')//windows-1251\r\n  const parser = new XMLParser()\r\n  let jObj = parser.parse(encodedData)\r\n\r\n  setEsModel(esModel)\r\n  \r\n  if(jObj.TM.length == undefined)\r\n  {esModel.TM =[]\r\n   esModel.TM[0] = jObj.TM\r\n  }\r\n  else   esModel.TM = jObj.TM\r\n\r\n  esModel.graph= jObj.graph\r\n  esModel.counter = jObj.counter\r\n  esModel.options = jObj.options\r\n  let tempStructure = {}\r\n  for (let i =0; i < Object.keys(jObj.structure).length; i++)\r\n  {   \r\n//jObj.structure[Object.keys(jObj.structure)[i].split('_')[1]] = jObj.structure[Object.keys(jObj.structure)[i]]\r\n  //  delete jObj.structure[Object.keys(jObj.structure)[i]]\r\n  tempStructure[Object.keys(jObj.structure)[i].split('_')[1]] = jObj.structure[Object.keys(jObj.structure)[i]]\r\n  }\r\n  \r\n  esModel.structure = tempStructure\r\n  esModel.pravila_end = []//jObj.pravila_end\r\n  for (let i =0; i < Object.keys(jObj.pravila_temp).length; i++)\r\n  {   \r\n    esModel.pravila_end[i] = jObj.pravila_temp['n'+(i)]\r\n  }\r\n  setEsModel(esModel)  \r\n  RenderOptionsMenu()\r\n\r\n})\r\n.catch((response) => {\r\n  console.log('FAILURE!!'+response);\r\n})}) \r\n  }\r\n\r\n  const handleFileSelect = (event) => {\r\n    setXmlFiles(event.target.files[0])\r\n  }\r\nlet inp_termMn_1 = 8;\r\n/*\r\n<button  onClick={ConsoleXml}> XML</button>\r\n    <button  onClick={SaveModelToXML}> TO XML</button>\r\n    <input type=\"file\" id=\"myFile\" onChange={(e)=>UploadXML(e)} />\r\n*/\r\n  return (    \r\n    <div>\r\n    <button  onClick={SaveToXMLOnComputer} >SAVE MODEL TO COMPUTER</button>\r\n    <button  onClick={esModel.methods.ChangeX} >SORT</button>    \r\n    <button  onClick={RenderOptionsMenu} >OPTIONS</button>\r\n    <button  onClick={RenderModelingMenu} > MODELING</button> \r\n    <input type=\"file\" onChange={handleFileSelect}/>\r\n    <button  onClick={SendXmlModelling} > TEST_POST</button>\r\n    <button type=\"button\"  onClick={handleSubmit} /> \r\n     \r\n     \r\n  <div class=\"Blochek\" > <Graph id=\"graph\" getNetwork={(network) => \r\n   {networks.network= network\r\n  setNetwork(networks)\r\n  }}\r\n   graph={esModel.graph} options={options} events={esModel.events} style={{ width: \"800px\", height: \"600px\",position: \"absolute\",right: \"0\",border: \"solid\" }} /></div>\r\n    <div class=\"blockMy\" >   {indexBodyHtml2}\r\n    {!data ? \"Loading data...\" : data}\r\n     </div >    \r\n     </div>     \r\n      );\r\n}ReactDOM.render(<FlmTree />, document.getElementById(\"root\"));\r\n\r\n\r\n","import React from \"react\";\n\nconst EditableRow = ({\n  editFormData,\n  handleEditFormChange,\n  handleCancelClick,\n}) => {\n  return (\n    <tr>\n      <td>\n        <input\n          type=\"text\"\n          required=\"required\"\n          placeholder=\"Enter a name...\"\n          name=\"fullName\"\n          value={editFormData.fullName}\n          onChange={handleEditFormChange}\n        ></input>\n      </td>\n      <td>\n        <input\n          type=\"text\"\n          required=\"required\"\n          placeholder=\"Enter an address...\"\n          name=\"address\"\n          value={editFormData.address}\n          onChange={handleEditFormChange}\n        ></input>\n      </td>\n      <td>\n        <input\n          type=\"text\"\n          required=\"required\"\n          placeholder=\"Enter a phone number...\"\n          name=\"phoneNumber\"\n          value={editFormData.phoneNumber}\n          onChange={handleEditFormChange}\n        ></input>\n      </td>\n      <td>\n        <input\n          type=\"email\"\n          required=\"required\"\n          placeholder=\"Enter an email...\"\n          name=\"email\"\n          value={editFormData.email}\n          onChange={handleEditFormChange}\n        ></input>\n      </td>\n      <td>\n        <button type=\"submit\">Save</button>\n        <button type=\"button\" onClick={handleCancelClick}>\n          Cancel\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nexport default EditableRow;\n"],"sourceRoot":""}