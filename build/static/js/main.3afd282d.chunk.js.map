{"version":3,"sources":["Plots.js","Table.js","components/ReadOnlyRow.js","index.js","components/EditableRow.js"],"names":["mi","App","points","valuesPlots","colors","plots","i","dataTemp","j","Object","keys","length","x","y","_jsx","LineMarkSeries","color","className","size","data","style","strokeLinejoin","strokeWidth","_jsxs","XYPlot","width","height","display","children","HorizontalGridLines","stroke","VerticalGridLines","XAxis","title","line","ticks","text","fill","YAxis","ReactDOM","render","document","querySelector","Table","model","levelPravil","changeList","changeCoeff","selectedTM","tempus","gettingLevelPravil","select","cartesian","arg","r","args","reduceRight","cont","factor","arr","l","a","slice","Array","prototype","push","bind","t","unshift","cartesian2","undefined","console","log","my","TM","options","name","urovneyObrabotki","id","termsCount","termsNames","term1","term2","term3","coords","x1","y1","x2","y2","x3","y3","x4","y4","plotsColors","pravila_end","1","shapka","termsInputArray","termsInputArray2","tempArray","selectedArray","otarray","doarray","toNode","massivFrom","graph","edges","to","Number","from","otKokogo","doKokogo","termName","eval","map","el","urPravil","temp","temp2","split","ChangeSelect","event","preventDefault","target","getAttribute","row","position","selectedIndex","ChangeCoeff","val","value","urovPravil","prav","index","Fragment","ReadOnlyRow","array","change","urovenPravil","pravila","_ref","rowNumber","rightSide","models","CustomSelect","_ref2","poryadok","onChange","defaultValue","option","start","class","onInput","type","step","min","max","_require","require","XMLParser","inputLevelCounter","input_Name","FlmTree","randomColor","red","Math","floor","random","toString","padStart","green","blue","concat","createNode","esModel","counter","setEsModel","nodes","font","label","shape","physics","group","fl","networks","network","locale","interaction","hover","tooltipDelay","selectable","multiselect","dragView","manipulation","enabled","initiallyActive","addNode","editEdge","addEdge","callback","colorChanges","String","methods","UpdatePravila","setData","addEdgeMode","deleteEdge","splice","deleteNode","toUninstall","willUpdate","newNames","RenderSelectedTM","layout","hierarchical","direction","sortMethod","blockShifting","levelSeparation","_useState","useState","fullName","address","phoneNumber","email","_useState2","_slicedToArray","addFormData","setAddFormData","_useState3","_useState4","editFormData","setEditFormData","_useState5","_useState6","editContactId","setEditContactId","_useState7","_useState8","xmlFiles","setXmlFiles","_useState9","_useState10","xmlModeling","setxmlModeling","_useState11","_useState12","xmlName","setXmlName","_useState13","_useState14","indexBodyHtml","setindexBodyHtml","o2x","window","onbeforeunload","_useState15","_useState16","dataS","_useState17","regimZaprosa","zapros","Name","Author","userRequest","structure","pravilaMode","events","release","getPositions","dragEnd","pos","click","_ref3","doubleClick","_ref4","canvas","pointer","AddTMInputLevel","showPopup","_ref5","changeRegimVivoda","DefZapros","TmNumber","SetZapros","nymberTM","urovenPrav","leftSide","peresobran","rightPeresobran","RenderPravila","ChangeX","zelen","fiolet","obrabotka","krasn","urovniObrabotki","pp","getLevelTMObrabotki","numberKey","key","outCounter","leftArray","cartes","start2","start3","rSide","changeEsName","RenderOptionsMenu","changeEsAuthor","ChangePravila","urovenObrabotki","ChangePlotColor","TermNumber","deletePointplot","deleteNumber","addNewPointPlot","newPointNumber","newCoordsNameX","newCoordsNameY","changeCoordsValue","deleteTerm","newTermName","pop","popup","addNewTerm","changeTermName","newName","ChangeSelectedTMName","_useState18","_useState19","_useState20","indexBodyHtml2","setindexBodyHtml2","_useState21","_useState22","setNetwork","states","uroven","zz","obj","includes","apply","_toConsumableArray","changePravila","coeff","urObr","SendXmlModelling","tempXML","pravilaDict1","pravilaDict","tempStructure","file","Blob","FormData","append","JSON","stringify","axios","post","then","res","str","p","RenderModelingMenu","output","item","SaveToXMLOnComputer","element","createElement","body","appendChild","href","URL","createObjectURL","download","Pravila","okolo","ConsoleXml","xmlStr","sendToServer","File","XmlOnServer","encodedData","decode","Buffer","jObj","parse","match","ChangeColor","DeletePointPlot","changeCoordsValues","AddNewTerm","DeleteTerm","indexB","ChangeZapros","ChangeRegimZaprosa","ChangeZaprosInput","nameTM","number","values","placeholder","onClick","changeSelectedTMName","tm","points4Plots","pravilaButton","nm","stringLabel","stringNameTerm","xName","yName","GoToPravila","testINFO","findIndex","handleSubmit","reader","FileReader","parser","readAsText","onload","_event","content","result","pravila_temp","handleFileSelect","files","inp_termMn_1","Graph","getNetwork","right","border","getElementById"],"mappings":"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","file":"static/js/main.3afd282d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"react-vis/dist/style.css\";\r\n\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  VerticalGridLines,\r\n  HorizontalGridLines,\r\n  LineMarkSeries,\r\n  DiscreteColorLegend\r\n} from \"react-vis\";\r\n\r\nlet mi=0\r\n//<DiscreteColorLegend  orientation=\"horizontal\" items = {series}    />\r\nlet series= [{\r\n  title: \"Apples\",\r\n  color : \"#000000\",\r\n},\r\n{title: \"Orange\",\r\ndisabled: false,\r\ndata: [{ x: 0, y: 12 }, { x: 1, y: 22 }],\r\ncolor : \"#FF6c0A\",\r\n},\r\n\r\n]\r\n\r\nfunction getRandomColor() {\r\nvar letters = '0123456789ABCDEF';\r\nvar color = '#';\r\nfor (var i = 0; i < 6; i++)\r\n{\r\n  color += letters[Math.floor(Math.random() * 16)];\r\n}\r\nreturn color;\r\n}\r\nexport default function App(points, valuesPlots, colors) {\r\n  if(valuesPlots > 0)\r\n  {\r\n    mi = valuesPlots\r\n  }\r\n  let x1_1,x2_1,x3_1,y1_1,y2_1,y3_1\r\n  let x4_1 = 1\r\n  let y4_1 = 0\r\n  let x1_2,x2_2,x3_2,x4_2,y1_2,y2_2,y3_2,y4_2\r\n  let x1_3,x2_3,x3_3,x4_3,y1_3,y2_3,y3_3,y4_3\r\n  let x1_4,x2_4,x3_4,x4_4,y1_4,y2_4,y3_4,y4_4\r\n\r\n\r\n\r\n  let x1_5,x2_5,x3_5,x4_5,y1_5,y2_5,y3_5,y4_5\r\n  let x1_6,x2_6,x3_6,x4_6,y1_6,y2_6,y3_6,y4_6\r\n  let x1_7,x2_7,x3_7,x4_7,y1_7,y2_7,y3_7,y4_7\r\n  let x1_8,x2_8,x3_8,x4_8,y1_8,y2_8,y3_8,y4_8\r\n  let x1_9,x2_9,x3_9,x4_9,y1_9,y2_9,y3_9,y4_9\r\n  let x1_10,x2_10,x3_10,x4_10,y1_10,y2_10,y3_10,y4_10\r\n  const lines = [{x:5,y:2},{x:6,y:2}]\r\n\r\n\r\n  let color = []\r\n  let items = {title: \"hello\", color : \"#D1D0CE\"}\r\n/*\r\n  //заполнить все переменные для всех графиков значениями координат\r\n  for (let i = 0; i < mi; i++)\r\n  {\r\n    if(typeof points[i] == 'object' )\r\n    {\r\n      let b = points[i]\r\n      eval(\"x1_\"+(i+1) + \"=\" +b[0]) \r\n      eval(\"y1_\"+(i+1) + \"=\" +b[1]) \r\n      eval(\"x2_\"+(i+1) + \"=\" +b[2]) \r\n      eval(\"y2_\"+(i+1) + \"=\" +b[3]) \r\n      eval(\"x3_\"+(i+1) + \"=\" +b[4]) \r\n      eval(\"y3_\"+(i+1) + \"=\" +b[5]) \r\n      eval(\"x4_\"+(i+1) + \"=\" +b[6]) \r\n      eval(\"y4_\"+(i+1) + \"=\" +b[7])  \r\n      color[i] = getRandomColor();\r\n    }\r\n  }\r\n*/\r\n let plots = []\r\nfor (let i = 0; i < mi; i++)\r\n  {\r\n    if(typeof points[i] == 'object' )\r\n    {\r\n      let dataTemp = [{}]\r\n      for(let j = 0; j <Object.keys(points[i]).length/2; j++)\r\n      {dataTemp[j]=({x: points[i][\"x\"+(j+1)],y: points[i][\"y\"+(j+1)] })\r\n\r\n      }\r\n \r\n  plots[i]=[<LineMarkSeries\r\n  color =  {colors[i]}\r\n  className=\"1-series\"\r\n  size='3.5'\r\n  \r\n\r\n\r\n  data={dataTemp}\r\n  style={{\r\n    strokeLinejoin: \"round\",\r\n    strokeWidth: 2\r\n  }}\r\n/>\r\n]\r\n   } }\r\n  return (    \r\n    <XYPlot width={700} height={200} display = \"inline-block\">\r\n      <HorizontalGridLines style={{ stroke: \"#D1D0CE\" }} />\r\n      <VerticalGridLines style={{ stroke: \"#D1D0CE\" }} />\r\n      <XAxis\r\n        title=\"x\"\r\n        style={{\r\n          line: { stroke: \"#111111\" },\r\n          ticks: { stroke: \"#6b6b76\" },\r\n          text: { stroke: \"none\", fill: \"#6b6b76\" }\r\n        }}\r\n      />\r\n       <YAxis\r\n        title=\"Коэфф. уверенности\"\r\n        style={{\r\n          line: { stroke: \"#6b6b76\" },\r\n          ticks: { stroke: \"#6b6b76\" },\r\n          text: { stroke: \"none\", fill: \"#6b6b76\"}\r\n        }}\r\n      />\r\n      \r\n  {plots}\r\n\r\n      \r\n\r\n  \r\n    </XYPlot>\r\n  );\r\n  \r\n}\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));","import React, { useState, Fragment } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport \"./Table.css\";\r\nimport data from \"./mock-data.json\";\r\nimport ReadOnlyRow from \"./components/ReadOnlyRow\";\r\nimport EditableRow from \"./components/EditableRow\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { mkdirSync } from \"fs\";\r\n\r\n\r\nexport  default function Table(model, levelPravil, changeList, changeCoeff,selectedTM) {\r\n\r\n  let tempus=[[]]\r\n  let gettingLevelPravil = levelPravil\r\n \r\n  let select = selectedTM\r\n  if (select == undefined)\r\n  select = 1\r\n \r\n\r\n  console.log(select)\r\n  if(typeof(gettingLevelPravil) != \"string\")\r\n  {\r\n    gettingLevelPravil =1 \r\n  \r\n  }\r\n  function cartesian(arg) {\r\n    var r = [], args = arg;\r\n    args.reduceRight(function(cont, factor, i) {\r\n        return function(arr) {\r\n            for (var j=0, l=factor.length; j<l; j++) {\r\n                var a = arr.slice(); // clone arr\r\n                a[i] = factor[j];\r\n                cont(a);\r\n            }\r\n        };\r\n    }, Array.prototype.push.bind(r))(new Array(args.length));\r\nlet t = r.length\r\n\r\n\r\n   for(let i = 0; i < t; i++)\r\n    {\r\n      r[i].unshift(i+1)\r\n    }\r\n   \r\n    return r;\r\n}\r\nfunction cartesian2(arg) {\r\n  var r = [], args = arg;\r\n  args.reduceRight(function(cont, factor, i) {\r\n      return function(arr) {\r\n          for (var j=0, l=factor.length; j<l; j++) {\r\n              var a = arr.slice(); // clone arr\r\n              a[i] = factor[j];\r\n              cont(a);\r\n          }\r\n      };\r\n  }, Array.prototype.push.bind(r))(new Array(args.length));\r\nlet t = r.length\r\n\r\n\r\n \r\n  return r;\r\n}\r\n\r\n//посмотреть терм-множ. у входного \r\n//посмотреть терм-множ. у обработки-1\r\n//это будет названия столбцов \r\n//console.log(model.termMnogestvaInputLevel[0])\r\n\r\n\r\n\r\nlet my = model\r\n\r\n\r\n//if(model == null)\r\nif(my.TM == undefined)\r\nmy = {  \r\n  options: {\r\n    name: \"Экспертная система 1\",\r\n    urovneyObrabotki: 3,\r\n\r\n  },\r\n  TM: \r\n  [\r\n    //объект первого терм множества входа\r\n    {\r\n        id: '1',\r\n        name: 'Тип постройки',\r\n        termsCount:3,\r\n        termsNames: {term1: 'Общ. здание', term2: 'Жилое здание', term3:'С/Х',},\r\n        coords:[{x1:0, y1:0, x2:1, y2:1, x3:1, y3:5},\r\n                {x1:2, y1:0, x2:3, y2:1, x3:3, y3:5 },\r\n                {x1:4, y1:0, x2:5, y2:2, x3:6, y3:2, x4:7, y4:0 } ,       \r\n              ],    \r\n              plotsColors:['#000000','#000000','#FF00D0',] ,     \r\n\r\n    },\r\n    {\r\n      id: '2',\r\n      name: 'Материал',\r\n      termsCount:3,\r\n      termsNames: {term1: 'Дерево', term2: 'Бетон', term3:'Кирпич',},\r\n      coords:[{x1:0, y1:0, x2:1, y2:1, x3:2, y3:0},\r\n              {x1:2, y1:0, x2:3, y2:1, x3:4, y3:0 },\r\n              {x1:4, y1:0, x2:5, y2:1, x3:6, y3:0, } ,        \r\n            ],    \r\n            plotsColors:['#00FF00','#E30202','#FF00D0',] ,     \r\n\r\n    },\r\n    {\r\n      id: '3',\r\n      name: 'Климат',\r\n      termsCount:3,\r\n      termsNames: {term1: 'Холодный', term2: 'Прохладный', term3:'Теплый',},\r\n      coords:[{x1:0, y1:0, x2:1, y2:1, x3:2, y3:0},\r\n              {x1:2, y1:0, x2:3, y2:1, x3:4, y3:0 },\r\n              {x1:4, y1:0, x2:5, y2:1, x3:6, y3:0, } ,        \r\n            ],    \r\n            plotsColors:['#00FF00','#E30202','#FF00D0',] ,     \r\n\r\n    },\r\n  ]  ,\r\n  pravila_end: \r\n  {1:['1_1...1_1',\r\n  '1_2...2_0.8',\r\n  '1_3...1_0.9',\r\n\r\n  '2_1...2_0.7',\r\n  '2_2...1_0.9',\r\n  '2_3...2_1',\r\n\r\n  '3_1...1_0.9',\r\n  '3_2...1_0.8',\r\n  '3_3...2_0.9',\r\n  \r\n\r\n\r\n  ], }}\r\n \r\n  const shapka= [];\r\n  let termsInputArray=[[]]\r\n  let termsInputArray2=[[]]\r\n  let tempArray=[]\r\n  let selectedArray=[]\r\n  let otarray=[]\r\n  let doarray=[]\r\n  otarray.push(my.TM[0])\r\n  otarray.push(my.TM[1])\r\n  doarray.push(my.TM[2])\r\n\r\nif(model.TM!=undefined)\r\n{\r\n  otarray = []\r\n  doarray=[]\r\n  console.log(selectedTM)\r\n  let toNode = selectedTM\r\n\r\n  \r\n  let massivFrom =[]\r\n  //создаем массив otKokogo\r\n  for(let i = 0; i < my.graph.edges.length; i ++)\r\n        {\r\n          if(my.graph.edges[i].to == Number(toNode))\r\n          {\r\n            massivFrom.push(my.graph.edges[i].from )\r\n          }\r\n        }\r\n  \r\n        for(let i = 0; i <massivFrom.length; i ++)\r\n        {for(let j = 0; j <my.TM.length; j ++)\r\n          {\r\n            if(my.TM[j].id == Number(massivFrom[i]-1))\r\n          {\r\n            otarray.push(my.TM[j])\r\n          }\r\n  \r\n          }\r\n  \r\n        }      \r\n        \r\n\r\n        for(let i = 0; i < my.TM.length; i ++)\r\n        {\r\n          if(my.TM[i].id == Number(toNode-1))\r\n          { \r\n            doarray.push(my.TM[i])\r\n          }\r\n        }\r\n        console.log(doarray)\r\n}\r\n  \r\n\r\n\r\n  //делаем массив всех термов из терммножества входа\r\n  \r\n  \r\n \r\n  let otKokogo = otarray//eval(\"my.TM\")// dfdf\r\n  let doKokogo = doarray//eval(\"my.termMnogestvaOutputLevel\") \r\n  console.log(otKokogo)\r\n  shapka.push(<th>№</th>)\r\n  for(let i = 0; i < otKokogo.length; i++)\r\n  {\r\n   let  name = otKokogo[i].name\r\nshapka.push(<th>{otKokogo[i].name}</th>)\r\n\r\n  }\r\n\r\n  for(let i = 0; i < doKokogo.length; i++)\r\n  {\r\n   let  name = doKokogo[i].name\r\nshapka.push(<th>{doKokogo[i].name}</th>)\r\n\r\n  }\r\n\r\n \r\n  for(let i = 0; i < otKokogo.length; i++)\r\n{    \r\n \r\n  for(let j = 0; j < otKokogo[i].termsCount; j++)\r\n  {     \r\n    console.log(otKokogo[0].termsNames['term1'])   \r\n        console.log(i )//+ \"   \" + eval(\"otKokogo[i].termsNames['term\"+(j+1)+\"']\") )\r\n        console.log(j+1 )\r\n    let termName = eval(\"otKokogo[\" +i+\"].termsNames['term\"+(j+1)+\"']\")     \r\n    tempArray[j] = termName       \r\n  } \r\n    termsInputArray2[i]=(tempArray)    \r\n    tempArray = []  \r\n}\r\n\r\ntermsInputArray2 =cartesian2(termsInputArray2)\r\n\r\ntermsInputArray2.map((el)=> (el.push(\"...\")))\r\n\r\n  for(let i = 0; i < doKokogo.length; i++)\r\n  {    termsInputArray2.map((el)=> (\r\n\r\n    el.push(1)\r\n    \r\n    ))\r\n\r\n    for(let j = 0; j <doKokogo[i].termsCount; j++)\r\n    {     \r\n      let termName = eval(\"doKokogo[\"+i+\"].termsNames['term\"+(j+1)+\"']\")     \r\n      tempArray[j] = {id: (j+1), name :termName}     \r\n\r\n    } \r\n    selectedArray[i]=(tempArray)    \r\n      tempArray = []  \r\n  }\r\n \r\n\r\nfor(let i = 0; i < doKokogo.length; i++)\r\n{    let tempArray=[]\r\n  for(let j = 0; j < doKokogo[i].termsCount; j++)\r\n  {     \r\n    let termName = eval(\"doKokogo[\"+i+\"].termsNames['term\"+(j+1)+\"']\")     \r\n    tempArray[j] = {id: (j+1), name :termName}     \r\n\r\n  } \r\n  selectedArray[i]=(tempArray)    \r\n    tempArray = []  \r\n}\r\nconsole.log(selectedTM)\r\nlet urPravil = eval(\"my.pravila_end[\" +selectedTM+\"]\") \r\nif(urPravil!= undefined)\r\n  {\r\n    \r\n    \r\n    for(let i =0; i<urPravil.length;i++)\r\n    {\r\n      let temp \r\n      let temp2 =[]\r\n      for(let j=0; j< urPravil[i].split(\"...\")[0].split(\"_\").length+1; j++)    \r\n    {\r\n      let termName\r\n        if(j==0)\r\ntermName = i+1\r\n        else{ temp= urPravil[i].split(\"...\")[0].split(\"_\")[j-1]\r\n         termName = eval(\"otKokogo[\"+(j-1)+\"].termsNames['term\"+(temp)+\"']\") \r\n       \r\n  }\r\n  temp2[j] = termName\r\n\r\n    }\r\n\r\n  tempus[i] = temp2\r\n  \r\n    \r\n\r\n   \r\n  \r\n  \r\n\r\n  }}\r\n\r\n\r\n\r\n  const ChangeSelect = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n   let location = event.target.id.split(\"__\")[0].split(\"_\")[0]\r\n let row = event.target.id.split(\"__\")[0].split(\"_\")[1]\r\n let position = event.target.id.split(\"__\")[1]\r\n position = position.split(\"/\")[0]\r\nchangeList(row, position,event.target.options[event.target.selectedIndex].id, select)\r\n\r\nfor(let i = 0; i<termsInputArray2[row-1].length; i++ )\r\n{\r\n\r\nif(termsInputArray2[position-1][i] == \"...\")\r\n{\r\n  termsInputArray2[position-1][Number(Number(i)+Number(position))] = Number(event.target.options[event.target.selectedIndex].id)\r\n  break\r\n\r\n}}};\r\n\r\nconst ChangeCoeff= (event) => {\r\n  event.preventDefault();\r\n\r\nlet val = event.target.value\r\n\r\n // const fieldName = event.target.getAttribute(\"name\");\r\n let location = event.target.id.split(\"__\")[0].split(\"_\")[0]\r\nlet row = event.target.id.split(\"__\")[0].split(\"_\")[1]\r\nlet position = event.target.id.split(\"__\")[1]\r\nlet urovPravil =  select//event.target.id.split(\"__\")[0].split(\"_\")[0]\r\nposition = position.split(\"/\")[0]\r\nchangeCoeff(row, position,val,urovPravil)\r\nconsole.log(\"row=\"+row)\r\nconsole.log(\"position=\"+position)\r\nconsole.log(\"urovPravil=\"+urovPravil)\r\n\r\n\r\n/*\r\nfor(let i = 0; i<termsInputArray2[location-1].length; i++ )\r\n{\r\n\r\nif(termsInputArray2[location-1][i] == \"...\")\r\n{\r\ntermsInputArray2[location-1][Number(Number(i)+Number(position))] = Number(event.target.options[event.target.selectedIndex].id)\r\nbreak\r\n\r\n}}*/\r\n};\r\nlet prav\r\n\r\nprav = eval(\"my.pravila_end\")\r\nconsole.log(prav)\r\n\r\n\r\n  //console.log(termsInputArray)\r\n\r\n //console.log(cartesian(i1)) \r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <form >\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n                {shapka}\r\n              \r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {/*contacts.map((contact) => (\r\n              <Fragment>\r\n                { <ReadOnlyRow\r\n                    contact={contact}\r\n                    handleEditClick={handleEditClick}\r\n                    handleDeleteClick={handleDeleteClick}\r\n                  />}\r\n              </Fragment>\r\n            ))*/}\r\n            {\r\n                      tempus.map((stroke,index) => (\r\n                        <Fragment>\r\n                          { <ReadOnlyRow\r\n                              stroke={stroke}\r\n                               array= {selectedArray}\r\n                               change = {ChangeSelect}\r\n                               urovenPravil = {levelPravil}\r\n                               index = {index+1}\r\n                               pravila = {prav[Number(select)][index]}   \r\n                               changeCoeff = {ChangeCoeff}                            \r\n                            />}\r\n                        </Fragment>\r\n                        \r\n                      ))\r\n\r\n\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n\r\n   \r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nReactDOM.render(<Table />, document.querySelector(\"#root\"));\r\n","import React from \"react\";\r\n\r\nconst ReadOnlyRow = ({ stroke,  array,change, urovenPravil, index, pravila, changeCoeff }) => {\r\n \r\n  let rowNumber = index\r\nlet rightSide = pravila.split(\"...\")[1].split(\"-\")\r\n\r\nif(rightSide == null)\r\nrightSide= \"1_1-1_1\"\r\n\r\n/* \r\n  <td>{stroke[0]}</td>\r\n      <td>{stroke[1]}</td>\r\n      <td>{stroke[2]}</td>\r\n      <td>{stroke[3]}</td>\r\n      <td>1\r\n       {/* <button\r\n          type=\"button\"\r\n          onClick={(event) => handleEditClick(event, contact)}\r\n        >\r\n          Edit\r\n        </button>\r\n        <button type=\"button\" onClick={() => handleDeleteClick(contact.id)}>\r\n          Delete\r\n        </button>\r\n        </td>\r\n        <td>1</td>\r\n*/\r\n\r\nlet models= [\r\n  {\r\n      id: 1,\r\n      name: '',\r\n  },\r\n\r\n]\r\nif(typeof(stroke[1]) == \"string\" &&array.length >0)\r\nfor(let i =0;i < array[0].length; i++)\r\n{\r\nmodels[i] = {id:(i+1),\r\nname:array[0][i]\r\n}\r\n\r\n}\r\n\r\n    // при выборе нового значения в категории\r\n    const onCategoriesSelectChange = (e) => {\r\n\r\n      // преобразуем выбранное значение опции списка в число - идентификатор категории\r\n      const categoryId = parseInt(e.target.options[e.target.selectedIndex].value);\r\n  \r\n      console.log(e.target.options[e.target.selectedIndex].label)\r\n  }\r\n\r\n\r\n\r\n\r\n// компонент пользовательского выпадающего списка\r\nconst CustomSelect = ({ id, options, onChange, poryadok }) => {\r\n  let b\r\n  return (\r\n      <select className=\"custom-select\" id={id} onChange={change} defaultValue={options[rightSide[poryadok].split(\"_\")[0]-1].name}>\r\n          { options.map((option, index) =>\r\n             <option key={id + index} id={option.id} value = {option.name}>{option.name}</option>\r\n          ) }\r\n\r\n      </select>\r\n  )\r\n}\r\n  let arr = []\r\n  let start = true\r\n  for (let i = 0; i < stroke.length; i ++)\r\n  {\r\nif(start && typeof(stroke[i])=='string')\r\n{arr[0] =<td>{stroke[i]}</td>\r\n\r\n\r\n}\r\n\r\n   else {\r\n    arr.push(<td>{stroke[i]}</td>)\r\n   }\r\n   \r\n   \r\nstart = false\r\n\r\n  }\r\n  if(typeof(stroke[1]) == \"string\" &&array.length >0)\r\n  for(let i =0; i <array.length; i++)\r\n  {\r\n    let temp = urovenPravil+\"_\"+rowNumber+\"_\"+\"_\"+(i+1)+\"/\" +array.length\r\n    arr.push(<td><CustomSelect id={temp} options={array[i]}  poryadok ={i}/>\r\n    <input  class = \"plotInput\" onInput={changeCoeff}  type='number' step=\"0.1\" min='0' max='1'  id = {temp} name=\"d\"  value={rightSide[i].split(\"_\")[1]} />\r\n    </td>)\r\n  }\r\n\r\n  return (\r\n    <tr>\r\n      {arr}\r\n    \r\n    </tr>\r\n  );\r\n};\r\n//  } \r\nexport default ReadOnlyRow;\r\n","import Graph from \"react-graph-vis\";\r\nimport React, {  useState,useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport './index.css';\r\nimport App from './Plots.js';\r\nimport Table from './Table.js';\r\nimport \"react-vis/dist/style.css\";\r\nimport axios from \"axios\";\r\nconst { XMLParser} = require(\"fast-xml-parser\");\r\n\r\nlet inputLevelCounter = 0;\r\nlet input_Name;\r\n\r\n\r\n function FlmTree() {\r\n\r\n  function randomColor() {\r\n    const red = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\r\n    const green = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\r\n    const blue = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\r\n    return `#${red}${green}${blue}`;\r\n  }\r\n  const createNode = (x, y) => {\r\n    const color = randomColor();\r\n\r\n    esModel.counter++\r\n    setEsModel(esModel)\r\n    esModel.graph.nodes.push({ x: x, y: y,color: \"#F5DEB3\", id: esModel.counter, font: { size: 10 }, size: 30, label: \"\", title: \"\", shape: 'dot', physics: 'false', group:3 }       \r\n    )\r\n  };\r\n  function fl(){\r\n\r\n    console.log( networks.network);\r\n\r\n  }\r\n  const options =  {\r\n    locale: 'ru',\r\n      interaction: {\r\n        hover: true,\r\n        tooltipDelay: 10,\r\n        selectable: true,\r\n        multiselect: true,\r\n        dragView: true,  \r\n      },\r\n      manipulation: {\r\n        enabled: true,\r\n         initiallyActive: true,\r\n          addNode: false,\r\n          editEdge: false,\r\n          addEdge: function (data, callback) {\r\n            esModel.graph.edges.push(data)\r\n            callback(data);           \r\n        let colorChanges = {}\r\n        for(let i = 0; i < esModel.graph.nodes.length; i++)\r\n{\r\n  colorChanges[esModel.graph.nodes[i].id] = [0,0]\r\n}\r\nfor(let i = 0; i < esModel.graph.edges.length; i++)\r\n{colorChanges[esModel.graph.edges[i].to][1]=1\r\n  colorChanges[esModel.graph.edges[i].from][0]=1\r\n  \r\n\r\n}\r\n\r\nesModel.pravila_end = []\r\nsetEsModel(esModel)\r\nfor(let i = 0; i <esModel.graph.nodes.length; i++)\r\n{\r\n  \r\n  if(colorChanges[esModel.graph.nodes[i].id][0]== 1&&colorChanges[esModel.graph.nodes[i].id][1]== 0 )\r\n  {\r\n    esModel.graph.nodes[i].color = \"#008000\" \r\n\r\n  }\r\n  if(colorChanges[esModel.graph.nodes[i].id][0]== 1&&colorChanges[esModel.graph.nodes[i].id][1]== 1 )\r\n  {\r\n    esModel.graph.nodes[i].color = \"#DA70D6\" \r\n  }\r\n  if(colorChanges[esModel.graph.nodes[i].id][0]== 0&&colorChanges[esModel.graph.nodes[i].id][1]== 1 )\r\n  {\r\n    esModel.graph.nodes[i].color = \"#FF0000\"\r\n  }\r\n\r\n}\r\nfor(let i = 0; i <esModel.graph.nodes.length; i++)\r\n{ console.log(esModel.graph.nodes[i].color)\r\nif(String(esModel.graph.nodes[i].color) == \"#FF0000\" || String(esModel.graph.nodes[i].color) == \"#DA70D6\"  )\r\n  {   \r\n    esModel.methods.UpdatePravila(esModel.graph.nodes[i].id)\r\n}\r\n}\r\nsetEsModel(esModel)\r\nsetEsModel(esModel)\r\nnetworks.network.setData({nodes:esModel.graph.nodes, edges:esModel.graph.edges})\r\n            networks.network.addEdgeMode();            \r\n        },\r\n        deleteEdge: function (data, callback) {\r\n\r\n          callback(data);\r\n          \r\n          for(let i = 0; i < esModel.graph.edges.length; i++)\r\n          {\r\n            if (esModel.graph.edges[i].id == data.edges[0]) {\r\n              esModel.graph.edges.splice(i,1)\r\n              break\r\n            }          \r\n          }\r\n          \r\n          let colorChanges = {}\r\n\r\n          for(let i = 0; i < esModel.graph.nodes.length; i++)\r\n  {\r\n    colorChanges[esModel.graph.nodes[i].id] = [0,0]\r\n  }\r\n  for(let i = 0; i < esModel.graph.edges.length; i++)\r\n  {colorChanges[esModel.graph.edges[i].to][1]=1\r\n    colorChanges[esModel.graph.edges[i].from][0]=1  \r\n  }\r\n \r\n  esModel.pravila_end = []\r\n  setEsModel(esModel)\r\n  for(let i = 0; i <esModel.graph.nodes.length; i++)\r\n  {    \r\n    if(colorChanges[esModel.graph.nodes[i].id][0]== 1&&colorChanges[esModel.graph.nodes[i].id][1]== 0 )\r\n    {\r\n      esModel.graph.nodes[i].color = \"#008000\" \r\n    }\r\n    if(colorChanges[esModel.graph.nodes[i].id][0]== 1&&colorChanges[esModel.graph.nodes[i].id][1]== 1 )\r\n    {\r\n      esModel.graph.nodes[i].color = \"#DA70D6\" \r\n    }\r\n    if(colorChanges[esModel.graph.nodes[i].id][0]== 0&&colorChanges[esModel.graph.nodes[i].id][1]== 1 )\r\n    {\r\n      esModel.graph.nodes[i].color = \"#FF0000\"\r\n    }\r\n    if(colorChanges[esModel.graph.nodes[i].id][0]== 0&&colorChanges[esModel.graph.nodes[i].id][1]== 0 )\r\n    {\r\n      esModel.graph.nodes[i].color = \"#F5DEB3\"\r\n    }\r\n  \r\n  }\r\n  for(let i = 0; i <esModel.graph.nodes.length; i++)\r\n  {\r\n  if(String(esModel.graph.nodes[i].color) == \"#FF0000\" || String(esModel.graph.nodes[i].color) == \"#DA70D6\"  )\r\n    {\r\n\r\n      esModel.methods.UpdatePravila(esModel.graph.nodes[i].id)\r\n  }\r\n}\r\n  setEsModel(esModel)\r\n      networks.network.setData({nodes:esModel.graph.nodes, edges:esModel.graph.edges})          \r\n      },\r\n        deleteNode: function (data, callback) {          \r\n          callback(data);\r\n          let toUninstall = []\r\n          \r\n          let willUpdate = false\r\n         for(let i = 0; i < esModel.graph.edges.length; i++)\r\n         {if( esModel.graph.edges[i].from == data.nodes[0]  ||esModel.graph.edges[i].to == data.nodes[0]  )\r\n            { \r\n              toUninstall.push(i)              \r\n            }   \r\n         }         \r\n         for(let i = 0; i <esModel.graph.nodes.length; i++)\r\n         {\r\n          if( esModel.graph.nodes[i].id == data.nodes[0] && esModel.graph.nodes[i].color == \"#F5DEB3\")\r\n          {\r\n            willUpdate = true          \r\n          }\r\n\r\n          if(esModel.graph.nodes[i].id == data.nodes[0] && (esModel.graph.nodes[i].color == \"#008000\" || esModel.graph.nodes[i].color == \"#DA70D6\"|| esModel.graph.nodes[i].color == \"#FF0000\"))\r\n          {\r\n            esModel.pravila_end = []\r\n          }\r\n         }\r\n       \r\n         for(let i = 0; i < toUninstall.length; i++)\r\n         {\r\n          esModel.graph.edges.splice(toUninstall[toUninstall.length-1-i], 1);\r\n         }\r\n         console.log(esModel.graph.edges)\r\n        // esModel.graph.edges.splice(i, 1);\r\n          for(let i = 0; i <esModel.graph.nodes.length; i++ )\r\n          {\r\n            if(esModel.graph.nodes[i].id == data.nodes[0])\r\n            {\r\n              esModel.graph.nodes.splice(i, 1);              \r\n            }\r\n          }\r\n          for(let i = 0; i <esModel.TM.length; i++ )\r\n          {\r\n            if(esModel.TM[i].id == (data.nodes[0]-1))\r\n            { \r\n              esModel.TM.splice(i, 1);            \r\n            }\r\n          }\r\n          esModel.counter--\r\n          \r\n            let newNames = [{}]\r\n          for(let i = 0; i <esModel.graph.nodes.length; i++ )\r\n          {\r\n            newNames[esModel.graph.nodes[i].id] = i+1\r\n              esModel.graph.nodes[i].id = i+1;           \r\n          }\r\n          for(let i = 0; i <esModel.TM.length; i++ )\r\n          {           \r\n              esModel.TM[i].id = i            \r\n          }\r\n      \r\n          setEsModel(esModel)\r\n          for(let i = 0; i <esModel.graph.edges.length; i++ )\r\n          {\r\n            esModel.graph.edges[i].from= newNames[esModel.graph.edges[i].from]          \r\n            esModel.graph.edges[i].to= newNames[esModel.graph.edges[i].to]\r\n          }\r\n          let colorChanges = {}\r\n\r\n          for(let i = 0; i < esModel.graph.nodes.length; i++)\r\n  {\r\n    colorChanges[esModel.graph.nodes[i].id] = [0,0]\r\n  }\r\n for(let i = 0; i < esModel.graph.edges.length; i++)\r\n  {colorChanges[esModel.graph.edges[i].to][1]=1\r\n    colorChanges[esModel.graph.edges[i].from][0]=1  \r\n  }\r\n  \r\n  setEsModel(esModel)\r\n  for(let i = 0; i <esModel.graph.nodes.length; i++)\r\n  {\r\n    \r\n    if(colorChanges[esModel.graph.nodes[i].id][0]== 1&&colorChanges[esModel.graph.nodes[i].id][1]== 0 )\r\n    {\r\n      esModel.graph.nodes[i].color = \"#008000\"   \r\n    }\r\n    if(colorChanges[esModel.graph.nodes[i].id][0]== 1&&colorChanges[esModel.graph.nodes[i].id][1]== 1 )\r\n    {\r\n      esModel.graph.nodes[i].color = \"#DA70D6\"  \r\n    }\r\n    if(colorChanges[esModel.graph.nodes[i].id][0]== 0&&colorChanges[esModel.graph.nodes[i].id][1]== 1 )\r\n    {\r\n      esModel.graph.nodes[i].color = \"#FF0000\"  \r\n    }\r\n    if(colorChanges[esModel.graph.nodes[i].id][0]== 0&&colorChanges[esModel.graph.nodes[i].id][1]== 0 )\r\n    {\r\n      esModel.graph.nodes[i].color = \"#F5DEB3\" \r\n    }\r\n  \r\n  }\r\n  for(let i = 0; i <esModel.graph.nodes.length; i++)\r\n  {\r\nif((String(esModel.graph.nodes[i].color) == \"#FF0000\" || String(esModel.graph.nodes[i].color) == \"#DA70D6\" ) && !willUpdate )\r\n    {      esModel.methods.UpdatePravila(esModel.graph.nodes[i].id) }\r\n}\r\n  setEsModel(esModel)\r\n     networks.network.setData({nodes:esModel.graph.nodes, edges:esModel.graph.edges})\r\n  RenderSelectedTM(0)\r\n        }\r\n     },\r\n      layout: {\r\n        hierarchical: {\r\n          enabled: false,\r\n          direction: 'LR',\r\n          sortMethod:'directed',\r\n          blockShifting: false,\r\n          levelSeparation: 180\r\n        }\r\n      },   \r\n      edges: {\r\n        color: \"#000000\"\r\n      },\r\n    };\r\n\r\n  //const [contacts, setContacts] = useState(data);\r\n  const [addFormData, setAddFormData] = useState({\r\n    fullName: \"\",\r\n    address: \"\",\r\n    phoneNumber: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const [editFormData, setEditFormData] = useState({\r\n    fullName: \"\",\r\n    address: \"\",\r\n    phoneNumber: \"\",\r\n    email: \"\",\r\n  });\r\n  const [editContactId, setEditContactId] = useState(null);\r\n  const [xmlFiles, setXmlFiles] = useState([]);\r\n  const [xmlModeling, setxmlModeling] = useState([]);\r\n  const [xmlName, setXmlName] = useState([]);\r\n  const [indexBodyHtml, setindexBodyHtml] = useState([]);\r\n  \r\n  var o2x = require('object-to-xml');\r\n  window.onbeforeunload = function() {\r\n    return \"A XHR request is pending, are you sure you want to leave ?\";\r\n}\r\n  const [dataS, setData] = useState()\r\n  /*\r\n  useEffect(() => {\r\n    fetch('/api')\r\n    .then(response => response.json()\r\n    .then(response => setData(response.message)))\r\n  } )*/\r\n  const [esModel, setEsModel] = useState({\r\n    regimZaprosa:1,\r\n    zapros :{},\r\n    options: {\r\n      Name:'',\r\n      Author:'',\r\n      userRequest:[]\r\n    },\r\n    structure:{},\r\n    pravilaMode:0,\r\n    TM:\r\n    [\r\n    ],\r\n    pravila_end: \r\n    {1:['1_1...1_1',\r\n    '1_2...2_0.8',\r\n    '1_3...1_0.9',  \r\n    '2_1...2_0.7',\r\n    '2_2...1_0.9',\r\n    '2_3...2_1',  \r\n    '3_1...1_0.9',\r\n    '3_2...1_0.8',\r\n    '3_3...2_0.9',  \r\n    ],},\r\n    counter:0,\r\n    graph: {\r\n      nodes: [       \r\n         ],\r\n      edges: [       \r\n      ],   \r\n    },\r\n    events: {      \r\n     release: ({ nodes, edges }) => {\r\n        let pos = networks.network.getPositions()\r\n        },\r\n      dragEnd: ({ nodes, edges }) => {\r\n        let pos = networks.network.getPositions()\r\n         for (let i = 0; i<esModel.graph.nodes.length; i++ )\r\n         {\r\n           esModel.graph.nodes[i].x = pos[esModel.graph.nodes[i].id].x\r\n           esModel.graph.nodes[i].y = pos[esModel.graph.nodes[i].id].y \r\n         }\r\n         setEsModel(esModel)\r\n         networks.network.setData({nodes:esModel.graph.nodes, edges:esModel.graph.edges})       \r\n        },\r\n      click: ({ nodes, edges }) => {    \r\n      if(nodes[0] != null)\r\n      {\r\n        RenderSelectedTM(nodes[0]-1)        \r\n      }     \r\n      },\r\n    \r\n      doubleClick: ({ pointer: { canvas } }) => {\r\n      let pos = networks.network.getPositions()      \r\n        for (let i = 0; i<esModel.graph.nodes.length; i++ )\r\n        {\r\n          esModel.graph.nodes[i].x = pos[esModel.graph.nodes[i].id].x\r\n          esModel.graph.nodes[i].y = pos[esModel.graph.nodes[i].id].y\r\n        }\r\n        esModel.methods.AddTMInputLevel(esModel.graph.nodes.length)\r\n        createNode(canvas.x, canvas.y);\r\n        setEsModel(esModel)\r\n        networks.network.setData({nodes:esModel.graph.nodes, edges:esModel.graph.edges})   \r\n        RenderSelectedTM(esModel.graph.nodes.length-1)\r\n      },\r\n      showPopup: ({ nodes, edges }) => {       \r\n      },\r\n    },\r\n    methods:\r\n    \r\n    { \r\n      changeRegimVivoda: (value) => {\r\n        esModel.regimZaprosa = value\r\n        setEsModel(esModel)\r\n        console.log(value)\r\n        \r\n      },\r\n      \r\n      DefZapros:(TmNumber) =>\r\n      {\r\n        esModel.zapros[String(TmNumber)] = \"1\"\r\n        setEsModel(esModel)\r\n      },\r\n      SetZapros:(TmNumber, value) =>\r\n      {        \r\n        esModel.zapros[String(TmNumber)] = value\r\n        setEsModel(esModel)\r\n        console.log(esModel.zapros)\r\n        //RenderModelingMenu()\r\n\r\n      },\r\n      ChangeCoeff:(row, pos, value, nymberTM) =>\r\n      {\r\n      let urovenPrav\r\n      urovenPrav = eval(\"esModel.pravila_end[\"+(Number(nymberTM))+\"]\")\r\n      let leftSide = urovenPrav[row-1].split(\"...\")[0]\r\n      let rightSide = urovenPrav[row-1].split(\"...\")[1].split(\"-\")\r\n      rightSide[pos-1]=\"\"+rightSide[pos-1].split(\"_\")[0] +'_'+value\r\n      let peresobran = \"\"+leftSide+\"...\"\r\n      let rightPeresobran=\"\"\r\n      for(let i = 0; i < rightSide.length; i++)\r\n      {        \r\n        rightPeresobran= rightPeresobran+rightSide[i]\r\n        if((i+1) < rightSide.length)\r\n        {\r\n          rightPeresobran = \"\"+rightPeresobran+\"-\"\r\n        } \r\n      }\r\n      peresobran = \"\"+peresobran+\"\"+rightPeresobran \r\n      urovenPrav[row-1] = peresobran\r\n      setEsModel(esModel)\r\n      RenderPravila((Number(nymberTM)))\r\n      },\r\n      ChangeX:(events) =>{\r\n        let zelen =[]\r\n        let fiolet = []\r\n        let obr1 = []\r\n        let obrabotka = {}\r\n        let krasn = []\r\n        for(let i = 0; i < esModel.graph.nodes.length; i ++)\r\n        {        \r\n          if(esModel.graph.nodes[i].color == \"#008000\")\r\n          {\r\n            esModel.graph.nodes[i].y =  0\r\n            zelen[zelen.length] = i+1\r\n            esModel.graph.nodes[i].x =  -300+zelen.length*150\r\n          }\r\n           if(esModel.graph.nodes[i].color == \"#DA70D6\")\r\n           {\r\n             esModel.graph.nodes[i].y =  -250\r\n             fiolet[fiolet.length] = i+1\r\n           }\r\n          if(esModel.graph.nodes[i].color == \"#FF0000\")\r\n          {\r\n            esModel.graph.nodes[i].y =  -500\r\n            krasn[krasn.length] = i+1\r\n          }\r\n        }\r\n        obrabotka['input'] = zelen\r\n        obrabotka['output'] = krasn\r\n        let spisok = {}\r\n        urovniObrabotki = {}\r\n        for(let i =0; i<fiolet.length; i++)\r\n        {\r\n          pp =[]\r\n          getLevelTMObrabotki(fiolet[i], zelen)\r\n        }\r\n        console.log(urovniObrabotki)\r\n        let numberKey=50\r\n        for(var key in urovniObrabotki)\r\n        {\r\n          urovniObrabotki[numberKey] =urovniObrabotki[key]\r\n          numberKey++\r\n          delete urovniObrabotki[key]\r\n        }\r\n        numberKey=1\r\n        for(var key in urovniObrabotki)\r\n        {\r\n          urovniObrabotki[numberKey] =urovniObrabotki[key]\r\n          numberKey++\r\n          delete urovniObrabotki[key]\r\n        }\r\n       \r\n        for(var key in urovniObrabotki)\r\n        {          \r\n          for(let i =0; i < urovniObrabotki[key].length; i++)\r\n          {          \r\n            for(let y=0; y< esModel.graph.nodes.length; y++)\r\n            {\r\n              if( esModel.graph.nodes[y].id ==urovniObrabotki[key][i] )              \r\n              {\r\n                esModel.graph.nodes[y].y = (-100 * Number(key))\r\n                esModel.graph.nodes[y].x =-225+(150* (i+1))                             \r\n              }  \r\n            }\r\n          }\r\n        }\r\n        let outCounter =0\r\n        for(let i = 0; i < esModel.graph.nodes.length; i ++)\r\n        {\r\n           if(esModel.graph.nodes[i].color == \"#FF0000\")\r\n          {            \r\n            esModel.graph.nodes[i].y =  Object.keys(urovniObrabotki).length* (-100) -100\r\n            esModel.graph.nodes[i].x = -150+ (150* (outCounter+1))\r\n            outCounter++\r\n          }  \r\n        }\r\n        outCounter =0\r\n        urovniObrabotki['input'] = zelen\r\n        urovniObrabotki['output'] = krasn\r\n        console.log( urovniObrabotki)\r\n        esModel.structure = urovniObrabotki\r\n\r\n        setEsModel(esModel)\r\n        networks.network.setData({nodes:esModel.graph.nodes, edges:esModel.graph.edges})       \r\n        RenderSelectedTM(0)\r\n      },\r\n      UpdatePravila:(events) => \r\n      {\r\n      let toNode\r\n      if(events.target != undefined)\r\n       toNode = Number(events.target.id)+1\r\n       else  toNode=events   \r\n       esModel.pravilaMode =1\r\n\r\nlet otKokogo = []\r\nlet massivFrom =[]\r\nfor(let i = 0; i < esModel.graph.edges.length; i ++)\r\n      {\r\n        if(esModel.graph.edges[esModel.graph.edges.length-i-1].to == Number(toNode))\r\n        {\r\n          massivFrom.push(esModel.graph.edges[esModel.graph.edges.length-i-1].from )\r\n        }\r\n      }\r\n      for(let i = 0; i <massivFrom.length; i ++)\r\n      {for(let j = 0; j <esModel.TM.length; j ++)\r\n        {\r\n          if(esModel.TM[esModel.TM.length-j-1].id == Number(massivFrom[i]-1))\r\n        {\r\n          otKokogo.push(esModel.TM[esModel.TM.length-j-1])\r\n        }}\r\n      }\r\nif(otKokogo<=0)\r\nreturn;\r\n\r\nlet leftArray = []\r\n       for(let i = 0; i < otKokogo.length; i ++)\r\n      { \r\n        leftArray.push([])\r\n        for(let j = 0; j <otKokogo[otKokogo.length-1-i].termsCount; j++ )\r\n        {\r\n          leftArray[i][j] = (String(j+1))\r\n        }\r\n      }\r\n\r\n      let arr = []\r\n      let cartes = cartesian(leftArray)\r\n      let start2 = false\r\n      for(let i =0; i <cartes.length; i++ )\r\n      {\r\n        if(!start2)arr.push([])\r\n        arr[i] =\"\"\r\n        for(let j =0; j< cartes[i].length; j++)\r\n        { \r\n          arr[i] +=cartes[i][j]\r\n          if(j+1 <cartes[i].length )\r\n          arr[i] +=\"_\" \r\n          else arr[i]+= \"...\"\r\n        }\r\n          start2 = true \r\n      }\r\n      let doKokogo = []\r\n\r\n      for(let i = 0; i < esModel.TM.length; i ++)\r\n      {\r\n        if(esModel.TM[i].id == Number(toNode-1))\r\n        { \r\n          doKokogo.push(esModel.TM[i])\r\n        }\r\n      }\r\n      \r\n      let start3 = false\r\n      let rSide = []\r\n\r\n      for(let i = 0; i < cartes.length; i ++)\r\n      { \r\n        if(!start3)leftArray.push([])\r\n        rSide[i]=''\r\n        for(let j = 0; j <doKokogo.length; j++ )\r\n        {\r\n          rSide[i] += \"1_1\"\r\n          if(j+1 < doKokogo.length)\r\n          rSide[i] += \"-\"\r\n        }        \r\n        start3 = true\r\n      }  \r\n      for(let i = 0; i < cartes.length; i ++)\r\n      {\r\n        arr[i] += rSide[i] \r\n      }     \r\n      esModel.pravila_end[String(toNode)] = arr\r\nsetEsModel(esModel)\r\n},\r\nchangeEsName: (value) => {       \r\n  esModel.options.Name= String(value.target.value)\r\n  setEsModel(esModel)\r\n  RenderOptionsMenu()\r\n },\r\n changeEsAuthor: (value) => { \r\n  esModel.options.Author= String(value)\r\n  esModel.options.Author= String(value.target.value)\r\n  setEsModel(esModel)\r\n  RenderOptionsMenu()\r\n },\r\n      ChangePravila:(row, pos, value,urovenObrabotki) =>\r\n      {\r\n        let urovenPrav\r\n        urovenPrav = esModel.pravila_end[urovenObrabotki]\r\n        let leftSide = urovenPrav[row-1].split(\"...\")[0]\r\n        let rightSide = urovenPrav[row-1].split(\"...\")[1].split(\"-\")\r\n       rightSide[pos-1]=\"\"+value +'_'+rightSide[pos-1].split(\"_\")[1] \r\n   \r\n      let peresobran = \"\"+leftSide+\"...\"\r\n      let rightPeresobran=\"\"\r\n      for(let i = 0; i < rightSide.length; i++)\r\n      {       \r\n        rightPeresobran= rightPeresobran+rightSide[i]\r\n        if((i+1) < rightSide.length)\r\n        {\r\n          rightPeresobran = \"\"+rightPeresobran+\"-\"\r\n        } \r\n      }\r\n      peresobran = \"\"+peresobran+\"\"+rightPeresobran\r\n      urovenPrav[row-1] = peresobran\r\n      setEsModel(esModel)      \r\n      },\r\n      ChangePlotColor:(TmNumber, TermNumber, color) =>\r\n      {\r\n        esModel.TM[TmNumber].plotsColors[TermNumber] = color\r\n        setEsModel(esModel)\r\n        RenderSelectedTM(Number(TmNumber))\r\n      },\r\n       deletePointplot: (TmNumber, TermNumber) => {       \r\n        let deleteNumber = Object.keys(esModel.TM[TmNumber].coords[TermNumber]).length/2; \r\n        delete esModel.TM[TmNumber].coords[TermNumber][\"x\"+deleteNumber]\r\n        delete esModel.TM[TmNumber].coords[TermNumber][\"y\"+deleteNumber]\r\n        setEsModel(esModel)\r\n        RenderSelectedTM(Number(TmNumber))\r\n       },\r\n        addNewPointPlot: (TmNumber, TermNumber) => {\r\n          let newPointNumber = Object.keys(esModel.TM[TmNumber].coords[TermNumber]).length/2+1;\r\n          let newCoordsNameX = \"x\"+newPointNumber;\r\n          let newCoordsNameY = \"y\"+newPointNumber;\r\n          esModel.TM[TmNumber].coords[TermNumber][newCoordsNameX] = 0;\r\n          esModel.TM[TmNumber].coords[TermNumber][newCoordsNameY] = 0;\r\n          setEsModel(esModel) \r\n          RenderSelectedTM(Number(TmNumber))\r\n         },\r\n       changeCoordsValue: (TmNumber, TermNumber, key,value) => {       \r\n          esModel.TM[TmNumber].coords[TermNumber][key] = Number(value)\r\n          setEsModel(esModel)\r\n          RenderSelectedTM(Number(TmNumber))\r\n         },\r\n      deleteTerm: (TmNumber) => {\r\n        \r\n        if ( esModel.TM[TmNumber].termsCount == 1)\r\n        return\r\n\r\n        let willUpdate = false\r\n        for(let i = 0; i <esModel.graph.nodes.length; i++)\r\n        {\r\n         if( esModel.graph.nodes[i].id == (Number(TmNumber)+1) && esModel.graph.nodes[i].color == \"#F5DEB3\")\r\n         {\r\n          willUpdate = true          \r\n         }\r\n\r\n         if(esModel.graph.nodes[i].id == (Number(TmNumber)+1) && (esModel.graph.nodes[i].color == \"#008000\" || esModel.graph.nodes[i].color == \"#DA70D6\"|| esModel.graph.nodes[i].color == \"#FF0000\"))\r\n         {\r\n           esModel.pravila_end = []\r\n         }\r\n        }\r\n        esModel.TM[TmNumber].termsCount = esModel.TM[TmNumber].termsCount-1\r\n        //\r\n        let newTermName = \"term\"+ (Object.keys(esModel.TM[TmNumber].termsNames).length);\r\n      delete esModel.TM[TmNumber].termsNames[newTermName]\r\n       esModel.TM[TmNumber].coords.splice(esModel.TM[TmNumber].coords.length-1,1)  \r\n        esModel.TM[TmNumber].plotsColors.pop()\r\n        let popup = \"\"\r\n        for(let i =0; i< esModel.TM[TmNumber].termsCount; i++)\r\n        {\r\n          popup+=\"\"+esModel.TM[TmNumber].termsNames[\"term\"+String(i+1)]+\"\\n\"\r\n        }\r\n        esModel.graph.nodes[TmNumber].title=popup\r\n        networks.network.setData({nodes:esModel.graph.nodes, edges:esModel.graph.edges})\r\n\r\n        setEsModel(esModel)\r\n        for(let i = 0; i <esModel.graph.nodes.length; i++)\r\n        {\r\n     if((String(esModel.graph.nodes[i].color) == \"#FF0000\" || String(esModel.graph.nodes[i].color) == \"#DA70D6\" )&&!willUpdate )\r\n          {      \r\n            esModel.methods.UpdatePravila(esModel.graph.nodes[i].id)\r\n          }\r\n      }\r\n        setEsModel(esModel)\r\n       RenderSelectedTM(Number(TmNumber))\r\n\r\n       },\r\n      addNewTerm: (TmNumber) => {        \r\n        let willUpdate = false\r\n        for(let i = 0; i <esModel.graph.nodes.length; i++)\r\n        {\r\n         if( esModel.graph.nodes[i].id == (Number(TmNumber)+1) && esModel.graph.nodes[i].color == \"#F5DEB3\")\r\n         {\r\n          willUpdate = true\r\n         }\r\n\r\n         if(esModel.graph.nodes[i].id == (Number(TmNumber)+1) && (esModel.graph.nodes[i].color == \"#008000\" || esModel.graph.nodes[i].color == \"#DA70D6\"|| esModel.graph.nodes[i].color == \"#FF0000\"))\r\n         {\r\n           esModel.pravila_end = []\r\n         }\r\n        }\r\n        esModel.TM[TmNumber].termsCount = esModel.TM[TmNumber].termsCount+1\r\n       let newTermName = \"term\"+ (Object.keys(esModel.TM[TmNumber].termsNames).length+1);\r\n        esModel.TM[TmNumber].termsNames[newTermName] = \"new_term\"\r\n        let t= {x1:0,y1:0,x2:0,y2:0,x3:0,y3:0,x4:0,y4:0};\r\n         esModel.TM[TmNumber].coords.push(t);\r\n         esModel.TM[TmNumber].plotsColors.push(\"#000000\");\r\n         let popup = \"\"\r\n        for(let i =0; i< esModel.TM[TmNumber].termsCount; i++)\r\n        {\r\n          popup+=\"\"+esModel.TM[TmNumber].termsNames[\"term\"+String(i+1)]+\"\\n\"\r\n        }\r\n        esModel.graph.nodes[TmNumber].title=popup\r\n        networks.network.setData({nodes:esModel.graph.nodes, edges:esModel.graph.edges})\r\n        \r\n        \r\n        for(let i = 0; i <esModel.graph.nodes.length; i++)\r\n        {\r\n     if((String(esModel.graph.nodes[i].color) == \"#FF0000\" || String(esModel.graph.nodes[i].color) == \"#DA70D6\")&& !willUpdate )\r\n          {      \r\n            esModel.methods.UpdatePravila(esModel.graph.nodes[i].id)\r\n        }\r\n      }   \r\n        setEsModel(esModel)\r\n         RenderSelectedTM(Number(TmNumber))         \r\n       },\r\n      changeTermName: (TmNumber, TermNumber, newName) => {       \r\n        esModel.TM[TmNumber].termsNames[\"term\"+TermNumber] = newName\r\n        setEsModel(esModel)\r\n        let popup = \"\"\r\n        for(let i =0; i< esModel.TM[TmNumber].termsCount; i++)\r\n        {\r\n          popup+=\"\"+esModel.TM[TmNumber].termsNames[\"term\"+String(i+1)]+\"\\n\"\r\n        }\r\n        esModel.graph.nodes[TmNumber].title=popup\r\n        networks.network.setData({nodes:esModel.graph.nodes, edges:esModel.graph.edges})\r\n        RenderSelectedTM(Number(TmNumber))\r\n       },\r\n\r\n      AddTMInputLevel:(id) =>\r\n      {\r\n          esModel.TM.push({\r\n          id: id,\r\n          name: '',\r\n          termsCount:2,\r\n          termsNames: {term1: '', term2: '',},\r\n          coords:[{x1:0, y1:0, x2:0, y2:1, x3:1, y3:1,x4:1,y4:0},\r\n                  {x1:1, y1:0, x2:1, y2:1, x3:2, y3:1,x4:2,y4:0 },       \r\n                ],    \r\n                plotsColors:['#000000','#000000',] ,   \r\n        },)\r\n        setEsModel(esModel)\r\n      },      \r\n      ChangeSelectedTMName:(id,name) =>\r\n      {\r\n         esModel.TM[id].name = String(name)\r\n         esModel.graph.nodes[id].label = name\r\n         setEsModel(esModel)\r\n         RenderSelectedTM(Number(id))\r\n         networks.network.setData({nodes:esModel.graph.nodes, edges:esModel.graph.edges})         \r\n      },\r\n    } })\r\n    const [indexBodyHtml2, setindexBodyHtml2] = useState([['НАСТРОЙКИ'],[\r\n    <div>НАЗВАНИЕ ЭС: <input class = \"EsNameInput\"  value = {esModel.options.Name}  onInput={esModel.methods.changeEsName} />\r\n   АВТОР ЭС: <input class = \"EsAuthorInput\"   value = {esModel.options.Author}  onInput={esModel.methods.changeEsAuthor} />\r\n  </div>]]);\r\n    \r\n    \r\n  const { graph, events } = esModel;\r\n  const [ networks, setNetwork ] = useState({network: {}});\r\n  let states = { network: {} };\r\n  \r\n\r\nlet uroven =0\r\nlet zz\r\nlet pp=[]\r\nlet start \r\nlet urovniObrabotki={}\r\nfunction getLevelTMObrabotki(obj, zelen) {\r\n \r\n  \r\n  if(zz == undefined)\r\n  {\r\n    zz = zelen\r\n    start = obj\r\n  }\r\n  \r\n\r\n  for(let i =0; i < esModel.graph.edges.length; i++)\r\n  {\r\n    if(start == obj)\r\n    uroven =0\r\n    if(esModel.graph.edges[i].to == obj  )\r\n      {uroven = uroven +1        \r\n        if(zz.includes(esModel.graph.edges[i].from))\r\n        { \r\n          pp[pp.length]=(uroven)\r\n          uroven= uroven-1    \r\n        } else getLevelTMObrabotki(esModel.graph.edges[i].from)\r\n      }     \r\n  }\r\n  if(start == obj)\r\n  {\r\n    console.log(pp)\r\n    if(urovniObrabotki[Math.max(...pp)] == undefined)\r\n    {\r\n      urovniObrabotki[Math.max(...pp)] = []\r\n      urovniObrabotki[Math.max(...pp)][urovniObrabotki[Math.max(...pp)].length] =obj\r\n      start =undefined\r\n      zz = undefined\r\n    }\r\n    else {urovniObrabotki[Math.max(...pp)][urovniObrabotki[Math.max(...pp)].length] =obj\r\n      start =undefined\r\n      zz = undefined    \r\n    }  \r\n  }\r\n}\r\n\r\n  function  changePravila (row, pos, value, coeff ) { \r\n\r\n   esModel.methods.ChangePravila(row, pos, value, coeff)};\r\n  function  changeCoeff (row, pos, coeff, urObr ) {esModel.methods.ChangeCoeff(row, pos,  coeff, urObr)\r\n  };\r\n\r\n  function cartesian(arg) {\r\n    var r = [], args = arg;\r\n    args.reduceRight(function(cont, factor, i) {\r\n        return function(arr) {\r\n            for (var j=0, l=factor.length; j<l; j++) {\r\n                var a = arr.slice(); // clone arr\r\n                a[i] = factor[j];\r\n                cont(a);\r\n            }\r\n        };\r\n    }, Array.prototype.push.bind(r))(new Array(args.length));\r\nlet t = r.length \r\n    return r;\r\n}\r\n\r\nfunction SendXmlModelling()\r\n{\r\n let tempXML = {}\r\n if(esModel.TM.length == 1 )\r\n {\r\n   tempXML[\"TM\"]= []\r\n   tempXML[\"TM\"].push(esModel.TM)\r\n }\r\n else tempXML[\"TM\"] = esModel.TM\r\n let pravilaDict = {}\r\n let pravilaDict1 = {}\r\n for(let t = 0; t< esModel.pravila_end.length; t++){\r\nlet st = \"\"+t\r\npravilaDict[st] = esModel.pravila_end[t]\r\n }\r\n pravilaDict1 = pravilaDict\r\n for (var key in pravilaDict)\r\n {\r\n\r\nif(pravilaDict[key] == \"\")\r\n{pravilaDict[key] = ''\r\n}\r\npravilaDict['n'+key] = pravilaDict[key]\r\ndelete pravilaDict[key]\r\n }\r\n tempXML[\"pravila_end\"] = pravilaDict1\r\n tempXML[\"pravila_temp\"] = pravilaDict\r\n tempXML[\"graph\"] = esModel.graph\r\n tempXML[\"counter\"] = esModel.counter\r\n tempXML[\"options\"] = esModel.options\r\n\r\n\r\nlet tempStructure = {} // esModel.structure\r\n for (var key in esModel.structure)\r\n {\r\n   tempStructure['n_'+key] = esModel.structure[key]\r\n }\r\n tempXML[\"structure\"] = tempStructure\r\n\r\n     const file = new Blob([o2x(tempXML)],{ type: 'text/xml'});\r\n     const zapros = esModel.zapros // {'1':'1.35','2':'1','3':'1'}\r\n     setxmlModeling(file)\r\n    const data = new FormData()\r\n    data.append('zapros', JSON.stringify(zapros))\r\n    data.append('file', file)\r\n    axios.post(\"https://aesfu.ru/api/study/flm-builder\", data, { //https://aesfu.ru/api/study/flm-builder\r\n   })\r\n .then(res => { \r\nif (esModel.regimZaprosa == 1)\r\n  {\r\n    var temp = res.data\r\n    var str = \"\"\r\n    temp.map((p) => {str +=(\"[\" + p[0] + \",\"+p[1]+\"] \\n\") })\r\n    // RenderModelingMenu(\"[\" + res.data[0] + \",\"+res.data[1]+\"]\")\r\n    RenderModelingMenu(str)\r\n\r\n  } \r\nif (esModel.regimZaprosa == 2)\r\n{\r\nconsole.log(esModel.structure.output)\r\nconsole.log(esModel.TM[esModel.structure.output[0]  - 1])\r\nvar temp =  res.data\r\nvar str = \"\"\r\ntemp.map((item, index) => {str +=(esModel.TM[esModel.structure.output[index]  - 1].termsNames[\"term\"+item[0]]+ \" с вероятностью \" +item[1] + \"  \") })\r\n    RenderModelingMenu(str)\r\n}\r\n   \r\n\r\n   \r\n\r\n  })  \r\n\r\n}\r\n\r\n function SaveToXMLOnComputer()\r\n {\r\n  let tempXML = {}\r\n  if(esModel.TM.length == 1 )\r\n  {\r\n    tempXML[\"TM\"]= []\r\n    tempXML[\"TM\"].push(esModel.TM)\r\n  }\r\n  else tempXML[\"TM\"] = esModel.TM\r\n\r\n\r\n\r\nconsole.log(esModel.pravila_end)\r\n  let pravilaDict = {}\r\n  let pravilaDict1 = {}\r\n  for(let t = 0; t< esModel.pravila_end.length; t++){\r\nlet st = \"\"+t\r\npravilaDict[st] = esModel.pravila_end[t]\r\n  }\r\n  pravilaDict1 = pravilaDict\r\n  for (var key in pravilaDict)\r\n  {\r\n\r\nif(pravilaDict[key] == \"\")\r\n{pravilaDict[key] = ''\r\n}\r\npravilaDict['n'+key] = pravilaDict[key]\r\ndelete pravilaDict[key]\r\n  }\r\n  console.log(pravilaDict)\r\n  tempXML[\"pravila_end\"] = pravilaDict1\r\n  tempXML[\"pravila_temp\"] = pravilaDict\r\n  tempXML[\"graph\"] = esModel.graph\r\n  tempXML[\"counter\"] = esModel.counter\r\n  tempXML[\"options\"] = esModel.options\r\n\r\n\r\n let tempStructure = {} // esModel.structure\r\n  for (var key in esModel.structure)\r\n  {\r\n    tempStructure['n_'+key] = esModel.structure[key]\r\n  }\r\n  tempXML[\"structure\"] = tempStructure\r\n\r\n  const element = document.createElement(\"a\");\r\n  document.body.appendChild(element); \r\n  \r\n      const file = new Blob([o2x(tempXML)],{ type: 'text/xml'});\r\n      element.href = URL.createObjectURL(file);\r\n      element.download = \"myFile654.xml\";      \r\n      element.click();\r\n     \r\n\r\n }\r\n function Pravila(arg)\r\n {\r\n let uroven = 0\r\n let urovniPravil = []\r\n  let okolo = [] \r\n  okolo.push(<div class = \"Blochek\">\r\n \r\n    {Table(esModel, 2,changePravila,changeCoeff,arg)  }\r\n \r\n    </div>)\r\n\r\n  setindexBodyHtml2(okolo)\r\n\r\n }\r\n function ConsoleXml(xmlStr)\r\n{\r\nconsole.log(xmlStr)\r\nconst a = document.createElement(\"a\");\r\ndocument.body.appendChild(a); \r\na.download = \"FLMmodel.xml\"\r\n    const file = new File([xmlStr], \"FLMmodel.xml\",{ type: 'text/xml'});\r\n    sendToServer( file)\r\n} \r\nfunction XmlOnServer()\r\n{\r\n//let f = new File(\"./temp.xml\")\r\nconst iconv = require('iconv-lite');\r\nconst encodedData =  iconv.decode(Buffer.from(xmlFiles), 'utf-8')//windows-1251 //Buffer.from(response.data)\r\nconst parser = new XMLParser()\r\nlet jObj = parser.parse(encodedData)\r\nconsole.log(jObj);\r\n/*\r\n\r\nconst axios = require('axios').default;\r\naxios.get(\"/xmlS/filedddd.xml\", {  \r\n    responseType: 'arraybuffer',\r\n    responseEncoding: 'binary'  \r\n\r\n}).then((response) => {\r\n\r\n\r\n})\r\n.catch((response) => {\r\n  console.log('FAILURE!!'+response);\r\n}); */\r\n}\r\n\r\nconst changeTermName = event => {    \r\n  input_Name = event.target.value\r\n\r\n  if(event.target.name.split(\"_\")[0].match(/[a-zA-Z]+/g)[0] == \"termInput\")\r\n  {  \r\n    esModel.methods.changeTermName(event.target.name.split(\"_\")[0].match(/\\d+/g)[0],event.target.name.split(\"_\")[1],event.target.value)   \r\n  }\r\n};\r\n\r\n\r\nconst ChangeColor = event => \r\n{\r\nif(event.target.id.split(\"_\")[0].match(/[a-zA-Z]+/g)[0] == 'termInput')\r\n    {  \r\n      esModel.methods.ChangePlotColor( event.target.id.split(\"_\")[0].match(/\\d+/g)[0],event.target.id.split(\"_\")[1] - 1,event.target.value)     \r\n    }\r\n};\r\nconst DeletePointPlot = event => {  \r\n if(event.target.id.split(\"_\")[0].match(/[a-zA-Z]+/g)[0] == \"termInput\"){\r\n esModel.methods.deletePointplot(event.target.id.split(\"_\")[0].match(/\\d+/g)[0],event.target.id.split(\"_\")[1]-1);\r\n}\r\n }\r\nconst changeCoordsValues = event => {  \r\n    input_Name = event.target.name\r\n  if(event.target.id.split(\"_\")[0].match(/[a-zA-Z]+/g)[0] == \"termInput\"){    \r\n    esModel.methods.changeCoordsValue(event.target.id.split(\"_\")[0].match(/\\d+/g)[0],event.target.id.split(\"_\")[1] - 1,event.target.name.split(\"_\")[0],event.target.value)     \r\n    }\r\n  };\r\n  const addNewPointPlot= event => { \r\n    if(event.target.id.split(\"_\")[0].match(/[a-zA-Z]+/g)[0] == \"termInput\"){\r\n    esModel.methods.addNewPointPlot(event.target.id.split(\"_\")[0].match(/\\d+/g)[0],event.target.id.split(\"_\")[1]-1);        \r\n  }        \r\n  }\r\n\r\nconst AddNewTerm = event => {esModel.methods.addNewTerm(event.target.id)};\r\nconst DeleteTerm = event => {esModel.methods.deleteTerm(event.target.id)};\r\n\r\n\r\n\r\n\r\nconst RenderOptionsMenu = selectedIndex => {\r\n\r\n  let indexB= []\r\n  indexB= ['OPTIONS']\r\n  indexB.push (\r\n    <div>NAME ES:<input class = \"EsNameInput\"  value = {esModel.options.Name} onInput={esModel.methods.changeEsName} />\r\n    AUTHOR ES:<input class = \"EsAuthorInput\"   value = {esModel.options.Author}  onInput={esModel.methods.changeEsAuthor} />\r\n   </div>\r\n    )\r\n  setindexBodyHtml2(indexB)\r\n\r\n  //\r\n}\r\nconst ChangeZapros = selectedIndex => {\r\n  \r\n // console.log(selectedIndex.target.id + \" value = \"+String(selectedIndex.target.selectedIndex+1))\r\n\r\n esModel.methods.SetZapros(selectedIndex.target.id, String(selectedIndex.target.selectedIndex+1))\r\n}\r\n\r\n\r\n//режим вывода в окне моделирования\r\nconst ChangeRegimZaprosa = selectedIndex => {\r\n  \r\n  // console.log(selectedIndex.target.id + \" value = \"+String(selectedIndex.target.selectedIndex+1))\r\n  console.log(selectedIndex.target.value);\r\n  esModel.methods.changeRegimVivoda(selectedIndex.target.value)\r\n\r\n \r\n  //esModel.methods.SetZapros(selectedIndex.target.id, String(selectedIndex.target.selectedIndex+1))\r\n }\r\n \r\nconst ChangeZaprosInput = selectedIndex => {\r\n  \r\n //console.log(selectedIndex.target.name+\"   \"+String(selectedIndex.target.value))\r\n \r\n  esModel.methods.SetZapros(selectedIndex.target.name, String(selectedIndex.target.value))\r\n }\r\n\r\n\r\n  const RenderModelingMenu = data => {\r\n    let indexB= []\r\n    indexB= ['МОДЕЛИРОВАНИЕ']\r\n    console.log(esModel.structure)\r\n     //onChange={}  console.log(esModel.TM[x].name)\r\n     indexB.push(<div><select onChange={ChangeRegimZaprosa} >\r\n      <option value=\"1\">Значение</option>\r\n      <option value=\"2\">Значение+Расшифровка</option> \r\n    </select>\r\n    </div>);\r\n    \r\n    for(let i =0; i < esModel.structure['input'].length; i++)\r\n    {\r\n      let nameTM = ''\r\n      let number = 0\r\n      \r\n      for(let x = 0; x < esModel.TM.length; x++)\r\n      {\r\n        if(esModel.TM[x].id == String(esModel.structure['input'][i] -1))\r\n        {     \r\n          nameTM += esModel.TM[x].name\r\n          number = x\r\n        }\r\n      }\r\n     \r\n\r\nif(esModel.zapros[esModel.structure['input'][i]] == undefined)\r\n      esModel.methods.DefZapros(esModel.structure['input'][i])\r\n        //решаем вывести  выпадающий список или поле ввода\r\n        if (Object.keys(esModel.TM[number].coords[0]).length == 2 )\r\n        {\r\n          indexB.push (        \r\n            <div>ТЕРМ - МНОЖЕСТВО ( {esModel.structure['input'][i]} ) ({nameTM}):\r\n            <select className=\"custom-select\" id={esModel.structure['input'][i]} onChange={ChangeZapros} defaultValue = {esModel.TM[esModel.structure['input'][i]-1].termsNames[\"term\"+esModel.zapros[esModel.structure['input'][i]]]}>\r\n               {Object.values(esModel.TM[number].termsNames).map((option, index) =>\r\n                 <option key={ index} id={option} value = {option}>{option}</option>\r\n              ) }\r\n          </select>\r\n           </div>)\r\n        }\r\n        else {\r\nindexB.push (        \r\n  <div>ТЕРМ - МНОЖЕСТВО ( {esModel.structure['input'][i]} ) ({nameTM}):\r\n <input type=\"text\" \r\n            className=\"form-control\" \r\n            placeholder=\"...\" \r\n            name ={esModel.structure['input'][i]}\r\n            onChange={ChangeZaprosInput}/ >\r\n\r\n\r\n </div>)\r\n\r\n        }\r\n     \r\n     \r\n    }    \r\n    \r\n    indexB.push ( <div><button  onClick={SendXmlModelling} > МОДЕЛИРОВАТЬ</button></div>)\r\n\r\n    console.log( data)\r\n   if(typeof data == \"string\")   \r\n    indexB.push (<div>{data} </div>) \r\n       setindexBodyHtml2(indexB) \r\n    \r\n    }\r\n\r\nconst changeSelectedTMName = event => {   \r\n  input_Name = event.target.id\r\nif(event.target.id.split(\"_\")[0].match(/[a-zA-Z]+/g)[0] == \"term\")\r\n{ \r\n    esModel.methods.ChangeSelectedTMName(event.target.id.split(\"_\")[1],event.target.value)\r\n}\r\n\r\n};  \r\n\r\nconst RenderSelectedTM = selectedIndex => {\r\n  //console.log(esModel)\r\n  let tm \r\n  \r\n   tm = selectedIndex\r\n  let arrayTerms =[]\r\n  let temp =[]\r\n  let points4Plots =[]\r\n  let points ;\r\n  inputLevelCounter = 0\r\n  let pravilaButton = []\r\n  \r\n for(let i = 0; i < esModel.graph.nodes.length;i++)\r\n {\r\n  if(esModel.graph.nodes[i].id == (selectedIndex+1) && (esModel.graph.nodes[i].color == '#DA70D6' || esModel.graph.nodes[i].color == '#FF0000'))\r\n  {\r\n    pravilaButton = [<button  id = {tm} onClick={RenderPravila}> ПРАВИЛА: </button>]\r\n\r\n  }\r\n\r\n }\r\n  for(let i=0; i <esModel.TM.length; i++)  \r\n  {\r\n        if(esModel.TM[i].id == (tm))\r\n    {\r\n\r\n      tm = i\r\n    }\r\n  }\r\n \r\n  \r\n    let nm = \"term_\"+tm\r\n  temp.push(     <div>\r\n\r\n    <div> <label class=\"myLabel\" > ТЕРМ - МНОЖЕСТВО №{tm + 1} </label></div>\r\n     <label class=\"myLabel\" >НАЗВАНИЕ ТМ: </label>\r\n        <input type=\"text\" \r\n                  value= {esModel.TM[tm].name}\r\n                  className=\"form-control\" \r\n                  id= {nm}\r\n                  placeholder=\"...\" \r\n                  onChange={changeSelectedTMName}/ >\r\n                  <div></div>\r\n        <label class=\"myLabel\" > ТЕРМОВ В ТМ:  </label>\r\n        <input type=\"text\" \r\n                  value= {esModel.TM[tm].termsCount}\r\n                  className=\"form-control\" \r\n                  placeholder=\"...\" / >\r\n<button id = {tm} onClick={AddNewTerm}> ДОБАВИТЬ ТЕРМ</button>\r\n<button  id = {tm} onClick={DeleteTerm}> УДАЛИТЬ ТЕРМ</button>\r\n{pravilaButton}\r\n<div></div>\r\n\r\n    </div>)\r\n    let TMindex = 0\r\n  for(let i=0; i <esModel.TM[tm].coords.length; i++)  \r\n  {\r\n    let j = i + 1\r\n    let stringLabel = \"ТЕРМ №\" + j\r\n    let stringNameTerm = \"termInput\"+tm+\"_\"+j\r\n    points4Plots = []\r\n\r\n   for(let j=0; j <Object.keys(esModel.TM[tm].coords[i]).length/2; j++)  \r\n  {   \r\n      let xName = \"x\"+(j+1)+ \"_input\"\r\n      let yName = \"y\"+(j+1)+ \"_input\"\r\n\r\n    points4Plots.push (\r\n    <div>x{j+1}: <input class = \"plotInput\"  type='number' step=\"0.1\" min='-1000' value = {esModel.TM[tm].coords[i][\"x\"+(j+1)]}  id = {stringNameTerm} name={xName} onInput={changeCoordsValues} />\r\n     y{j+1}: <input class = \"plotInput\"  type='number' step=\"0.1\" min='0' value = {esModel.TM[tm].coords[i][\"y\"+(j+1)]} id = {stringNameTerm} name={yName} onInput={changeCoordsValues} />\r\n   </div>\r\n    )\r\n  \r\n  }\r\n  temp.push(\r\n    <div  class=\"blockMy\">\r\n    <div class=\"blockMy\" >\r\n    <div > {stringLabel} </div><div><input name= {stringNameTerm} value = {esModel.TM[tm].termsNames[\"term\"+(i+1)]} type=\"text\" onInput = {changeTermName}  /> </div>\r\n\r\n    <div  class=\"blockMy\"><button onClick={addNewPointPlot} id= {stringNameTerm}>+</button>\r\n    <button onClick={DeletePointPlot} id= {stringNameTerm}>-</button>\r\n    <input type=\"color\" class =\"odin\" id= {stringNameTerm}  onChange={ChangeColor}  value ={esModel.TM[tm].plotsColors[i]}/></div>\r\n    {points4Plots}  \r\n    </div>    \r\n    </div>  )\r\n    }\r\n\r\ntemp.push( <div class=\"Plot\">\r\n  <div ></div>\r\n  <div >{App(esModel.TM[tm].coords,esModel.TM[tm].termsCount, \r\n  esModel.TM[tm].plotsColors)}</div>\r\n  \r\n   </div>)\r\n  let okolo = [] \r\n  okolo.push(<div class = \"Blochek\">\r\n  {temp}\r\n    </div>)\r\n  setindexBodyHtml2(okolo)\r\ninputLevelCounter++\r\n/* <div class = \"Razrez\" >. </div>*/\r\n}\r\n\r\nfunction GoToPravila(index)\r\n{\r\nesModel.pravilaMode = index\r\n\r\n}\r\n\r\nconst RenderPravila = (events) => {\r\n  GoToPravila(1)\r\n  setEsModel(esModel)\r\n  \r\n   let uroven  \r\n   if(events.target == undefined)\r\n   uroven = events\r\n   else uroven = Number(events.target.id)+1\r\n\r\n\r\n   console.log(uroven)\r\n Pravila(uroven)\r\n  }\r\nfunction sendToServer(file)\r\n{\r\nconst data = new FormData()\r\ndata.append('file', file)\r\naxios.post(\"http://localhost:8000/upload\", data, { \r\n   // receive two    parameter endpoint url ,form data\r\n})\r\n.then(res => { // then print response status\r\n  XmlOnServer()\r\nsetXmlName( \"\"+xmlFiles.name)\r\n})\r\n}\r\n\r\n\r\nfunction testINFO()\r\n{\r\nconst index = esModel.graph.nodes.findIndex((obj) => obj.color === '#FF0000')\r\nconsole.log(index); // 1\r\n\r\n ///esModel.graph.nodes.map((node) => {if (node.color == \"#FF0000\") console.log ()   })\r\n }\r\n\r\n const handleSubmit =(event) => {\r\n\r\nevent.preventDefault();\r\n\r\nconst iconv = require('iconv-lite');\r\nconst fileToArrayBuffer = require('file-to-array-buffer')\r\nconst reader = new FileReader()\r\nvar encodedData = \"\"\r\n\r\nconst parser = new XMLParser()\r\nreader.readAsText(xmlFiles)\r\nreader.onload = _event => {\r\n    const content = _event.target.result\r\n    let jObj = parser.parse(content)\r\n    \r\n    console.log(jObj)\r\n    if(jObj.TM.length == undefined)\r\n  {esModel.TM =[]\r\n   esModel.TM[0] = jObj.TM\r\n  }\r\n  else   esModel.TM = jObj.TM\r\n\r\n  esModel.graph= jObj.graph\r\n  esModel.counter = jObj.counter\r\n  esModel.options = jObj.options\r\n  let tempStructure = {}\r\n  for (let i =0; i < Object.keys(jObj.structure).length; i++)\r\n  {   \r\n  tempStructure[Object.keys(jObj.structure)[i].split('_')[1]] = jObj.structure[Object.keys(jObj.structure)[i]]\r\n  }\r\n  \r\n  esModel.structure = tempStructure\r\n  esModel.pravila_end = []//jObj.pravila_end\r\n  for (let i =0; i < Object.keys(jObj.pravila_temp).length; i++)\r\n  {   \r\n    esModel.pravila_end[i] = jObj.pravila_temp['n'+(i)]\r\n  }\r\n  setEsModel(esModel)  \r\n  RenderOptionsMenu()\r\n    // Do the parsing with content\r\n} \r\n  }\r\n  const handleFileSelect = (event) => {\r\n    setXmlFiles(event.target.files[0])\r\n  }\r\nlet inp_termMn_1 = 8;\r\n/*\r\n<button  onClick={ConsoleXml}> XML</button>\r\n    <button  onClick={SaveModelToXML}> TO XML</button>\r\n    <input type=\"file\" id=\"myFile\" onChange={(e)=>UploadXML(e)} />\r\n*/\r\n  return (    \r\n    <div>\r\n    <button  onClick={SaveToXMLOnComputer} >SAVE MODEL TO COMPUTER</button>\r\n    <button  onClick={esModel.methods.ChangeX} >SORT</button>    \r\n    <button  onClick={RenderOptionsMenu} >OPTIONS</button>\r\n    <button  onClick={RenderModelingMenu} > MODELING</button> \r\n    <input type=\"file\" onChange={handleFileSelect}/>\r\n    <button type=\"button\"  onClick={handleSubmit}> Загрузить  </button> \r\n     \r\n  <div class=\"Blochek\" > <Graph id=\"graph\" getNetwork={(network) => \r\n   {networks.network= network\r\n  setNetwork(networks)\r\n  }}\r\n   graph={esModel.graph} options={options} events={esModel.events} style={{ width: \"800px\", height: \"600px\",position: \"absolute\",right: \"0\",border: \"solid\" }} /></div>\r\n    <div class=\"blockMy\" >   {indexBodyHtml2}\r\n    \r\n     </div >    \r\n     </div>     \r\n      );\r\n}ReactDOM.render(<FlmTree />, document.getElementById(\"root\"));\r\n\r\n\r\n","import React from \"react\";\r\n\r\nconst EditableRow = ({\r\n  editFormData,\r\n  handleEditFormChange,\r\n  handleCancelClick,\r\n}) => {\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"Enter a name...\"\r\n          name=\"fullName\"\r\n          value={editFormData.fullName}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"Enter an address...\"\r\n          name=\"address\"\r\n          value={editFormData.address}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"Enter a phone number...\"\r\n          name=\"phoneNumber\"\r\n          value={editFormData.phoneNumber}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"email\"\r\n          required=\"required\"\r\n          placeholder=\"Enter an email...\"\r\n          name=\"email\"\r\n          value={editFormData.email}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <button type=\"submit\">Save</button>\r\n        <button type=\"button\" onClick={handleCancelClick}>\r\n          Cancel\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default EditableRow;\r\n"],"sourceRoot":""}