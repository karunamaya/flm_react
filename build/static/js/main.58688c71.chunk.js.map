{"version":3,"sources":["Plots.js","Table.js","components/ReadOnlyRow.js","index.js","components/EditableRow.js"],"names":["mi","App","points","valuesPlots","colors","plots","i","dataTemp","j","Object","keys","length","x","y","color","className","size","data","style","strokeLinejoin","strokeWidth","width","height","display","stroke","title","line","ticks","text","fill","ReactDOM","render","document","querySelector","Table","model","levelPravil","changeList","changeCoeff","selectedTM","tempus","gettingLevelPravil","select","cartesian","arg","r","args","reduceRight","cont","factor","arr","l","a","slice","Array","prototype","push","bind","t","unshift","cartesian2","undefined","console","log","my","TM","options","name","urovneyObrabotki","id","termsCount","termsNames","term1","term2","term3","coords","x1","y1","x2","y2","x3","y3","x4","y4","plotsColors","pravila_end","1","shapka","termsInputArray","termsInputArray2","tempArray","selectedArray","otarray","doarray","toNode","massivFrom","graph","edges","to","Number","from","otKokogo","doKokogo","termName","eval","map","el","urPravil","temp","temp2","split","ChangeSelect","event","preventDefault","target","getAttribute","row","position","selectedIndex","ChangeCoeff","val","value","urovPravil","prav","index","array","change","urovenPravil","pravila","ReadOnlyRow","rowNumber","rightSide","models","CustomSelect","poryadok","onChange","defaultValue","option","start","class","onInput","type","step","min","max","require","XMLParser","inputLevelCounter","input_Name","FlmTree","randomColor","red","Math","floor","random","toString","padStart","green","blue","createNode","esModel","counter","setEsModel","nodes","font","label","shape","physics","group","fl","networks","network","locale","interaction","hover","tooltipDelay","selectable","multiselect","dragView","manipulation","enabled","initiallyActive","addNode","editEdge","addEdge","callback","colorChanges","String","methods","UpdatePravila","setData","addEdgeMode","deleteEdge","splice","deleteNode","toUninstall","willUpdate","newNames","RenderSelectedTM","layout","hierarchical","direction","sortMethod","blockShifting","levelSeparation","useState","fullName","address","phoneNumber","email","addFormData","setAddFormData","editFormData","setEditFormData","editContactId","setEditContactId","xmlFiles","setXmlFiles","xmlModeling","setxmlModeling","xmlName","setXmlName","indexBodyHtml","setindexBodyHtml","o2x","window","onbeforeunload","dataS","regimZaprosa","zapros","Name","Author","userRequest","structure","pravilaMode","events","release","getPositions","dragEnd","pos","click","doubleClick","canvas","pointer","AddTMInputLevel","showPopup","changeRegimVivoda","DefZapros","TmNumber","SetZapros","nymberTM","urovenPrav","leftSide","peresobran","rightPeresobran","RenderPravila","ChangeX","zelen","fiolet","obrabotka","krasn","urovniObrabotki","pp","getLevelTMObrabotki","numberKey","key","outCounter","leftArray","cartes","start2","start3","rSide","changeEsName","RenderOptionsMenu","changeEsAuthor","ChangePravila","urovenObrabotki","ChangePlotColor","TermNumber","deletePointplot","deleteNumber","addNewPointPlot","newPointNumber","newCoordsNameX","newCoordsNameY","changeCoordsValue","deleteTerm","newTermName","pop","popup","addNewTerm","changeTermName","newName","ChangeSelectedTMName","indexBodyHtml2","setindexBodyHtml2","setNetwork","states","uroven","zz","obj","includes","changePravila","coeff","urObr","SendXmlModelling","tempXML","pravilaDict1","pravilaDict","tempStructure","file","Blob","FormData","append","JSON","stringify","axios","post","then","res","RenderModelingMenu","SaveToXMLOnComputer","element","createElement","body","appendChild","href","URL","createObjectURL","download","Pravila","okolo","ConsoleXml","xmlStr","sendToServer","File","XmlOnServer","encodedData","decode","Buffer","jObj","parse","match","ChangeColor","DeletePointPlot","changeCoordsValues","AddNewTerm","DeleteTerm","indexB","ChangeZapros","ChangeRegimZaprosa","ChangeZaprosInput","nameTM","number","values","placeholder","onClick","changeSelectedTMName","tm","points4Plots","pravilaButton","nm","stringLabel","stringNameTerm","xName","yName","GoToPravila","handleSubmit","reader","FileReader","parser","readAsText","onload","_event","content","result","pravila_temp","handleFileSelect","files","inp_termMn_1","getNetwork","right","border","getElementById"],"mappings":"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","file":"static/js/main.58688c71.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"react-vis/dist/style.css\";\r\n\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  VerticalGridLines,\r\n  HorizontalGridLines,\r\n  LineMarkSeries,\r\n  DiscreteColorLegend\r\n} from \"react-vis\";\r\n\r\nlet mi=0\r\n//<DiscreteColorLegend  orientation=\"horizontal\" items = {series}    />\r\nlet series= [{\r\n  title: \"Apples\",\r\n  color : \"#000000\",\r\n},\r\n{title: \"Orange\",\r\ndisabled: false,\r\ndata: [{ x: 0, y: 12 }, { x: 1, y: 22 }],\r\ncolor : \"#FF6c0A\",\r\n},\r\n\r\n]\r\n\r\nfunction getRandomColor() {\r\nvar letters = '0123456789ABCDEF';\r\nvar color = '#';\r\nfor (var i = 0; i < 6; i++)\r\n{\r\n  color += letters[Math.floor(Math.random() * 16)];\r\n}\r\nreturn color;\r\n}\r\nexport default function App(points, valuesPlots, colors) {\r\n  if(valuesPlots > 0)\r\n  {\r\n    mi = valuesPlots\r\n  }\r\n  let x1_1,x2_1,x3_1,y1_1,y2_1,y3_1\r\n  let x4_1 = 1\r\n  let y4_1 = 0\r\n  let x1_2,x2_2,x3_2,x4_2,y1_2,y2_2,y3_2,y4_2\r\n  let x1_3,x2_3,x3_3,x4_3,y1_3,y2_3,y3_3,y4_3\r\n  let x1_4,x2_4,x3_4,x4_4,y1_4,y2_4,y3_4,y4_4\r\n\r\n\r\n\r\n  let x1_5,x2_5,x3_5,x4_5,y1_5,y2_5,y3_5,y4_5\r\n  let x1_6,x2_6,x3_6,x4_6,y1_6,y2_6,y3_6,y4_6\r\n  let x1_7,x2_7,x3_7,x4_7,y1_7,y2_7,y3_7,y4_7\r\n  let x1_8,x2_8,x3_8,x4_8,y1_8,y2_8,y3_8,y4_8\r\n  let x1_9,x2_9,x3_9,x4_9,y1_9,y2_9,y3_9,y4_9\r\n  let x1_10,x2_10,x3_10,x4_10,y1_10,y2_10,y3_10,y4_10\r\n  const lines = [{x:5,y:2},{x:6,y:2}]\r\n\r\n\r\n  let color = []\r\n  let items = {title: \"hello\", color : \"#D1D0CE\"}\r\n/*\r\n  //заполнить все переменные для всех графиков значениями координат\r\n  for (let i = 0; i < mi; i++)\r\n  {\r\n    if(typeof points[i] == 'object' )\r\n    {\r\n      let b = points[i]\r\n      eval(\"x1_\"+(i+1) + \"=\" +b[0]) \r\n      eval(\"y1_\"+(i+1) + \"=\" +b[1]) \r\n      eval(\"x2_\"+(i+1) + \"=\" +b[2]) \r\n      eval(\"y2_\"+(i+1) + \"=\" +b[3]) \r\n      eval(\"x3_\"+(i+1) + \"=\" +b[4]) \r\n      eval(\"y3_\"+(i+1) + \"=\" +b[5]) \r\n      eval(\"x4_\"+(i+1) + \"=\" +b[6]) \r\n      eval(\"y4_\"+(i+1) + \"=\" +b[7])  \r\n      color[i] = getRandomColor();\r\n    }\r\n  }\r\n*/\r\n let plots = []\r\nfor (let i = 0; i < mi; i++)\r\n  {\r\n    if(typeof points[i] == 'object' )\r\n    {\r\n      let dataTemp = [{}]\r\n      for(let j = 0; j <Object.keys(points[i]).length/2; j++)\r\n      {dataTemp[j]=({x: points[i][\"x\"+(j+1)],y: points[i][\"y\"+(j+1)] })\r\n\r\n      }\r\n \r\n  plots[i]=[<LineMarkSeries\r\n  color =  {colors[i]}\r\n  className=\"1-series\"\r\n  size='3.5'\r\n  \r\n\r\n\r\n  data={dataTemp}\r\n  style={{\r\n    strokeLinejoin: \"round\",\r\n    strokeWidth: 2\r\n  }}\r\n/>\r\n]\r\n   } }\r\n  return (    \r\n    <XYPlot width={700} height={200} display = \"inline-block\">\r\n      <HorizontalGridLines style={{ stroke: \"#D1D0CE\" }} />\r\n      <VerticalGridLines style={{ stroke: \"#D1D0CE\" }} />\r\n      <XAxis\r\n        title=\"x\"\r\n        style={{\r\n          line: { stroke: \"#111111\" },\r\n          ticks: { stroke: \"#6b6b76\" },\r\n          text: { stroke: \"none\", fill: \"#6b6b76\" }\r\n        }}\r\n      />\r\n       <YAxis\r\n        title=\"Коэфф. уверенности\"\r\n        style={{\r\n          line: { stroke: \"#6b6b76\" },\r\n          ticks: { stroke: \"#6b6b76\" },\r\n          text: { stroke: \"none\", fill: \"#6b6b76\"}\r\n        }}\r\n      />\r\n      \r\n  {plots}\r\n\r\n      \r\n\r\n  \r\n    </XYPlot>\r\n  );\r\n  \r\n}\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));","import React, { useState, Fragment } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport \"./Table.css\";\r\nimport data from \"./mock-data.json\";\r\nimport ReadOnlyRow from \"./components/ReadOnlyRow\";\r\nimport EditableRow from \"./components/EditableRow\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { mkdirSync } from \"fs\";\r\n\r\n\r\nexport  default function Table(model, levelPravil, changeList, changeCoeff,selectedTM) {\r\n\r\n  let tempus=[[]]\r\n  let gettingLevelPravil = levelPravil\r\n \r\n  let select = selectedTM\r\n  if (select == undefined)\r\n  select = 1\r\n \r\n\r\n  console.log(select)\r\n  if(typeof(gettingLevelPravil) != \"string\")\r\n  {\r\n    gettingLevelPravil =1 \r\n  \r\n  }\r\n  function cartesian(arg) {\r\n    var r = [], args = arg;\r\n    args.reduceRight(function(cont, factor, i) {\r\n        return function(arr) {\r\n            for (var j=0, l=factor.length; j<l; j++) {\r\n                var a = arr.slice(); // clone arr\r\n                a[i] = factor[j];\r\n                cont(a);\r\n            }\r\n        };\r\n    }, Array.prototype.push.bind(r))(new Array(args.length));\r\nlet t = r.length\r\n\r\n\r\n   for(let i = 0; i < t; i++)\r\n    {\r\n      r[i].unshift(i+1)\r\n    }\r\n   \r\n    return r;\r\n}\r\nfunction cartesian2(arg) {\r\n  var r = [], args = arg;\r\n  args.reduceRight(function(cont, factor, i) {\r\n      return function(arr) {\r\n          for (var j=0, l=factor.length; j<l; j++) {\r\n              var a = arr.slice(); // clone arr\r\n              a[i] = factor[j];\r\n              cont(a);\r\n          }\r\n      };\r\n  }, Array.prototype.push.bind(r))(new Array(args.length));\r\nlet t = r.length\r\n\r\n\r\n \r\n  return r;\r\n}\r\n\r\n//посмотреть терм-множ. у входного \r\n//посмотреть терм-множ. у обработки-1\r\n//это будет названия столбцов \r\n//console.log(model.termMnogestvaInputLevel[0])\r\n\r\n\r\n\r\nlet my = model\r\n\r\n\r\n//if(model == null)\r\nif(my.TM == undefined)\r\nmy = {  \r\n  options: {\r\n    name: \"Экспертная система 1\",\r\n    urovneyObrabotki: 3,\r\n\r\n  },\r\n  TM: \r\n  [\r\n    //объект первого терм множества входа\r\n    {\r\n        id: '1',\r\n        name: 'Тип постройки',\r\n        termsCount:3,\r\n        termsNames: {term1: 'Общ. здание', term2: 'Жилое здание', term3:'С/Х',},\r\n        coords:[{x1:0, y1:0, x2:1, y2:1, x3:1, y3:5},\r\n                {x1:2, y1:0, x2:3, y2:1, x3:3, y3:5 },\r\n                {x1:4, y1:0, x2:5, y2:2, x3:6, y3:2, x4:7, y4:0 } ,       \r\n              ],    \r\n              plotsColors:['#000000','#000000','#FF00D0',] ,     \r\n\r\n    },\r\n    {\r\n      id: '2',\r\n      name: 'Материал',\r\n      termsCount:3,\r\n      termsNames: {term1: 'Дерево', term2: 'Бетон', term3:'Кирпич',},\r\n      coords:[{x1:0, y1:0, x2:1, y2:1, x3:2, y3:0},\r\n              {x1:2, y1:0, x2:3, y2:1, x3:4, y3:0 },\r\n              {x1:4, y1:0, x2:5, y2:1, x3:6, y3:0, } ,        \r\n            ],    \r\n            plotsColors:['#00FF00','#E30202','#FF00D0',] ,     \r\n\r\n    },\r\n    {\r\n      id: '3',\r\n      name: 'Климат',\r\n      termsCount:3,\r\n      termsNames: {term1: 'Холодный', term2: 'Прохладный', term3:'Теплый',},\r\n      coords:[{x1:0, y1:0, x2:1, y2:1, x3:2, y3:0},\r\n              {x1:2, y1:0, x2:3, y2:1, x3:4, y3:0 },\r\n              {x1:4, y1:0, x2:5, y2:1, x3:6, y3:0, } ,        \r\n            ],    \r\n            plotsColors:['#00FF00','#E30202','#FF00D0',] ,     \r\n\r\n    },\r\n  ]  ,\r\n  pravila_end: \r\n  {1:['1_1...1_1',\r\n  '1_2...2_0.8',\r\n  '1_3...1_0.9',\r\n\r\n  '2_1...2_0.7',\r\n  '2_2...1_0.9',\r\n  '2_3...2_1',\r\n\r\n  '3_1...1_0.9',\r\n  '3_2...1_0.8',\r\n  '3_3...2_0.9',\r\n  \r\n\r\n\r\n  ], }}\r\n \r\n  const shapka= [];\r\n  let termsInputArray=[[]]\r\n  let termsInputArray2=[[]]\r\n  let tempArray=[]\r\n  let selectedArray=[]\r\n  let otarray=[]\r\n  let doarray=[]\r\n  otarray.push(my.TM[0])\r\n  otarray.push(my.TM[1])\r\n  doarray.push(my.TM[2])\r\n\r\nif(model.TM!=undefined)\r\n{\r\n  otarray = []\r\n  doarray=[]\r\n  console.log(selectedTM)\r\n  let toNode = selectedTM\r\n\r\n  \r\n  let massivFrom =[]\r\n  //создаем массив otKokogo\r\n  for(let i = 0; i < my.graph.edges.length; i ++)\r\n        {\r\n          if(my.graph.edges[i].to == Number(toNode))\r\n          {\r\n            massivFrom.push(my.graph.edges[i].from )\r\n          }\r\n        }\r\n  \r\n        for(let i = 0; i <massivFrom.length; i ++)\r\n        {for(let j = 0; j <my.TM.length; j ++)\r\n          {\r\n            if(my.TM[j].id == Number(massivFrom[i]-1))\r\n          {\r\n            otarray.push(my.TM[j])\r\n          }\r\n  \r\n          }\r\n  \r\n        }      \r\n        \r\n\r\n        for(let i = 0; i < my.TM.length; i ++)\r\n        {\r\n          if(my.TM[i].id == Number(toNode-1))\r\n          { \r\n            doarray.push(my.TM[i])\r\n          }\r\n        }\r\n        console.log(doarray)\r\n}\r\n  \r\n\r\n\r\n  //делаем массив всех термов из терммножества входа\r\n  \r\n  \r\n \r\n  let otKokogo = otarray//eval(\"my.TM\")// dfdf\r\n  let doKokogo = doarray//eval(\"my.termMnogestvaOutputLevel\") \r\n  console.log(otKokogo)\r\n  shapka.push(<th>№</th>)\r\n  for(let i = 0; i < otKokogo.length; i++)\r\n  {\r\n   let  name = otKokogo[i].name\r\nshapka.push(<th>{otKokogo[i].name}</th>)\r\n\r\n  }\r\n\r\n  for(let i = 0; i < doKokogo.length; i++)\r\n  {\r\n   let  name = doKokogo[i].name\r\nshapka.push(<th>{doKokogo[i].name}</th>)\r\n\r\n  }\r\n\r\n \r\n  for(let i = 0; i < otKokogo.length; i++)\r\n{    \r\n \r\n  for(let j = 0; j < otKokogo[i].termsCount; j++)\r\n  {     \r\n    console.log(otKokogo[0].termsNames['term1'])   \r\n        console.log(i )//+ \"   \" + eval(\"otKokogo[i].termsNames['term\"+(j+1)+\"']\") )\r\n        console.log(j+1 )\r\n    let termName = eval(\"otKokogo[\" +i+\"].termsNames['term\"+(j+1)+\"']\")     \r\n    tempArray[j] = termName       \r\n  } \r\n    termsInputArray2[i]=(tempArray)    \r\n    tempArray = []  \r\n}\r\n\r\ntermsInputArray2 =cartesian2(termsInputArray2)\r\n\r\ntermsInputArray2.map((el)=> (el.push(\"...\")))\r\n\r\n  for(let i = 0; i < doKokogo.length; i++)\r\n  {    termsInputArray2.map((el)=> (\r\n\r\n    el.push(1)\r\n    \r\n    ))\r\n\r\n    for(let j = 0; j <doKokogo[i].termsCount; j++)\r\n    {     \r\n      let termName = eval(\"doKokogo[\"+i+\"].termsNames['term\"+(j+1)+\"']\")     \r\n      tempArray[j] = {id: (j+1), name :termName}     \r\n\r\n    } \r\n    selectedArray[i]=(tempArray)    \r\n      tempArray = []  \r\n  }\r\n \r\n\r\nfor(let i = 0; i < doKokogo.length; i++)\r\n{    let tempArray=[]\r\n  for(let j = 0; j < doKokogo[i].termsCount; j++)\r\n  {     \r\n    let termName = eval(\"doKokogo[\"+i+\"].termsNames['term\"+(j+1)+\"']\")     \r\n    tempArray[j] = {id: (j+1), name :termName}     \r\n\r\n  } \r\n  selectedArray[i]=(tempArray)    \r\n    tempArray = []  \r\n}\r\nconsole.log(selectedTM)\r\nlet urPravil = eval(\"my.pravila_end[\" +selectedTM+\"]\") \r\nif(urPravil!= undefined)\r\n  {\r\n    \r\n    \r\n    for(let i =0; i<urPravil.length;i++)\r\n    {\r\n      let temp \r\n      let temp2 =[]\r\n      for(let j=0; j< urPravil[i].split(\"...\")[0].split(\"_\").length+1; j++)    \r\n    {\r\n      let termName\r\n        if(j==0)\r\ntermName = i+1\r\n        else{ temp= urPravil[i].split(\"...\")[0].split(\"_\")[j-1]\r\n         termName = eval(\"otKokogo[\"+(j-1)+\"].termsNames['term\"+(temp)+\"']\") \r\n       \r\n  }\r\n  temp2[j] = termName\r\n\r\n    }\r\n\r\n  tempus[i] = temp2\r\n  \r\n    \r\n\r\n   \r\n  \r\n  \r\n\r\n  }}\r\n\r\n\r\n\r\n  const ChangeSelect = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n   let location = event.target.id.split(\"__\")[0].split(\"_\")[0]\r\n let row = event.target.id.split(\"__\")[0].split(\"_\")[1]\r\n let position = event.target.id.split(\"__\")[1]\r\n position = position.split(\"/\")[0]\r\nchangeList(row, position,event.target.options[event.target.selectedIndex].id, select)\r\n\r\nfor(let i = 0; i<termsInputArray2[row-1].length; i++ )\r\n{\r\n\r\nif(termsInputArray2[position-1][i] == \"...\")\r\n{\r\n  termsInputArray2[position-1][Number(Number(i)+Number(position))] = Number(event.target.options[event.target.selectedIndex].id)\r\n  break\r\n\r\n}}};\r\n\r\nconst ChangeCoeff= (event) => {\r\n  event.preventDefault();\r\n\r\nlet val = event.target.value\r\n\r\n // const fieldName = event.target.getAttribute(\"name\");\r\n let location = event.target.id.split(\"__\")[0].split(\"_\")[0]\r\nlet row = event.target.id.split(\"__\")[0].split(\"_\")[1]\r\nlet position = event.target.id.split(\"__\")[1]\r\nlet urovPravil =  select//event.target.id.split(\"__\")[0].split(\"_\")[0]\r\nposition = position.split(\"/\")[0]\r\nchangeCoeff(row, position,val,urovPravil)\r\nconsole.log(\"row=\"+row)\r\nconsole.log(\"position=\"+position)\r\nconsole.log(\"urovPravil=\"+urovPravil)\r\n\r\n\r\n/*\r\nfor(let i = 0; i<termsInputArray2[location-1].length; i++ )\r\n{\r\n\r\nif(termsInputArray2[location-1][i] == \"...\")\r\n{\r\ntermsInputArray2[location-1][Number(Number(i)+Number(position))] = Number(event.target.options[event.target.selectedIndex].id)\r\nbreak\r\n\r\n}}*/\r\n};\r\nlet prav\r\n\r\nprav = eval(\"my.pravila_end\")\r\nconsole.log(prav)\r\n\r\n\r\n  //console.log(termsInputArray)\r\n\r\n //console.log(cartesian(i1)) \r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <form >\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n                {shapka}\r\n              \r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {/*contacts.map((contact) => (\r\n              <Fragment>\r\n                { <ReadOnlyRow\r\n                    contact={contact}\r\n                    handleEditClick={handleEditClick}\r\n                    handleDeleteClick={handleDeleteClick}\r\n                  />}\r\n              </Fragment>\r\n            ))*/}\r\n            {\r\n                      tempus.map((stroke,index) => (\r\n                        <Fragment>\r\n                          { <ReadOnlyRow\r\n                              stroke={stroke}\r\n                               array= {selectedArray}\r\n                               change = {ChangeSelect}\r\n                               urovenPravil = {levelPravil}\r\n                               index = {index+1}\r\n                               pravila = {prav[Number(select)][index]}   \r\n                               changeCoeff = {ChangeCoeff}                            \r\n                            />}\r\n                        </Fragment>\r\n                        \r\n                      ))\r\n\r\n\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n\r\n   \r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nReactDOM.render(<Table />, document.querySelector(\"#root\"));\r\n","import React from \"react\";\n\nconst ReadOnlyRow = ({ stroke,  array,change, urovenPravil, index, pravila, changeCoeff }) => {\n \n  let rowNumber = index\nlet rightSide = pravila.split(\"...\")[1].split(\"-\")\n\nif(rightSide == null)\nrightSide= \"1_1-1_1\"\n\n/* \n  <td>{stroke[0]}</td>\n      <td>{stroke[1]}</td>\n      <td>{stroke[2]}</td>\n      <td>{stroke[3]}</td>\n      <td>1\n       {/* <button\n          type=\"button\"\n          onClick={(event) => handleEditClick(event, contact)}\n        >\n          Edit\n        </button>\n        <button type=\"button\" onClick={() => handleDeleteClick(contact.id)}>\n          Delete\n        </button>\n        </td>\n        <td>1</td>\n*/\n\nlet models= [\n  {\n      id: 1,\n      name: '',\n  },\n\n]\nif(typeof(stroke[1]) == \"string\" &&array.length >0)\nfor(let i =0;i < array[0].length; i++)\n{\nmodels[i] = {id:(i+1),\nname:array[0][i]\n}\n\n}\n\n    // при выборе нового значения в категории\n    const onCategoriesSelectChange = (e) => {\n\n      // преобразуем выбранное значение опции списка в число - идентификатор категории\n      const categoryId = parseInt(e.target.options[e.target.selectedIndex].value);\n  \n      console.log(e.target.options[e.target.selectedIndex].label)\n  }\n\n\n\n\n// компонент пользовательского выпадающего списка\nconst CustomSelect = ({ id, options, onChange, poryadok }) => {\n  let b\n  return (\n      <select className=\"custom-select\" id={id} onChange={change} defaultValue={options[rightSide[poryadok].split(\"_\")[0]-1].name}>\n          { options.map((option, index) =>\n             <option key={id + index} id={option.id} value = {option.name}>{option.name}</option>\n          ) }\n\n      </select>\n  )\n}\n  let arr = []\n  let start = true\n  for (let i = 0; i < stroke.length; i ++)\n  {\nif(start && typeof(stroke[i])=='string')\n{arr[0] =<td>{stroke[i]}</td>\n\n\n}\n\n   else {\n    arr.push(<td>{stroke[i]}</td>)\n   }\n   \n   \nstart = false\n\n  }\n  if(typeof(stroke[1]) == \"string\" &&array.length >0)\n  for(let i =0; i <array.length; i++)\n  {\n    let temp = urovenPravil+\"_\"+rowNumber+\"_\"+\"_\"+(i+1)+\"/\" +array.length\n    arr.push(<td><CustomSelect id={temp} options={array[i]}  poryadok ={i}/>\n    <input  class = \"plotInput\" onInput={changeCoeff}  type='number' step=\"0.1\" min='0' max='1'  id = {temp} name=\"d\"  value={rightSide[i].split(\"_\")[1]} />\n    </td>)\n  }\n\n  return (\n    <tr>\n      {arr}\n    \n    </tr>\n  );\n};\n//  } \nexport default ReadOnlyRow;\n","import Graph from \"react-graph-vis\";\nimport React, {  useState,useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './index.css';\nimport App from './Plots.js';\nimport Table from './Table.js';\nimport \"react-vis/dist/style.css\";\nimport axios from \"axios\";\nconst { XMLParser} = require(\"fast-xml-parser\");\n\nlet inputLevelCounter = 0;\nlet input_Name;\n\n\n function FlmTree() {\n\n  function randomColor() {\n    const red = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\n    const green = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\n    const blue = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\n    return `#${red}${green}${blue}`;\n  }\n  const createNode = (x, y) => {\n    const color = randomColor();\n\n    esModel.counter++\n    setEsModel(esModel)\n    esModel.graph.nodes.push({ x: x, y: y,color: \"#F5DEB3\", id: esModel.counter, font: { size: 10 }, size: 30, label: \"\", title: \"\", shape: 'dot', physics: 'false', group:3 }       \n    )\n  };\n  function fl(){\n\n    console.log( networks.network);\n\n  }\n  const options =  {\n    locale: 'ru',\n      interaction: {\n        hover: true,\n        tooltipDelay: 10,\n        selectable: true,\n        multiselect: true,\n        dragView: true,  \n      },\n      manipulation: {\n        enabled: true,\n         initiallyActive: true,\n          addNode: false,\n          editEdge: false,\n          addEdge: function (data, callback) {\n            esModel.graph.edges.push(data)\n            callback(data);           \n        let colorChanges = {}\n        for(let i = 0; i < esModel.graph.nodes.length; i++)\n{\n  colorChanges[esModel.graph.nodes[i].id] = [0,0]\n}\nfor(let i = 0; i < esModel.graph.edges.length; i++)\n{colorChanges[esModel.graph.edges[i].to][1]=1\n  colorChanges[esModel.graph.edges[i].from][0]=1\n  \n\n}\n\nesModel.pravila_end = []\nsetEsModel(esModel)\nfor(let i = 0; i <esModel.graph.nodes.length; i++)\n{\n  \n  if(colorChanges[esModel.graph.nodes[i].id][0]== 1&&colorChanges[esModel.graph.nodes[i].id][1]== 0 )\n  {\n    esModel.graph.nodes[i].color = \"#008000\" \n\n  }\n  if(colorChanges[esModel.graph.nodes[i].id][0]== 1&&colorChanges[esModel.graph.nodes[i].id][1]== 1 )\n  {\n    esModel.graph.nodes[i].color = \"#DA70D6\" \n  }\n  if(colorChanges[esModel.graph.nodes[i].id][0]== 0&&colorChanges[esModel.graph.nodes[i].id][1]== 1 )\n  {\n    esModel.graph.nodes[i].color = \"#FF0000\"\n  }\n\n}\nfor(let i = 0; i <esModel.graph.nodes.length; i++)\n{ console.log(esModel.graph.nodes[i].color)\nif(String(esModel.graph.nodes[i].color) == \"#FF0000\" || String(esModel.graph.nodes[i].color) == \"#DA70D6\"  )\n  {   \n    esModel.methods.UpdatePravila(esModel.graph.nodes[i].id)\n}\n}\nsetEsModel(esModel)\nsetEsModel(esModel)\nnetworks.network.setData({nodes:esModel.graph.nodes, edges:esModel.graph.edges})\n            networks.network.addEdgeMode();            \n        },\n        deleteEdge: function (data, callback) {\n\n          callback(data);\n          \n          for(let i = 0; i < esModel.graph.edges.length; i++)\n          {\n            if (esModel.graph.edges[i].id == data.edges[0]) {\n              esModel.graph.edges.splice(i,1)\n              break\n            }          \n          }\n          \n          let colorChanges = {}\n\n          for(let i = 0; i < esModel.graph.nodes.length; i++)\n  {\n    colorChanges[esModel.graph.nodes[i].id] = [0,0]\n  }\n  for(let i = 0; i < esModel.graph.edges.length; i++)\n  {colorChanges[esModel.graph.edges[i].to][1]=1\n    colorChanges[esModel.graph.edges[i].from][0]=1  \n  }\n \n  esModel.pravila_end = []\n  setEsModel(esModel)\n  for(let i = 0; i <esModel.graph.nodes.length; i++)\n  {    \n    if(colorChanges[esModel.graph.nodes[i].id][0]== 1&&colorChanges[esModel.graph.nodes[i].id][1]== 0 )\n    {\n      esModel.graph.nodes[i].color = \"#008000\" \n    }\n    if(colorChanges[esModel.graph.nodes[i].id][0]== 1&&colorChanges[esModel.graph.nodes[i].id][1]== 1 )\n    {\n      esModel.graph.nodes[i].color = \"#DA70D6\" \n    }\n    if(colorChanges[esModel.graph.nodes[i].id][0]== 0&&colorChanges[esModel.graph.nodes[i].id][1]== 1 )\n    {\n      esModel.graph.nodes[i].color = \"#FF0000\"\n    }\n    if(colorChanges[esModel.graph.nodes[i].id][0]== 0&&colorChanges[esModel.graph.nodes[i].id][1]== 0 )\n    {\n      esModel.graph.nodes[i].color = \"#F5DEB3\"\n    }\n  \n  }\n  for(let i = 0; i <esModel.graph.nodes.length; i++)\n  {\n  if(String(esModel.graph.nodes[i].color) == \"#FF0000\" || String(esModel.graph.nodes[i].color) == \"#DA70D6\"  )\n    {\n\n      esModel.methods.UpdatePravila(esModel.graph.nodes[i].id)\n  }\n}\n  setEsModel(esModel)\n      networks.network.setData({nodes:esModel.graph.nodes, edges:esModel.graph.edges})          \n      },\n        deleteNode: function (data, callback) {          \n          callback(data);\n          let toUninstall = []\n          \n          let willUpdate = false\n         for(let i = 0; i < esModel.graph.edges.length; i++)\n         {if( esModel.graph.edges[i].from == data.nodes[0]  ||esModel.graph.edges[i].to == data.nodes[0]  )\n            { \n              toUninstall.push(i)              \n            }   \n         }         \n         for(let i = 0; i <esModel.graph.nodes.length; i++)\n         {\n          if( esModel.graph.nodes[i].id == data.nodes[0] && esModel.graph.nodes[i].color == \"#F5DEB3\")\n          {\n            willUpdate = true          \n          }\n\n          if(esModel.graph.nodes[i].id == data.nodes[0] && (esModel.graph.nodes[i].color == \"#008000\" || esModel.graph.nodes[i].color == \"#DA70D6\"|| esModel.graph.nodes[i].color == \"#FF0000\"))\n          {\n            esModel.pravila_end = []\n          }\n         }\n       \n         for(let i = 0; i < toUninstall.length; i++)\n         {\n          esModel.graph.edges.splice(toUninstall[toUninstall.length-1-i], 1);\n         }\n         console.log(esModel.graph.edges)\n        // esModel.graph.edges.splice(i, 1);\n          for(let i = 0; i <esModel.graph.nodes.length; i++ )\n          {\n            if(esModel.graph.nodes[i].id == data.nodes[0])\n            {\n              esModel.graph.nodes.splice(i, 1);              \n            }\n          }\n          for(let i = 0; i <esModel.TM.length; i++ )\n          {\n            if(esModel.TM[i].id == (data.nodes[0]-1))\n            { \n              esModel.TM.splice(i, 1);            \n            }\n          }\n          esModel.counter--\n          \n            let newNames = [{}]\n          for(let i = 0; i <esModel.graph.nodes.length; i++ )\n          {\n            newNames[esModel.graph.nodes[i].id] = i+1\n              esModel.graph.nodes[i].id = i+1;           \n          }\n          for(let i = 0; i <esModel.TM.length; i++ )\n          {           \n              esModel.TM[i].id = i            \n          }\n      \n          setEsModel(esModel)\n          for(let i = 0; i <esModel.graph.edges.length; i++ )\n          {\n            esModel.graph.edges[i].from= newNames[esModel.graph.edges[i].from]          \n            esModel.graph.edges[i].to= newNames[esModel.graph.edges[i].to]\n          }\n          let colorChanges = {}\n\n          for(let i = 0; i < esModel.graph.nodes.length; i++)\n  {\n    colorChanges[esModel.graph.nodes[i].id] = [0,0]\n  }\n for(let i = 0; i < esModel.graph.edges.length; i++)\n  {colorChanges[esModel.graph.edges[i].to][1]=1\n    colorChanges[esModel.graph.edges[i].from][0]=1  \n  }\n  \n  setEsModel(esModel)\n  for(let i = 0; i <esModel.graph.nodes.length; i++)\n  {\n    \n    if(colorChanges[esModel.graph.nodes[i].id][0]== 1&&colorChanges[esModel.graph.nodes[i].id][1]== 0 )\n    {\n      esModel.graph.nodes[i].color = \"#008000\"   \n    }\n    if(colorChanges[esModel.graph.nodes[i].id][0]== 1&&colorChanges[esModel.graph.nodes[i].id][1]== 1 )\n    {\n      esModel.graph.nodes[i].color = \"#DA70D6\"  \n    }\n    if(colorChanges[esModel.graph.nodes[i].id][0]== 0&&colorChanges[esModel.graph.nodes[i].id][1]== 1 )\n    {\n      esModel.graph.nodes[i].color = \"#FF0000\"  \n    }\n    if(colorChanges[esModel.graph.nodes[i].id][0]== 0&&colorChanges[esModel.graph.nodes[i].id][1]== 0 )\n    {\n      esModel.graph.nodes[i].color = \"#F5DEB3\" \n    }\n  \n  }\n  for(let i = 0; i <esModel.graph.nodes.length; i++)\n  {\nif((String(esModel.graph.nodes[i].color) == \"#FF0000\" || String(esModel.graph.nodes[i].color) == \"#DA70D6\" ) && !willUpdate )\n    {      esModel.methods.UpdatePravila(esModel.graph.nodes[i].id) }\n}\n  setEsModel(esModel)\n     networks.network.setData({nodes:esModel.graph.nodes, edges:esModel.graph.edges})\n  RenderSelectedTM(0)\n        }\n     },\n      layout: {\n        hierarchical: {\n          enabled: false,\n          direction: 'LR',\n          sortMethod:'directed',\n          blockShifting: false,\n          levelSeparation: 180\n        }\n      },   \n      edges: {\n        color: \"#000000\"\n      },\n    };\n\n  //const [contacts, setContacts] = useState(data);\n  const [addFormData, setAddFormData] = useState({\n    fullName: \"\",\n    address: \"\",\n    phoneNumber: \"\",\n    email: \"\",\n  });\n\n  const [editFormData, setEditFormData] = useState({\n    fullName: \"\",\n    address: \"\",\n    phoneNumber: \"\",\n    email: \"\",\n  });\n  const [editContactId, setEditContactId] = useState(null);\n  const [xmlFiles, setXmlFiles] = useState([]);\n  const [xmlModeling, setxmlModeling] = useState([]);\n  const [xmlName, setXmlName] = useState([]);\n  const [indexBodyHtml, setindexBodyHtml] = useState([]);\n  \n  var o2x = require('object-to-xml');\n  window.onbeforeunload = function() {\n    return \"A XHR request is pending, are you sure you want to leave ?\";\n}\n  const [dataS, setData] = useState()\n  /*\n  useEffect(() => {\n    fetch('/api')\n    .then(response => response.json()\n    .then(response => setData(response.message)))\n  } )*/\n  const [esModel, setEsModel] = useState({\n    regimZaprosa:1,\n    zapros :{},\n    options: {\n      Name:'',\n      Author:'',\n      userRequest:[]\n    },\n    structure:{},\n    pravilaMode:0,\n    TM:\n    [\n    ],\n    pravila_end: \n    {1:['1_1...1_1',\n    '1_2...2_0.8',\n    '1_3...1_0.9',  \n    '2_1...2_0.7',\n    '2_2...1_0.9',\n    '2_3...2_1',  \n    '3_1...1_0.9',\n    '3_2...1_0.8',\n    '3_3...2_0.9',  \n    ],},\n    counter:0,\n    graph: {\n      nodes: [       \n         ],\n      edges: [       \n      ],   \n    },\n    events: {      \n     release: ({ nodes, edges }) => {\n        let pos = networks.network.getPositions()\n        },\n      dragEnd: ({ nodes, edges }) => {\n        let pos = networks.network.getPositions()\n         for (let i = 0; i<esModel.graph.nodes.length; i++ )\n         {\n           esModel.graph.nodes[i].x = pos[esModel.graph.nodes[i].id].x\n           esModel.graph.nodes[i].y = pos[esModel.graph.nodes[i].id].y \n         }\n         setEsModel(esModel)\n         networks.network.setData({nodes:esModel.graph.nodes, edges:esModel.graph.edges})       \n        },\n      click: ({ nodes, edges }) => {    \n      if(nodes[0] != null)\n      {\n        RenderSelectedTM(nodes[0]-1)        \n      }     \n      },\n    \n      doubleClick: ({ pointer: { canvas } }) => {\n      let pos = networks.network.getPositions()      \n        for (let i = 0; i<esModel.graph.nodes.length; i++ )\n        {\n          esModel.graph.nodes[i].x = pos[esModel.graph.nodes[i].id].x\n          esModel.graph.nodes[i].y = pos[esModel.graph.nodes[i].id].y\n        }\n        esModel.methods.AddTMInputLevel(esModel.graph.nodes.length)\n        createNode(canvas.x, canvas.y);\n        setEsModel(esModel)\n        networks.network.setData({nodes:esModel.graph.nodes, edges:esModel.graph.edges})   \n        RenderSelectedTM(esModel.graph.nodes.length-1)\n      },\n      showPopup: ({ nodes, edges }) => {       \n      },\n    },\n    methods:\n    \n    { \n      changeRegimVivoda: (value) => {\n        esModel.regimZaprosa = value\n        setEsModel(esModel)\n        console.log(value)\n        \n      },\n      \n      DefZapros:(TmNumber) =>\n      {\n        esModel.zapros[String(TmNumber)] = \"1\"\n        setEsModel(esModel)\n      },\n      SetZapros:(TmNumber, value) =>\n      {        \n        esModel.zapros[String(TmNumber)] = value\n        setEsModel(esModel)\n        console.log(esModel.zapros)\n        //RenderModelingMenu()\n\n      },\n      ChangeCoeff:(row, pos, value, nymberTM) =>\n      {\n      let urovenPrav\n      urovenPrav = eval(\"esModel.pravila_end[\"+(Number(nymberTM))+\"]\")\n      let leftSide = urovenPrav[row-1].split(\"...\")[0]\n      let rightSide = urovenPrav[row-1].split(\"...\")[1].split(\"-\")\n      rightSide[pos-1]=\"\"+rightSide[pos-1].split(\"_\")[0] +'_'+value\n      let peresobran = \"\"+leftSide+\"...\"\n      let rightPeresobran=\"\"\n      for(let i = 0; i < rightSide.length; i++)\n      {        \n        rightPeresobran= rightPeresobran+rightSide[i]\n        if((i+1) < rightSide.length)\n        {\n          rightPeresobran = \"\"+rightPeresobran+\"-\"\n        } \n      }\n      peresobran = \"\"+peresobran+\"\"+rightPeresobran \n      urovenPrav[row-1] = peresobran\n      setEsModel(esModel)\n      RenderPravila((Number(nymberTM)))\n      },\n      ChangeX:(events) =>{\n        let zelen =[]\n        let fiolet = []\n        let obr1 = []\n        let obrabotka = {}\n        let krasn = []\n        for(let i = 0; i < esModel.graph.nodes.length; i ++)\n        {        \n          if(esModel.graph.nodes[i].color == \"#008000\")\n          {\n            esModel.graph.nodes[i].y =  0\n            zelen[zelen.length] = i+1\n            esModel.graph.nodes[i].x =  -300+zelen.length*150\n          }\n           if(esModel.graph.nodes[i].color == \"#DA70D6\")\n           {\n             esModel.graph.nodes[i].y =  -250\n             fiolet[fiolet.length] = i+1\n           }\n          if(esModel.graph.nodes[i].color == \"#FF0000\")\n          {\n            esModel.graph.nodes[i].y =  -500\n            krasn[krasn.length] = i+1\n          }\n        }\n        obrabotka['input'] = zelen\n        obrabotka['output'] = krasn\n        let spisok = {}\n        urovniObrabotki = {}\n        for(let i =0; i<fiolet.length; i++)\n        {\n          pp =[]\n          getLevelTMObrabotki(fiolet[i], zelen)\n        }\n        console.log(urovniObrabotki)\n        let numberKey=50\n        for(var key in urovniObrabotki)\n        {\n          urovniObrabotki[numberKey] =urovniObrabotki[key]\n          numberKey++\n          delete urovniObrabotki[key]\n        }\n        numberKey=1\n        for(var key in urovniObrabotki)\n        {\n          urovniObrabotki[numberKey] =urovniObrabotki[key]\n          numberKey++\n          delete urovniObrabotki[key]\n        }\n       \n        for(var key in urovniObrabotki)\n        {          \n          for(let i =0; i < urovniObrabotki[key].length; i++)\n          {          \n            for(let y=0; y< esModel.graph.nodes.length; y++)\n            {\n              if( esModel.graph.nodes[y].id ==urovniObrabotki[key][i] )              \n              {\n                esModel.graph.nodes[y].y = (-100 * Number(key))\n                esModel.graph.nodes[y].x =-225+(150* (i+1))                             \n              }  \n            }\n          }\n        }\n        let outCounter =0\n        for(let i = 0; i < esModel.graph.nodes.length; i ++)\n        {\n           if(esModel.graph.nodes[i].color == \"#FF0000\")\n          {            \n            esModel.graph.nodes[i].y =  Object.keys(urovniObrabotki).length* (-100) -100\n            esModel.graph.nodes[i].x = -150+ (150* (outCounter+1))\n            outCounter++\n          }  \n        }\n        outCounter =0\n        urovniObrabotki['input'] = zelen\n        urovniObrabotki['output'] = krasn\n        console.log( urovniObrabotki)\n        esModel.structure = urovniObrabotki\n\n        setEsModel(esModel)\n        networks.network.setData({nodes:esModel.graph.nodes, edges:esModel.graph.edges})       \n        RenderSelectedTM(0)\n      },\n      UpdatePravila:(events) => \n      {\n      let toNode\n      if(events.target != undefined)\n       toNode = Number(events.target.id)+1\n       else  toNode=events   \n       esModel.pravilaMode =1\n\nlet otKokogo = []\nlet massivFrom =[]\nfor(let i = 0; i < esModel.graph.edges.length; i ++)\n      {\n        if(esModel.graph.edges[esModel.graph.edges.length-i-1].to == Number(toNode))\n        {\n          massivFrom.push(esModel.graph.edges[esModel.graph.edges.length-i-1].from )\n        }\n      }\n      for(let i = 0; i <massivFrom.length; i ++)\n      {for(let j = 0; j <esModel.TM.length; j ++)\n        {\n          if(esModel.TM[esModel.TM.length-j-1].id == Number(massivFrom[i]-1))\n        {\n          otKokogo.push(esModel.TM[esModel.TM.length-j-1])\n        }}\n      }\nif(otKokogo<=0)\nreturn;\n\nlet leftArray = []\n       for(let i = 0; i < otKokogo.length; i ++)\n      { \n        leftArray.push([])\n        for(let j = 0; j <otKokogo[otKokogo.length-1-i].termsCount; j++ )\n        {\n          leftArray[i][j] = (String(j+1))\n        }\n      }\n\n      let arr = []\n      let cartes = cartesian(leftArray)\n      let start2 = false\n      for(let i =0; i <cartes.length; i++ )\n      {\n        if(!start2)arr.push([])\n        arr[i] =\"\"\n        for(let j =0; j< cartes[i].length; j++)\n        { \n          arr[i] +=cartes[i][j]\n          if(j+1 <cartes[i].length )\n          arr[i] +=\"_\" \n          else arr[i]+= \"...\"\n        }\n          start2 = true \n      }\n      let doKokogo = []\n\n      for(let i = 0; i < esModel.TM.length; i ++)\n      {\n        if(esModel.TM[i].id == Number(toNode-1))\n        { \n          doKokogo.push(esModel.TM[i])\n        }\n      }\n      \n      let start3 = false\n      let rSide = []\n\n      for(let i = 0; i < cartes.length; i ++)\n      { \n        if(!start3)leftArray.push([])\n        rSide[i]=''\n        for(let j = 0; j <doKokogo.length; j++ )\n        {\n          rSide[i] += \"1_1\"\n          if(j+1 < doKokogo.length)\n          rSide[i] += \"-\"\n        }        \n        start3 = true\n      }  \n      for(let i = 0; i < cartes.length; i ++)\n      {\n        arr[i] += rSide[i] \n      }     \n      esModel.pravila_end[String(toNode)] = arr\nsetEsModel(esModel)\n},\nchangeEsName: (value) => {       \n  esModel.options.Name= String(value.target.value)\n  setEsModel(esModel)\n  RenderOptionsMenu()\n },\n changeEsAuthor: (value) => { \n  esModel.options.Author= String(value)\n  esModel.options.Author= String(value.target.value)\n  setEsModel(esModel)\n  RenderOptionsMenu()\n },\n      ChangePravila:(row, pos, value,urovenObrabotki) =>\n      {\n        let urovenPrav\n        urovenPrav = esModel.pravila_end[urovenObrabotki]\n        let leftSide = urovenPrav[row-1].split(\"...\")[0]\n        let rightSide = urovenPrav[row-1].split(\"...\")[1].split(\"-\")\n       rightSide[pos-1]=\"\"+value +'_'+rightSide[pos-1].split(\"_\")[1] \n   \n      let peresobran = \"\"+leftSide+\"...\"\n      let rightPeresobran=\"\"\n      for(let i = 0; i < rightSide.length; i++)\n      {       \n        rightPeresobran= rightPeresobran+rightSide[i]\n        if((i+1) < rightSide.length)\n        {\n          rightPeresobran = \"\"+rightPeresobran+\"-\"\n        } \n      }\n      peresobran = \"\"+peresobran+\"\"+rightPeresobran\n      urovenPrav[row-1] = peresobran\n      setEsModel(esModel)      \n      },\n      ChangePlotColor:(TmNumber, TermNumber, color) =>\n      {\n        esModel.TM[TmNumber].plotsColors[TermNumber] = color\n        setEsModel(esModel)\n        RenderSelectedTM(Number(TmNumber))\n      },\n       deletePointplot: (TmNumber, TermNumber) => {       \n        let deleteNumber = Object.keys(esModel.TM[TmNumber].coords[TermNumber]).length/2; \n        delete esModel.TM[TmNumber].coords[TermNumber][\"x\"+deleteNumber]\n        delete esModel.TM[TmNumber].coords[TermNumber][\"y\"+deleteNumber]\n        setEsModel(esModel)\n        RenderSelectedTM(Number(TmNumber))\n       },\n        addNewPointPlot: (TmNumber, TermNumber) => {\n          let newPointNumber = Object.keys(esModel.TM[TmNumber].coords[TermNumber]).length/2+1;\n          let newCoordsNameX = \"x\"+newPointNumber;\n          let newCoordsNameY = \"y\"+newPointNumber;\n          esModel.TM[TmNumber].coords[TermNumber][newCoordsNameX] = 0;\n          esModel.TM[TmNumber].coords[TermNumber][newCoordsNameY] = 0;\n          setEsModel(esModel) \n          RenderSelectedTM(Number(TmNumber))\n         },\n       changeCoordsValue: (TmNumber, TermNumber, key,value) => {       \n          esModel.TM[TmNumber].coords[TermNumber][key] = Number(value)\n          setEsModel(esModel)\n          RenderSelectedTM(Number(TmNumber))\n         },\n      deleteTerm: (TmNumber) => {\n        \n        if ( esModel.TM[TmNumber].termsCount == 1)\n        return\n\n        let willUpdate = false\n        for(let i = 0; i <esModel.graph.nodes.length; i++)\n        {\n         if( esModel.graph.nodes[i].id == (Number(TmNumber)+1) && esModel.graph.nodes[i].color == \"#F5DEB3\")\n         {\n          willUpdate = true          \n         }\n\n         if(esModel.graph.nodes[i].id == (Number(TmNumber)+1) && (esModel.graph.nodes[i].color == \"#008000\" || esModel.graph.nodes[i].color == \"#DA70D6\"|| esModel.graph.nodes[i].color == \"#FF0000\"))\n         {\n           esModel.pravila_end = []\n         }\n        }\n        esModel.TM[TmNumber].termsCount = esModel.TM[TmNumber].termsCount-1\n        //\n        let newTermName = \"term\"+ (Object.keys(esModel.TM[TmNumber].termsNames).length);\n      delete esModel.TM[TmNumber].termsNames[newTermName]\n       esModel.TM[TmNumber].coords.splice(esModel.TM[TmNumber].coords.length-1,1)  \n        esModel.TM[TmNumber].plotsColors.pop()\n        let popup = \"\"\n        for(let i =0; i< esModel.TM[TmNumber].termsCount; i++)\n        {\n          popup+=\"\"+esModel.TM[TmNumber].termsNames[\"term\"+String(i+1)]+\"\\n\"\n        }\n        esModel.graph.nodes[TmNumber].title=popup\n        networks.network.setData({nodes:esModel.graph.nodes, edges:esModel.graph.edges})\n\n        setEsModel(esModel)\n        for(let i = 0; i <esModel.graph.nodes.length; i++)\n        {\n     if((String(esModel.graph.nodes[i].color) == \"#FF0000\" || String(esModel.graph.nodes[i].color) == \"#DA70D6\" )&&!willUpdate )\n          {      \n            esModel.methods.UpdatePravila(esModel.graph.nodes[i].id)\n          }\n      }\n        setEsModel(esModel)\n       RenderSelectedTM(Number(TmNumber))\n\n       },\n      addNewTerm: (TmNumber) => {        \n        let willUpdate = false\n        for(let i = 0; i <esModel.graph.nodes.length; i++)\n        {\n         if( esModel.graph.nodes[i].id == (Number(TmNumber)+1) && esModel.graph.nodes[i].color == \"#F5DEB3\")\n         {\n          willUpdate = true\n         }\n\n         if(esModel.graph.nodes[i].id == (Number(TmNumber)+1) && (esModel.graph.nodes[i].color == \"#008000\" || esModel.graph.nodes[i].color == \"#DA70D6\"|| esModel.graph.nodes[i].color == \"#FF0000\"))\n         {\n           esModel.pravila_end = []\n         }\n        }\n        esModel.TM[TmNumber].termsCount = esModel.TM[TmNumber].termsCount+1\n       let newTermName = \"term\"+ (Object.keys(esModel.TM[TmNumber].termsNames).length+1);\n        esModel.TM[TmNumber].termsNames[newTermName] = \"new_term\"\n        let t= {x1:0,y1:0,x2:0,y2:0,x3:0,y3:0,x4:0,y4:0};\n         esModel.TM[TmNumber].coords.push(t);\n         esModel.TM[TmNumber].plotsColors.push(\"#000000\");\n         let popup = \"\"\n        for(let i =0; i< esModel.TM[TmNumber].termsCount; i++)\n        {\n          popup+=\"\"+esModel.TM[TmNumber].termsNames[\"term\"+String(i+1)]+\"\\n\"\n        }\n        esModel.graph.nodes[TmNumber].title=popup\n        networks.network.setData({nodes:esModel.graph.nodes, edges:esModel.graph.edges})\n        \n        \n        for(let i = 0; i <esModel.graph.nodes.length; i++)\n        {\n     if((String(esModel.graph.nodes[i].color) == \"#FF0000\" || String(esModel.graph.nodes[i].color) == \"#DA70D6\")&& !willUpdate )\n          {      \n            esModel.methods.UpdatePravila(esModel.graph.nodes[i].id)\n        }\n      }   \n        setEsModel(esModel)\n         RenderSelectedTM(Number(TmNumber))         \n       },\n      changeTermName: (TmNumber, TermNumber, newName) => {       \n        esModel.TM[TmNumber].termsNames[\"term\"+TermNumber] = newName\n        setEsModel(esModel)\n        let popup = \"\"\n        for(let i =0; i< esModel.TM[TmNumber].termsCount; i++)\n        {\n          popup+=\"\"+esModel.TM[TmNumber].termsNames[\"term\"+String(i+1)]+\"\\n\"\n        }\n        esModel.graph.nodes[TmNumber].title=popup\n        networks.network.setData({nodes:esModel.graph.nodes, edges:esModel.graph.edges})\n        RenderSelectedTM(Number(TmNumber))\n       },\n\n      AddTMInputLevel:(id) =>\n      {\n          esModel.TM.push({\n          id: id,\n          name: '',\n          termsCount:2,\n          termsNames: {term1: '', term2: '',},\n          coords:[{x1:0, y1:0, x2:0, y2:1, x3:1, y3:1,x4:1,y4:0},\n                  {x1:1, y1:0, x2:1, y2:1, x3:2, y3:1,x4:2,y4:0 },       \n                ],    \n                plotsColors:['#000000','#000000',] ,   \n        },)\n        setEsModel(esModel)\n      },      \n      ChangeSelectedTMName:(id,name) =>\n      {\n         esModel.TM[id].name = String(name)\n         esModel.graph.nodes[id].label = name\n         setEsModel(esModel)\n         RenderSelectedTM(Number(id))\n         networks.network.setData({nodes:esModel.graph.nodes, edges:esModel.graph.edges})         \n      },\n    } })\n    const [indexBodyHtml2, setindexBodyHtml2] = useState([['НАСТРОЙКИ'],[\n    <div>НАЗВАНИЕ ЭС: <input class = \"EsNameInput\"  value = {esModel.options.Name}  onInput={esModel.methods.changeEsName} />\n   АВТОР ЭС: <input class = \"EsAuthorInput\"   value = {esModel.options.Author}  onInput={esModel.methods.changeEsAuthor} />\n  </div>]]);\n    \n    \n  const { graph, events } = esModel;\n  const [ networks, setNetwork ] = useState({network: {}});\n  let states = { network: {} };\n  \n\nlet uroven =0\nlet zz\nlet pp=[]\nlet start \nlet urovniObrabotki={}\nfunction getLevelTMObrabotki(obj, zelen) {\n \n  \n  if(zz == undefined)\n  {\n    zz = zelen\n    start = obj\n  }\n  \n\n  for(let i =0; i < esModel.graph.edges.length; i++)\n  {\n    if(start == obj)\n    uroven =0\n    if(esModel.graph.edges[i].to == obj  )\n      {uroven = uroven +1        \n        if(zz.includes(esModel.graph.edges[i].from))\n        { \n          pp[pp.length]=(uroven)\n          uroven= uroven-1    \n        } else getLevelTMObrabotki(esModel.graph.edges[i].from)\n      }     \n  }\n  if(start == obj)\n  {\n    console.log(pp)\n    if(urovniObrabotki[Math.max(...pp)] == undefined)\n    {\n      urovniObrabotki[Math.max(...pp)] = []\n      urovniObrabotki[Math.max(...pp)][urovniObrabotki[Math.max(...pp)].length] =obj\n      start =undefined\n      zz = undefined\n    }\n    else {urovniObrabotki[Math.max(...pp)][urovniObrabotki[Math.max(...pp)].length] =obj\n      start =undefined\n      zz = undefined    \n    }  \n  }\n}\n\n  function  changePravila (row, pos, value, coeff ) { \n\n   esModel.methods.ChangePravila(row, pos, value, coeff)};\n  function  changeCoeff (row, pos, coeff, urObr ) {esModel.methods.ChangeCoeff(row, pos,  coeff, urObr)\n  };\n\n  function cartesian(arg) {\n    var r = [], args = arg;\n    args.reduceRight(function(cont, factor, i) {\n        return function(arr) {\n            for (var j=0, l=factor.length; j<l; j++) {\n                var a = arr.slice(); // clone arr\n                a[i] = factor[j];\n                cont(a);\n            }\n        };\n    }, Array.prototype.push.bind(r))(new Array(args.length));\nlet t = r.length \n    return r;\n}\n\nfunction SendXmlModelling()\n{\n let tempXML = {}\n if(esModel.TM.length == 1 )\n {\n   tempXML[\"TM\"]= []\n   tempXML[\"TM\"].push(esModel.TM)\n }\n else tempXML[\"TM\"] = esModel.TM\n let pravilaDict = {}\n let pravilaDict1 = {}\n for(let t = 0; t< esModel.pravila_end.length; t++){\nlet st = \"\"+t\npravilaDict[st] = esModel.pravila_end[t]\n }\n pravilaDict1 = pravilaDict\n for (var key in pravilaDict)\n {\n\nif(pravilaDict[key] == \"\")\n{pravilaDict[key] = ''\n}\npravilaDict['n'+key] = pravilaDict[key]\ndelete pravilaDict[key]\n }\n tempXML[\"pravila_end\"] = pravilaDict1\n tempXML[\"pravila_temp\"] = pravilaDict\n tempXML[\"graph\"] = esModel.graph\n tempXML[\"counter\"] = esModel.counter\n tempXML[\"options\"] = esModel.options\n\n\nlet tempStructure = {} // esModel.structure\n for (var key in esModel.structure)\n {\n   tempStructure['n_'+key] = esModel.structure[key]\n }\n tempXML[\"structure\"] = tempStructure\n\n     const file = new Blob([o2x(tempXML)],{ type: 'text/xml'});\n     const zapros = esModel.zapros // {'1':'1.35','2':'1','3':'1'}\n     setxmlModeling(file)\n    const data = new FormData()\n    data.append('zapros', JSON.stringify(zapros))\n    data.append('file', file)\n    axios.post(\"https://aesfu.ru/api/study/flm-builder\", data, { //https://aesfu.ru/api/study/flm-builder\n   })\n .then(res => { \n  console.log(dataS)\nif (esModel.regimZaprosa == 1)\n  {\n    RenderModelingMenu(\"[\" + res.data[0] + \",\"+res.data[1]+\"]\")\n    \n\n  } \nif (esModel.regimZaprosa == 2)\n{\nconsole.log(esModel.TM[esModel.TM.length-1].termsNames[\"term\"+res.data[0]])\n    RenderModelingMenu(esModel.TM[esModel.TM.length-1].termsNames[\"term\"+res.data[0]]+ \" с вероятностью \" +res.data[1])\n\n}\n   \n\n   \n\n  })  \n\n}\n\n function SaveToXMLOnComputer()\n {\n  let tempXML = {}\n  if(esModel.TM.length == 1 )\n  {\n    tempXML[\"TM\"]= []\n    tempXML[\"TM\"].push(esModel.TM)\n  }\n  else tempXML[\"TM\"] = esModel.TM\n\n\n\nconsole.log(esModel.pravila_end)\n  let pravilaDict = {}\n  let pravilaDict1 = {}\n  for(let t = 0; t< esModel.pravila_end.length; t++){\nlet st = \"\"+t\npravilaDict[st] = esModel.pravila_end[t]\n  }\n  pravilaDict1 = pravilaDict\n  for (var key in pravilaDict)\n  {\n\nif(pravilaDict[key] == \"\")\n{pravilaDict[key] = ''\n}\npravilaDict['n'+key] = pravilaDict[key]\ndelete pravilaDict[key]\n  }\n  console.log(pravilaDict)\n  tempXML[\"pravila_end\"] = pravilaDict1\n  tempXML[\"pravila_temp\"] = pravilaDict\n  tempXML[\"graph\"] = esModel.graph\n  tempXML[\"counter\"] = esModel.counter\n  tempXML[\"options\"] = esModel.options\n\n\n let tempStructure = {} // esModel.structure\n  for (var key in esModel.structure)\n  {\n    tempStructure['n_'+key] = esModel.structure[key]\n  }\n  tempXML[\"structure\"] = tempStructure\n\n  const element = document.createElement(\"a\");\n  document.body.appendChild(element); \n  \n      const file = new Blob([o2x(tempXML)],{ type: 'text/xml'});\n      element.href = URL.createObjectURL(file);\n      element.download = \"myFile654.xml\";      \n      element.click();\n     \n\n }\n function Pravila(arg)\n {\n let uroven = 0\n let urovniPravil = []\n  let okolo = [] \n  okolo.push(<div class = \"Blochek\">\n \n    {Table(esModel, 2,changePravila,changeCoeff,arg)  }\n \n    </div>)\n\n  setindexBodyHtml2(okolo)\n\n }\n function ConsoleXml(xmlStr)\n{\nconsole.log(xmlStr)\nconst a = document.createElement(\"a\");\ndocument.body.appendChild(a); \na.download = \"FLMmodel.xml\"\n    const file = new File([xmlStr], \"FLMmodel.xml\",{ type: 'text/xml'});\n    sendToServer( file)\n} \nfunction XmlOnServer()\n{\n//let f = new File(\"./temp.xml\")\nconst iconv = require('iconv-lite');\nconst encodedData =  iconv.decode(Buffer.from(xmlFiles), 'utf-8')//windows-1251 //Buffer.from(response.data)\nconst parser = new XMLParser()\nlet jObj = parser.parse(encodedData)\nconsole.log(jObj);\n/*\n\nconst axios = require('axios').default;\naxios.get(\"/xmlS/filedddd.xml\", {  \n    responseType: 'arraybuffer',\n    responseEncoding: 'binary'  \n\n}).then((response) => {\n\n\n})\n.catch((response) => {\n  console.log('FAILURE!!'+response);\n}); */\n}\n\nconst changeTermName = event => {    \n  input_Name = event.target.value\n\n  if(event.target.name.split(\"_\")[0].match(/[a-zA-Z]+/g)[0] == \"termInput\")\n  {  \n    esModel.methods.changeTermName(event.target.name.split(\"_\")[0].match(/\\d+/g)[0],event.target.name.split(\"_\")[1],event.target.value)   \n  }\n};\n\n\nconst ChangeColor = event => \n{\nif(event.target.id.split(\"_\")[0].match(/[a-zA-Z]+/g)[0] == 'termInput')\n    {  \n      esModel.methods.ChangePlotColor( event.target.id.split(\"_\")[0].match(/\\d+/g)[0],event.target.id.split(\"_\")[1] - 1,event.target.value)     \n    }\n};\nconst DeletePointPlot = event => {  \n if(event.target.id.split(\"_\")[0].match(/[a-zA-Z]+/g)[0] == \"termInput\"){\n esModel.methods.deletePointplot(event.target.id.split(\"_\")[0].match(/\\d+/g)[0],event.target.id.split(\"_\")[1]-1);\n}\n }\nconst changeCoordsValues = event => {  \n    input_Name = event.target.name\n  if(event.target.id.split(\"_\")[0].match(/[a-zA-Z]+/g)[0] == \"termInput\"){    \n    esModel.methods.changeCoordsValue(event.target.id.split(\"_\")[0].match(/\\d+/g)[0],event.target.id.split(\"_\")[1] - 1,event.target.name.split(\"_\")[0],event.target.value)     \n    }\n  };\n  const addNewPointPlot= event => { \n    if(event.target.id.split(\"_\")[0].match(/[a-zA-Z]+/g)[0] == \"termInput\"){\n    esModel.methods.addNewPointPlot(event.target.id.split(\"_\")[0].match(/\\d+/g)[0],event.target.id.split(\"_\")[1]-1);        \n  }        \n  }\n\nconst AddNewTerm = event => {esModel.methods.addNewTerm(event.target.id)};\nconst DeleteTerm = event => {esModel.methods.deleteTerm(event.target.id)};\n\n\n\n\nconst RenderOptionsMenu = selectedIndex => {\n\n  let indexB= []\n  indexB= ['OPTIONS']\n  indexB.push (\n    <div>NAME ES:<input class = \"EsNameInput\"  value = {esModel.options.Name} onInput={esModel.methods.changeEsName} />\n    AUTHOR ES:<input class = \"EsAuthorInput\"   value = {esModel.options.Author}  onInput={esModel.methods.changeEsAuthor} />\n   </div>\n    )\n  setindexBodyHtml2(indexB)\n\n  //\n}\nconst ChangeZapros = selectedIndex => {\n  \n // console.log(selectedIndex.target.id + \" value = \"+String(selectedIndex.target.selectedIndex+1))\n\n esModel.methods.SetZapros(selectedIndex.target.id, String(selectedIndex.target.selectedIndex+1))\n}\n\n\n//режим вывода в окне моделирования\nconst ChangeRegimZaprosa = selectedIndex => {\n  \n  // console.log(selectedIndex.target.id + \" value = \"+String(selectedIndex.target.selectedIndex+1))\n  console.log(selectedIndex.target.value);\n  esModel.methods.changeRegimVivoda(selectedIndex.target.value)\n\n \n  //esModel.methods.SetZapros(selectedIndex.target.id, String(selectedIndex.target.selectedIndex+1))\n }\n \nconst ChangeZaprosInput = selectedIndex => {\n  \n //console.log(selectedIndex.target.name+\"   \"+String(selectedIndex.target.value))\n \n  esModel.methods.SetZapros(selectedIndex.target.name, String(selectedIndex.target.value))\n }\n\n\n  const RenderModelingMenu = data => {\n    let indexB= []\n    indexB= ['МОДЕЛИРОВАНИЕ']\n    console.log(esModel.structure)\n     //onChange={}  console.log(esModel.TM[x].name)\n     indexB.push(<div><select onChange={ChangeRegimZaprosa} >\n      <option value=\"1\">Значение</option>\n      <option value=\"2\">Значение+Расшифровка</option> \n    </select>\n    </div>);\n    \n    for(let i =0; i < esModel.structure['input'].length; i++)\n    {\n      let nameTM = ''\n      let number = 0\n      \n      for(let x = 0; x < esModel.TM.length; x++)\n      {\n        if(esModel.TM[x].id == String(esModel.structure['input'][i] -1))\n        {     \n          nameTM += esModel.TM[x].name\n          number = x\n        }\n      }\n     \n\nif(esModel.zapros[esModel.structure['input'][i]] == undefined)\n      esModel.methods.DefZapros(esModel.structure['input'][i])\n        //решаем вывести  выпадающий список или поле ввода\n        if (Object.keys(esModel.TM[number].coords[0]).length == 2 )\n        {\n          indexB.push (        \n            <div>ТЕРМ - МНОЖЕСТВО ( {esModel.structure['input'][i]} ) ({nameTM}):\n            <select className=\"custom-select\" id={esModel.structure['input'][i]} onChange={ChangeZapros} defaultValue = {esModel.TM[esModel.structure['input'][i]-1].termsNames[\"term\"+esModel.zapros[esModel.structure['input'][i]]]}>\n               {Object.values(esModel.TM[number].termsNames).map((option, index) =>\n                 <option key={ index} id={option} value = {option}>{option}</option>\n              ) }\n          </select>\n           </div>)\n        }\n        else {\nindexB.push (        \n  <div>ТЕРМ - МНОЖЕСТВО ( {esModel.structure['input'][i]} ) ({nameTM}):\n <input type=\"text\" \n            className=\"form-control\" \n            placeholder=\"...\" \n            name ={esModel.structure['input'][i]}\n            onChange={ChangeZaprosInput}/ >\n\n\n </div>)\n\n        }\n     \n     \n    }    \n    \n    indexB.push ( <div><button  onClick={SendXmlModelling} > МОДЕЛИРОВАТЬ</button></div>)\n\n    console.log( data)\n   if(typeof data == \"string\")   \n    indexB.push (<div>{data} </div>) \n       setindexBodyHtml2(indexB) \n    \n    }\n\nconst changeSelectedTMName = event => {   \n  input_Name = event.target.id\nif(event.target.id.split(\"_\")[0].match(/[a-zA-Z]+/g)[0] == \"term\")\n{ \n    esModel.methods.ChangeSelectedTMName(event.target.id.split(\"_\")[1],event.target.value)\n}\n\n};  \n\nconst RenderSelectedTM = selectedIndex => {\n  //console.log(esModel)\n  let tm \n  \n   tm = selectedIndex\n  let arrayTerms =[]\n  let temp =[]\n  let points4Plots =[]\n  let points ;\n  inputLevelCounter = 0\n  let pravilaButton = []\n  \n for(let i = 0; i < esModel.graph.nodes.length;i++)\n {\n  if(esModel.graph.nodes[i].id == (selectedIndex+1) && (esModel.graph.nodes[i].color == '#DA70D6' || esModel.graph.nodes[i].color == '#FF0000'))\n  {\n    pravilaButton = [<button  id = {tm} onClick={RenderPravila}> ПРАВИЛА: </button>]\n\n  }\n\n }\n  for(let i=0; i <esModel.TM.length; i++)  \n  {\n        if(esModel.TM[i].id == (tm))\n    {\n\n      tm = i\n    }\n  }\n \n  \n    let nm = \"term_\"+tm\n  temp.push(     <div>\n\n    <div> <label class=\"myLabel\" > ТЕРМ - МНОЖЕСТВО №{tm + 1} </label></div>\n     <label class=\"myLabel\" >НАЗВАНИЕ ТМ: </label>\n        <input type=\"text\" \n                  value= {esModel.TM[tm].name}\n                  className=\"form-control\" \n                  id= {nm}\n                  placeholder=\"...\" \n                  onChange={changeSelectedTMName}/ >\n                  <div></div>\n        <label class=\"myLabel\" > ТЕРМОВ В ТМ:  </label>\n        <input type=\"text\" \n                  value= {esModel.TM[tm].termsCount}\n                  className=\"form-control\" \n                  placeholder=\"...\" / >\n<button id = {tm} onClick={AddNewTerm}> ДОБАВИТЬ ТЕРМ</button>\n<button  id = {tm} onClick={DeleteTerm}> УДАЛИТЬ ТЕРМ</button>\n{pravilaButton}\n<div></div>\n\n    </div>)\n    let TMindex = 0\n  for(let i=0; i <esModel.TM[tm].coords.length; i++)  \n  {\n    let j = i + 1\n    let stringLabel = \"ТЕРМ №\" + j\n    let stringNameTerm = \"termInput\"+tm+\"_\"+j\n    points4Plots = []\n\n   for(let j=0; j <Object.keys(esModel.TM[tm].coords[i]).length/2; j++)  \n  {   \n      let xName = \"x\"+(j+1)+ \"_input\"\n      let yName = \"y\"+(j+1)+ \"_input\"\n\n    points4Plots.push (\n    <div>x{j+1}: <input class = \"plotInput\"  type='number' step=\"0.1\" min='-1000' value = {esModel.TM[tm].coords[i][\"x\"+(j+1)]}  id = {stringNameTerm} name={xName} onInput={changeCoordsValues} />\n     y{j+1}: <input class = \"plotInput\"  type='number' step=\"0.1\" min='0' value = {esModel.TM[tm].coords[i][\"y\"+(j+1)]} id = {stringNameTerm} name={yName} onInput={changeCoordsValues} />\n   </div>\n    )\n  \n  }\n  temp.push(\n    <div  class=\"blockMy\">\n    <div class=\"blockMy\" >\n    <div > {stringLabel} </div><div><input name= {stringNameTerm} value = {esModel.TM[tm].termsNames[\"term\"+(i+1)]} type=\"text\" onInput = {changeTermName}  /> </div>\n\n    <div  class=\"blockMy\"><button onClick={addNewPointPlot} id= {stringNameTerm}>+</button>\n    <button onClick={DeletePointPlot} id= {stringNameTerm}>-</button>\n    <input type=\"color\" class =\"odin\" id= {stringNameTerm}  onChange={ChangeColor}  value ={esModel.TM[tm].plotsColors[i]}/></div>\n    {points4Plots}  \n    </div>    \n    </div>  )\n    }\n\ntemp.push( <div class=\"Plot\">\n  <div ></div>\n  <div >{App(esModel.TM[tm].coords,esModel.TM[tm].termsCount, \n  esModel.TM[tm].plotsColors)}</div>\n  \n   </div>)\n  let okolo = [] \n  okolo.push(<div class = \"Blochek\">\n  {temp}\n    </div>)\n  setindexBodyHtml2(okolo)\ninputLevelCounter++\n/* <div class = \"Razrez\" >. </div>*/\n}\n\nfunction GoToPravila(index)\n{\nesModel.pravilaMode = index\n\n}\n\nconst RenderPravila = (events) => {\n  GoToPravila(1)\n  setEsModel(esModel)\n  \n   let uroven  \n   if(events.target == undefined)\n   uroven = events\n   else uroven = Number(events.target.id)+1\n\n\n   console.log(uroven)\n Pravila(uroven)\n  }\nfunction sendToServer(file)\n{\nconst data = new FormData()\ndata.append('file', file)\naxios.post(\"http://localhost:8000/upload\", data, { \n   // receive two    parameter endpoint url ,form data\n})\n.then(res => { // then print response status\n  XmlOnServer()\nsetXmlName( \"\"+xmlFiles.name)\n})\n}\n\n\n\n\n\n const handleSubmit =(event) => {\n\nevent.preventDefault();\n\nconst iconv = require('iconv-lite');\nconst fileToArrayBuffer = require('file-to-array-buffer')\nconst reader = new FileReader()\nvar encodedData = \"\"\n\nconst parser = new XMLParser()\nreader.readAsText(xmlFiles)\nreader.onload = _event => {\n    const content = _event.target.result\n    let jObj = parser.parse(content)\n    \n    console.log(jObj)\n    if(jObj.TM.length == undefined)\n  {esModel.TM =[]\n   esModel.TM[0] = jObj.TM\n  }\n  else   esModel.TM = jObj.TM\n\n  esModel.graph= jObj.graph\n  esModel.counter = jObj.counter\n  esModel.options = jObj.options\n  let tempStructure = {}\n  for (let i =0; i < Object.keys(jObj.structure).length; i++)\n  {   \n  tempStructure[Object.keys(jObj.structure)[i].split('_')[1]] = jObj.structure[Object.keys(jObj.structure)[i]]\n  }\n  \n  esModel.structure = tempStructure\n  esModel.pravila_end = []//jObj.pravila_end\n  for (let i =0; i < Object.keys(jObj.pravila_temp).length; i++)\n  {   \n    esModel.pravila_end[i] = jObj.pravila_temp['n'+(i)]\n  }\n  setEsModel(esModel)  \n  RenderOptionsMenu()\n    // Do the parsing with content\n} \n  }\n  const handleFileSelect = (event) => {\n    setXmlFiles(event.target.files[0])\n  }\nlet inp_termMn_1 = 8;\n/*\n<button  onClick={ConsoleXml}> XML</button>\n    <button  onClick={SaveModelToXML}> TO XML</button>\n    <input type=\"file\" id=\"myFile\" onChange={(e)=>UploadXML(e)} />\n*/\n  return (    \n    <div>\n    <button  onClick={SaveToXMLOnComputer} >SAVE MODEL TO COMPUTER</button>\n    <button  onClick={esModel.methods.ChangeX} >SORT</button>    \n    <button  onClick={RenderOptionsMenu} >OPTIONS</button>\n    <button  onClick={RenderModelingMenu} > MODELING</button> \n    <input type=\"file\" onChange={handleFileSelect}/>\n    <button type=\"button\"  onClick={handleSubmit}> Загрузить  </button> \n     \n     \n  <div class=\"Blochek\" > <Graph id=\"graph\" getNetwork={(network) => \n   {networks.network= network\n  setNetwork(networks)\n  }}\n   graph={esModel.graph} options={options} events={esModel.events} style={{ width: \"800px\", height: \"600px\",position: \"absolute\",right: \"0\",border: \"solid\" }} /></div>\n    <div class=\"blockMy\" >   {indexBodyHtml2}\n    \n     </div >    \n     </div>     \n      );\n}ReactDOM.render(<FlmTree />, document.getElementById(\"root\"));\n\n\n","import React from \"react\";\n\nconst EditableRow = ({\n  editFormData,\n  handleEditFormChange,\n  handleCancelClick,\n}) => {\n  return (\n    <tr>\n      <td>\n        <input\n          type=\"text\"\n          required=\"required\"\n          placeholder=\"Enter a name...\"\n          name=\"fullName\"\n          value={editFormData.fullName}\n          onChange={handleEditFormChange}\n        ></input>\n      </td>\n      <td>\n        <input\n          type=\"text\"\n          required=\"required\"\n          placeholder=\"Enter an address...\"\n          name=\"address\"\n          value={editFormData.address}\n          onChange={handleEditFormChange}\n        ></input>\n      </td>\n      <td>\n        <input\n          type=\"text\"\n          required=\"required\"\n          placeholder=\"Enter a phone number...\"\n          name=\"phoneNumber\"\n          value={editFormData.phoneNumber}\n          onChange={handleEditFormChange}\n        ></input>\n      </td>\n      <td>\n        <input\n          type=\"email\"\n          required=\"required\"\n          placeholder=\"Enter an email...\"\n          name=\"email\"\n          value={editFormData.email}\n          onChange={handleEditFormChange}\n        ></input>\n      </td>\n      <td>\n        <button type=\"submit\">Save</button>\n        <button type=\"button\" onClick={handleCancelClick}>\n          Cancel\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nexport default EditableRow;\n"],"sourceRoot":""}